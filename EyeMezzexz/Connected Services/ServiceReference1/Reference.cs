//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.BarcodeWebServiceSoap")]
    public interface BarcodeWebServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveStaffIn(string StaffEmailId, string ScanInTime, string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffIn", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveStaffInAsync(string StaffEmailId, string ScanInTime, string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveStaffOut(string StaffEmailId, string ScanOutTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffOut", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveStaffOutAsync(string StaffEmailId, string ScanOutTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffScanIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveStaffScanIn(string StaffEmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffScanIn", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveStaffScanInAsync(string StaffEmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffScanOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveStaffScanOut(string StaffEmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStaffScanOut", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveStaffScanOutAsync(string StaffEmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getproductdetailsbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getproductdetailsbycompanyResponseGetproductdetailsbycompanyResult getproductdetailsbycompany(string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getproductdetailsbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getproductdetailsbycompanyResponseGetproductdetailsbycompanyResult> getproductdetailsbycompanyAsync(string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSellinglevel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetSellinglevelResponseGetSellinglevelResult GetSellinglevel(string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSellinglevel", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetSellinglevelResponseGetSellinglevelResult> GetSellinglevelAsync(string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderRecievedScanByDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.OrderRecievedScanByDetailsResponseOrderRecievedScanByDetailsResult OrderRecievedScanByDetails(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderRecievedScanByDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.OrderRecievedScanByDetailsResponseOrderRecievedScanByDetailsResult> OrderRecievedScanByDetailsAsync(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSameCustomerOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetSameCustomerOrderResponseGetSameCustomerOrderResult GetSameCustomerOrder(string OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSameCustomerOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetSameCustomerOrderResponseGetSameCustomerOrderResult> GetSameCustomerOrderAsync(string OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LastScanInDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.LastScanInDetailsResponseLastScanInDetailsResult LastScanInDetails(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LastScanInDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.LastScanInDetailsResponseLastScanInDetailsResult> LastScanInDetailsAsync(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SameDayScanInDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.SameDayScanInDetailsResponseSameDayScanInDetailsResult SameDayScanInDetails(string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SameDayScanInDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SameDayScanInDetailsResponseSameDayScanInDetailsResult> SameDayScanInDetailsAsync(string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_Amazon_Click_And_Collect_Order_ForPickedUP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.Get_Amazon_Click_And_Collect_Order_ForPickedUPResponseGet_Amazon_Click_And_Collect_Order_ForPickedUPResult Get_Amazon_Click_And_Collect_Order_ForPickedUP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_Amazon_Click_And_Collect_Order_ForPickedUP", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.Get_Amazon_Click_And_Collect_Order_ForPickedUPResponseGet_Amazon_Click_And_Collect_Order_ForPickedUPResult> Get_Amazon_Click_And_Collect_Order_ForPickedUPAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_Saved_Notification_Time", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.Get_Saved_Notification_TimeResponseGet_Saved_Notification_TimeResult Get_Saved_Notification_Time(string msgtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_Saved_Notification_Time", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.Get_Saved_Notification_TimeResponseGet_Saved_Notification_TimeResult> Get_Saved_Notification_TimeAsync(string msgtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mergepdf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string mergepdf(ServiceReference1.mergepdfDT dt, string mergedFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mergepdf", ReplyAction="*")]
        System.Threading.Tasks.Task<string> mergepdfAsync(ServiceReference1.mergepdfDT dt, string mergedFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportASTEbayOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ImportASTEbayOrders(ServiceReference1.ArrayOfXElement ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportASTEbayOrders", ReplyAction="*")]
        System.Threading.Tasks.Task ImportASTEbayOrdersAsync(ServiceReference1.ArrayOfXElement ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportAmazonForAST", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ImportAmazonForAST(ServiceReference1.ArrayOfXElement ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportAmazonForAST", ReplyAction="*")]
        System.Threading.Tasks.Task ImportAmazonForASTAsync(ServiceReference1.ArrayOfXElement ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/createconsignment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int createconsignment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/createconsignment", ReplyAction="*")]
        System.Threading.Tasks.Task<int> createconsignmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getlistofcreatedconsignment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int getlistofcreatedconsignment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getlistofcreatedconsignment", ReplyAction="*")]
        System.Threading.Tasks.Task<int> getlistofcreatedconsignmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getlistofcreatedconsignmentast", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int getlistofcreatedconsignmentast();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getlistofcreatedconsignmentast", ReplyAction="*")]
        System.Threading.Tasks.Task<int> getlistofcreatedconsignmentastAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAmazonClickAndCollectInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateAmazonClickAndCollectInventory(long VariantId, int Qty, string Reason, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAmazonClickAndCollectInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateAmazonClickAndCollectInventoryAsync(long VariantId, int Qty, string Reason, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getACACInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getACACInventoryResponseGetACACInventoryResult getACACInventory(string VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getACACInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getACACInventoryResponseGetACACInventoryResult> getACACInventoryAsync(string VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getOrderRecievedReadyToPrintforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getOrderRecievedReadyToPrintforcomputerResponseGetOrderRecievedReadyToPrintforcomputerResult getOrderRecievedReadyToPrintforcomputer(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getOrderRecievedReadyToPrintforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getOrderRecievedReadyToPrintforcomputerResponseGetOrderRecievedReadyToPrintforcomputerResult> getOrderRecievedReadyToPrintforcomputerAsync(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPUserResponseJKIOPUserResult JKIOPUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPUserResponseJKIOPUserResult> JKIOPUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPGetAccessForRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPGetAccessForRoleResponseJKIOPGetAccessForRoleResult JKIOPGetAccessForRole(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPGetAccessForRole", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPGetAccessForRoleResponseJKIOPGetAccessForRoleResult> JKIOPGetAccessForRoleAsync(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadAllUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadAllUserResponseJKIOPLoadAllUserResult JKIOPLoadAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadAllUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadAllUserResponseJKIOPLoadAllUserResult> JKIOPLoadAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveJKIOPUser(string UserId, string RoleId, string UserName, string UserPassword, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveJKIOPUserAsync(string UserId, string RoleId, string UserName, string UserPassword, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadAllStudent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadAllStudentResponseJKIOPLoadAllStudentResult JKIOPLoadAllStudent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadAllStudent", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadAllStudentResponseJKIOPLoadAllStudentResult> JKIOPLoadAllStudentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteUserMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteUserMaster(long UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteUserMaster", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteUserMasterAsync(long UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetdAllStudentbysession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetdAllStudentbysessionResponseGetdAllStudentbysessionResult GetdAllStudentbysession(string session, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetdAllStudentbysession", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetdAllStudentbysessionResponseGetdAllStudentbysessionResult> GetdAllStudentbysessionAsync(string session, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadUploadedfileById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.DownloadUploadedfileByIdResponseDownloadUploadedfileByIdResult DownloadUploadedfileById(string FormType, string FormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadUploadedfileById", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.DownloadUploadedfileByIdResponseDownloadUploadedfileByIdResult> DownloadUploadedfileByIdAsync(string FormType, string FormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadUploadedfileBySupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.DownloadUploadedfileBySupplierResponseDownloadUploadedfileBySupplierResult DownloadUploadedfileBySupplier(string FormType, string FormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadUploadedfileBySupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.DownloadUploadedfileBySupplierResponseDownloadUploadedfileBySupplierResult> DownloadUploadedfileBySupplierAsync(string FormType, string FormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStudentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadStudentInfoResponseJKIOPLoadStudentInfoResult JKIOPLoadStudentInfo(string StudentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStudentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStudentInfoResponseJKIOPLoadStudentInfoResult> JKIOPLoadStudentInfoAsync(string StudentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStudentPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadStudentPaymentInfoResponseJKIOPLoadStudentPaymentInfoResult JKIOPLoadStudentPaymentInfo(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStudentPaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStudentPaymentInfoResponseJKIOPLoadStudentPaymentInfoResult> JKIOPLoadStudentPaymentInfoAsync(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPUserRoll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveJKIOPUserRoll(string RoleName, string RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPUserRoll", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveJKIOPUserRollAsync(string RoleName, string RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadROll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadROllResponseJKIOPLoadROllResult JKIOPLoadROll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadROll", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadROllResponseJKIOPLoadROllResult> JKIOPLoadROllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPUSERROll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPUSERROllResponseJKIOPUSERROllResult JKIOPUSERROll(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPUSERROll", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPUSERROllResponseJKIOPUSERROllResult> JKIOPUSERROllAsync(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPUserRollAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveJKIOPUserRollAccess(bool DeleteAccess, string ScreenId, bool ViewAccess, bool EditAccess, string RoleAccessId, string RoleId, bool LockEditAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPUserRollAccess", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveJKIOPUserRollAccessAsync(bool DeleteAccess, string ScreenId, bool ViewAccess, bool EditAccess, string RoleAccessId, string RoleId, bool LockEditAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPGetAllScreenForRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPGetAllScreenForRoleResponseJKIOPGetAllScreenForRoleResult JKIOPGetAllScreenForRole(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPGetAllScreenForRole", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPGetAllScreenForRoleResponseJKIOPGetAllScreenForRoleResult> JKIOPGetAllScreenForRoleAsync(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPStudent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveJKIOPStudent(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPStudent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveJKIOPStudentAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStudent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveStudent(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStudent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveStudentAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStudentDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveStudentDetails(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStudentDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveStudentDetailsAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStudentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveStudentInfo(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue, 
                    bool IsSCStudent, 
                    string LedgerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveStudentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveStudentInfoAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue, 
                    bool IsSCStudent, 
                    string LedgerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadPaymentResponseJKIOPLoadPaymentResult JKIOPLoadPayment(string coursesession, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentResponseJKIOPLoadPaymentResult> JKIOPLoadPaymentAsync(string coursesession, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkip(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkip", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkipAsync(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecievedamountHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetRecievedamountHistory(string session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecievedamountHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRecievedamountHistoryAsync(string session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecievedamountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetRecievedamountDetails(string session, string Name, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecievedamountDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRecievedamountDetailsAsync(string session, string Name, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetstudentforInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetstudentforInvoiceResponseGetstudentforInvoiceResult GetstudentforInvoice(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetstudentforInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetstudentforInvoiceResponseGetstudentforInvoiceResult> GetstudentforInvoiceAsync(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPaymentDetailBySPId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadPaymentDetailBySPIdResponseJKIOPLoadPaymentDetailBySPIdResult JKIOPLoadPaymentDetailBySPId(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPaymentDetailBySPId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentDetailBySPIdResponseJKIOPLoadPaymentDetailBySPIdResult> JKIOPLoadPaymentDetailBySPIdAsync(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPaymentBySPId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadPaymentBySPIdResponseJKIOPLoadPaymentBySPIdResult JKIOPLoadPaymentBySPId(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPaymentBySPId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentBySPIdResponseJKIOPLoadPaymentBySPIdResult> JKIOPLoadPaymentBySPIdAsync(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPaymentByPaymentId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadPaymentByPaymentIdResponseJKIOPLoadPaymentByPaymentIdResult JKIOPLoadPaymentByPaymentId(string PId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadPaymentByPaymentId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentByPaymentIdResponseJKIOPLoadPaymentByPaymentIdResult> JKIOPLoadPaymentByPaymentIdAsync(string PId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSubmitstudentpaymenttobankhandover", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveSubmitstudentpaymenttobankhandover(string PId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSubmitstudentpaymenttobankhandover", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveSubmitstudentpaymenttobankhandoverAsync(string PId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SavePaymentInfo(string PId, string PaymentMode, string Amount, string EMIAmount, string BankTransactionNumber, bool IsHandOver, string HandoverName, string ApproveBy, string SubmitDate, string username, string StudentId, string Recieveddate, string SubmitTransactionnumber, string StudentPaymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SavePaymentInfoAsync(string PId, string PaymentMode, string Amount, string EMIAmount, string BankTransactionNumber, bool IsHandOver, string HandoverName, string ApproveBy, string SubmitDate, string username, string StudentId, string Recieveddate, string SubmitTransactionnumber, string StudentPaymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deletePaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deletePaymentInfo(long PId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deletePaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deletePaymentInfoAsync(long PId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deletestudentPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deletestudentPaymentInfo(long SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deletestudentPaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deletestudentPaymentInfoAsync(long SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deletestudentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deletestudentInfo(long SId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deletestudentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deletestudentInfoAsync(long SId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteSupplierPaymentHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteSupplierPaymentHistory(long SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteSupplierPaymentHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteSupplierPaymentHistoryAsync(long SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteSupplier(long SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteSupplierAsync(long SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveDocuments(string DId, string Title, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveDocumentsAsync(string DId, string Title, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDocumentResponseGetDocumentResult GetDocument(string DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDocumentResponseGetDocumentResult> GetDocumentAsync(string DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDocumentByIdResponseGetDocumentByIdResult GetDocumentById(string DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentById", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDocumentByIdResponseGetDocumentByIdResult> GetDocumentByIdAsync(string DocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDocumentById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteDocumentById(long DId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDocumentById", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteDocumentByIdAsync(long DId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSupplierPaymentHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveSupplierPaymentHistory(string SPId, string supplierid, string ExpenseReason, string ExpenseAmount, bool IsApproved, string ApproveBy, string ExpenseImage, string username, string paymentmode, string transactionId, string PaymentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSupplierPaymentHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveSupplierPaymentHistoryAsync(string SPId, string supplierid, string ExpenseReason, string ExpenseAmount, bool IsApproved, string ApproveBy, string ExpenseImage, string username, string paymentmode, string transactionId, string PaymentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStaffExpense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadStaffExpenseResponseJKIOPLoadStaffExpenseResult JKIOPLoadStaffExpense();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStaffExpense", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStaffExpenseResponseJKIOPLoadStaffExpenseResult> JKIOPLoadStaffExpenseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStaffExpenseById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadStaffExpenseByIdResponseJKIOPLoadStaffExpenseByIdResult JKIOPLoadStaffExpenseById(string EId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadStaffExpenseById", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStaffExpenseByIdResponseJKIOPLoadStaffExpenseByIdResult> JKIOPLoadStaffExpenseByIdAsync(string EId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadSupplierById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadSupplierByIdResponseJKIOPLoadSupplierByIdResult JKIOPLoadSupplierById(string SId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadSupplierById", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadSupplierByIdResponseJKIOPLoadSupplierByIdResult> JKIOPLoadSupplierByIdAsync(string SId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadSupplierResponseJKIOPLoadSupplierResult JKIOPLoadSupplier(string supplier, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadSupplierResponseJKIOPLoadSupplierResult> JKIOPLoadSupplierAsync(string supplier, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveJKIOPSupplier(string SId, string Name, string Email, string PhoneNo, string Address, string Comment, string BankName, string AccountNo, string IFSCCode, string username, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveJKIOPSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveJKIOPSupplierAsync(string SId, string Name, string Email, string PhoneNo, string Address, string Comment, string BankName, string AccountNo, string IFSCCode, string username, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadstudentbysearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPLoadstudentbysearchResponseJKIOPLoadstudentbysearchResult JKIOPLoadstudentbysearch(string RollNumber, string Firstname, string FatherName, string dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPLoadstudentbysearch", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadstudentbysearchResponseJKIOPLoadstudentbysearchResult> JKIOPLoadstudentbysearchAsync(string RollNumber, string Firstname, string FatherName, string dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPStudentPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPStudentPaymentInfoResponseJKIOPStudentPaymentInfoResult JKIOPStudentPaymentInfo(string StudentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPStudentPaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPStudentPaymentInfoResponseJKIOPStudentPaymentInfoResult> JKIOPStudentPaymentInfoAsync(string StudentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSupplierExpenseHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveSupplierExpenseHistory(string HId, string EId, string PaymentMode, string Transactionnumber, string Amount, string PaidDate, bool IsApproved, string ApprovedBy, string ImageName, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSupplierExpenseHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveSupplierExpenseHistoryAsync(string HId, string EId, string PaymentMode, string Transactionnumber, string Amount, string PaidDate, bool IsApproved, string ApprovedBy, string ImageName, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SupplierExpenseHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.SupplierExpenseHistoryResponseSupplierExpenseHistoryResult SupplierExpenseHistory(string EId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SupplierExpenseHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SupplierExpenseHistoryResponseSupplierExpenseHistoryResult> SupplierExpenseHistoryAsync(string EId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SupplierExpenseHistoryBYHid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.SupplierExpenseHistoryBYHidResponseSupplierExpenseHistoryBYHidResult SupplierExpenseHistoryBYHid(string HId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SupplierExpenseHistoryBYHid", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SupplierExpenseHistoryBYHidResponseSupplierExpenseHistoryBYHidResult> SupplierExpenseHistoryBYHidAsync(string HId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveExternalLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveExternalLink(string FormType, string FormId, string LastUpdate, string LinkDescription, string LinkFile, string LinkFileType, string Path, string isDrawing, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveExternalLink", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveExternalLinkAsync(string FormType, string FormId, string LastUpdate, string LinkDescription, string LinkFile, string LinkFileType, string Path, string isDrawing, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadExternalLinkByFormIdAndType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.LoadExternalLinkByFormIdAndTypeResponseLoadExternalLinkByFormIdAndTypeResult LoadExternalLinkByFormIdAndType(string FormType, string FormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadExternalLinkByFormIdAndType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.LoadExternalLinkByFormIdAndTypeResponseLoadExternalLinkByFormIdAndTypeResult> LoadExternalLinkByFormIdAndTypeAsync(string FormType, string FormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteExternalRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteExternalRecord(string ExernalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteExternalRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteExternalRecordAsync(string ExernalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadSupplierPaymentBySPId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.LoadSupplierPaymentBySPIdResponseLoadSupplierPaymentBySPIdResult LoadSupplierPaymentBySPId(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadSupplierPaymentBySPId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.LoadSupplierPaymentBySPIdResponseLoadSupplierPaymentBySPIdResult> LoadSupplierPaymentBySPIdAsync(string SPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPSupplierPaymentBySupplierId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.JKIOPSupplierPaymentBySupplierIdResponseJKIOPSupplierPaymentBySupplierIdResult JKIOPSupplierPaymentBySupplierId(string SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JKIOPSupplierPaymentBySupplierId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.JKIOPSupplierPaymentBySupplierIdResponseJKIOPSupplierPaymentBySupplierIdResult> JKIOPSupplierPaymentBySupplierIdAsync(string SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStudentFine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetStudentFineResponseGetStudentFineResult GetStudentFine(string CourseYear, string CourseSession, string fromdate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStudentFine", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetStudentFineResponseGetStudentFineResult> GetStudentFineAsync(string CourseYear, string CourseSession, string fromdate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentinfobyrollnumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getstudentinfobyrollnumberResponseGetstudentinfobyrollnumberResult getstudentinfobyrollnumber(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentinfobyrollnumber", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getstudentinfobyrollnumberResponseGetstudentinfobyrollnumberResult> getstudentinfobyrollnumberAsync(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentfineinfobyFIneId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getstudentfineinfobyFIneIdResponseGetstudentfineinfobyFIneIdResult getstudentfineinfobyFIneId(string FineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentfineinfobyFIneId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getstudentfineinfobyFIneIdResponseGetstudentfineinfobyFIneIdResult> getstudentfineinfobyFIneIdAsync(string FineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentfineinfobyRollnumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getstudentfineinfobyRollnumberResponseGetstudentfineinfobyRollnumberResult getstudentfineinfobyRollnumber(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentfineinfobyRollnumber", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getstudentfineinfobyRollnumberResponseGetstudentfineinfobyRollnumberResult> getstudentfineinfobyRollnumberAsync(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFinepaymenttobankhandover", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveFinepaymenttobankhandover(string FId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFinepaymenttobankhandover", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveFinepaymenttobankhandoverAsync(string FId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFinePaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveFinePaymentInfo(
                    string FId, 
                    string PaymentMode, 
                    string Amount, 
                    string PaidAmount, 
                    string FineAmount, 
                    string BankTransactionNumber, 
                    bool IsHandOver, 
                    string HandoverName, 
                    string DepositeDate, 
                    string username, 
                    string RollNumber, 
                    string Recieveddate, 
                    string SubmitTransactionnumber, 
                    string FineComment, 
                    string DepositeComment, 
                    string Session, 
                    string courseyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFinePaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveFinePaymentInfoAsync(
                    string FId, 
                    string PaymentMode, 
                    string Amount, 
                    string PaidAmount, 
                    string FineAmount, 
                    string BankTransactionNumber, 
                    bool IsHandOver, 
                    string HandoverName, 
                    string DepositeDate, 
                    string username, 
                    string RollNumber, 
                    string Recieveddate, 
                    string SubmitTransactionnumber, 
                    string FineComment, 
                    string DepositeComment, 
                    string Session, 
                    string courseyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveRefundPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveRefundPaymentInfo(string RId, string PaymentMode, string Amount, string BankTransactionNumber, string RefundDate, string username, string RollNumber, string Comment, string Session, string courseyear, string approveby, string BankName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveRefundPaymentInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveRefundPaymentInfoAsync(string RId, string PaymentMode, string Amount, string BankTransactionNumber, string RefundDate, string username, string RollNumber, string Comment, string Session, string courseyear, string approveby, string BankName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentRefundinfobyRollnumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getstudentRefundinfobyRollnumberResponseGetstudentRefundinfobyRollnumberResult getstudentRefundinfobyRollnumber(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentRefundinfobyRollnumber", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getstudentRefundinfobyRollnumberResponseGetstudentRefundinfobyRollnumberResult> getstudentRefundinfobyRollnumberAsync(string RollNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentRefundinfobyRefundId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getstudentRefundinfobyRefundIdResponseGetstudentRefundinfobyRefundIdResult getstudentRefundinfobyRefundId(string RId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstudentRefundinfobyRefundId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getstudentRefundinfobyRefundIdResponseGetstudentRefundinfobyRefundIdResult> getstudentRefundinfobyRefundIdAsync(string RId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStudentRefund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetStudentRefundResponseGetStudentRefundResult GetStudentRefund(string CourseYear, string CourseSession, string fromdate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStudentRefund", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetStudentRefundResponseGetStudentRefundResult> GetStudentRefundAsync(string CourseYear, string CourseSession, string fromdate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductexpirylistinventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductexpirylistinventory(string productid, int qty, string Expiry, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductexpirylistinventory", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductexpirylistinventoryAsync(string productid, int qty, string Expiry, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCollegeLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveCollegeLog(string LogType, string LogDescription, string OldValue, string NewValue, string RollNumber, string CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCollegeLog", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveCollegeLogAsync(string LogType, string LogDescription, string OldValue, string NewValue, string RollNumber, string CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOfficeLeaveRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveOfficeLeaveRequest(string StaffEmailId, string LeaveType, System.DateTime LFromDate, System.DateTime LToDate, string FromTime, string ToTime, string Reason, string CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOfficeLeaveRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveOfficeLeaveRequestAsync(string StaffEmailId, string LeaveType, System.DateTime LFromDate, System.DateTime LToDate, string FromTime, string ToTime, string Reason, string CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteOfficeLeaveRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteOfficeLeaveRequest(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteOfficeLeaveRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteOfficeLeaveRequestAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficeLeaveDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOfficeLeaveDetailsResponseGetOfficeLeaveDetailsResult GetOfficeLeaveDetails(string EmailId, System.DateTime StartDate, System.DateTime EndDate, string RequestStatus, string LeaveType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficeLeaveDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOfficeLeaveDetailsResponseGetOfficeLeaveDetailsResult> GetOfficeLeaveDetailsAsync(string EmailId, System.DateTime StartDate, System.DateTime EndDate, string RequestStatus, string LeaveType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDailyScheduleWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetDailyScheduleWork(string StaffEmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDailyScheduleWork", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetDailyScheduleWorkAsync(string StaffEmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDailyScheduleWorks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetDailyScheduleWorks(string StaffEmailId, string TaskName, string CategoryId, string TeamName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDailyScheduleWorks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetDailyScheduleWorksAsync(string StaffEmailId, string TaskName, string CategoryId, string TeamName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffRota", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetStaffRotaResponseGetStaffRotaResult GetStaffRota(string EmailId, System.DateTime StartDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffRota", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetStaffRotaResponseGetStaffRotaResult> GetStaffRotaAsync(string EmailId, System.DateTime StartDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaskName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTaskNameResponseGetTaskNameResult GetTaskName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaskName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTaskNameResponseGetTaskNameResult> GetTaskNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaskNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTaskNamesResponseGetTaskNamesResult GetTaskNames(string countryname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaskNames", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTaskNamesResponseGetTaskNamesResult> GetTaskNamesAsync(string countryname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTeamNameResponseGetTeamNameResult GetTeamName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTeamNameResponseGetTeamNameResult> GetTeamNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffCountryWise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetStaffCountryWiseResponseGetStaffCountryWiseResult GetStaffCountryWise(string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffCountryWise", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetStaffCountryWiseResponseGetStaffCountryWiseResult> GetStaffCountryWiseAsync(string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckTaskRunningOnComputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.CheckTaskRunningOnComputerResponseCheckTaskRunningOnComputerResult CheckTaskRunningOnComputer(string EmailId, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckTaskRunningOnComputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.CheckTaskRunningOnComputerResponseCheckTaskRunningOnComputerResult> CheckTaskRunningOnComputerAsync(string EmailId, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTasksResponseGetTasksResult GetTasks(string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTasksResponseGetTasksResult> GetTasksAsync(string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffInOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetStaffInOutResponseGetStaffInOutResult GetStaffInOut(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffInOut", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetStaffInOutResponseGetStaffInOutResult> GetStaffInOutAsync(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveTasksTimer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveTasksTimer(string EmailId, string TaskType, int CategoryId, string StartTime, string Comment, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveTasksTimer", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveTasksTimerAsync(string EmailId, string TaskType, int CategoryId, string StartTime, string Comment, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTasksTimer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateTasksTimer(int STId, string EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTasksTimer", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateTasksTimerAsync(int STId, string EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStatusAfterAutoTransferForcefully", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateStatusAfterAutoTransferForcefully(int productid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStatusAfterAutoTransferForcefully", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateStatusAfterAutoTransferForcefullyAsync(int productid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkproductcategoryforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.checkproductcategoryforcomputerResponseCheckproductcategoryforcomputerResult checkproductcategoryforcomputer(string productid, string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkproductcategoryforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.checkproductcategoryforcomputerResponseCheckproductcategoryforcomputerResult> checkproductcategoryforcomputerAsync(string productid, string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcategoryforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetcategoryforcomputerResponseGetcategoryforcomputerResult Getcategoryforcomputer(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcategoryforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetcategoryforcomputerResponseGetcategoryforcomputerResult> GetcategoryforcomputerAsync(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getunshippedorderforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetunshippedorderforcomputerResponseGetunshippedorderforcomputerResult Getunshippedorderforcomputer(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getunshippedorderforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetunshippedorderforcomputerResponseGetunshippedorderforcomputerResult> GetunshippedorderforcomputerAsync(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkproductcategoryforcomputerbyordernumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.checkproductcategoryforcomputerbyordernumberResponseCheckproductcategoryforcomputerbyordernumberResult checkproductcategoryforcomputerbyordernumber(string ordernumber, string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkproductcategoryforcomputerbyordernumber", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.checkproductcategoryforcomputerbyordernumberResponseCheckproductcategoryforcomputerbyordernumberResult> checkproductcategoryforcomputerbyordernumberAsync(string ordernumber, string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gettodayshippedordercategoryforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.gettodayshippedordercategoryforcomputerResponseGettodayshippedordercategoryforcomputerResult gettodayshippedordercategoryforcomputer(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gettodayshippedordercategoryforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.gettodayshippedordercategoryforcomputerResponseGettodayshippedordercategoryforcomputerResult> gettodayshippedordercategoryforcomputerAsync(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getunshippedorderbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetunshippedorderbycompanyResponseGetunshippedorderbycompanyResult Getunshippedorderbycompany(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getunshippedorderbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetunshippedorderbycompanyResponseGetunshippedorderbycompanyResult> GetunshippedorderbycompanyAsync(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetToadyshippedorderbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetToadyshippedorderbycompanyResponseGetToadyshippedorderbycompanyResult GetToadyshippedorderbycompany(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetToadyshippedorderbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetToadyshippedorderbycompanyResponseGetToadyshippedorderbycompanyResult> GetToadyshippedorderbycompanyAsync(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getlateshipment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetlateshipmentResponseGetlateshipmentResult Getlateshipment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getlateshipment", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetlateshipmentResponseGetlateshipmentResult> GetlateshipmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getstaffbycomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetstaffbycomputerResponseGetstaffbycomputerResult Getstaffbycomputer(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getstaffbycomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetstaffbycomputerResponseGetstaffbycomputerResult> GetstaffbycomputerAsync(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveloginlog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Saveloginlog(string userId, string computername, string ipaddress, string companyname, string computertype, string logintype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveloginlog", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveloginlogAsync(string userId, string computername, string ipaddress, string companyname, string computertype, string logintype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Savelogouttime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Savelogouttime(string userId, string logoutreason, string logintype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Savelogouttime", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SavelogouttimeAsync(string userId, string logoutreason, string logintype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShipUnshipLateshipOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetShipUnshipLateshipOrderResponseGetShipUnshipLateshipOrderResult GetShipUnshipLateshipOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShipUnshipLateshipOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetShipUnshipLateshipOrderResponseGetShipUnshipLateshipOrderResult> GetShipUnshipLateshipOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getunshippedorderbyComputerName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getunshippedorderbyComputerNameResponseGetunshippedorderbyComputerNameResult getunshippedorderbyComputerName(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getunshippedorderbyComputerName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getunshippedorderbyComputerNameResponseGetunshippedorderbyComputerNameResult> getunshippedorderbyComputerNameAsync(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getunshipandtodayshiporderforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getunshipandtodayshiporderforcomputerResponseGetunshipandtodayshiporderforcomputerResult getunshipandtodayshiporderforcomputer(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getunshipandtodayshiporderforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getunshipandtodayshiporderforcomputerResponseGetunshipandtodayshiporderforcomputerResult> getunshipandtodayshiporderforcomputerAsync(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getComputerbypackingToday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getComputerbypackingTodayResponseGetComputerbypackingTodayResult getComputerbypackingToday(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getComputerbypackingToday", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getComputerbypackingTodayResponseGetComputerbypackingTodayResult> getComputerbypackingTodayAsync(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getlateshipmentbycategoryforcomputer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getlateshipmentbycategoryforcomputerResponseGetlateshipmentbycategoryforcomputerResult getlateshipmentbycategoryforcomputer(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getlateshipmentbycategoryforcomputer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getlateshipmentbycategoryforcomputerResponseGetlateshipmentbycategoryforcomputerResult> getlateshipmentbycategoryforcomputerAsync(string computername, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstaffbypackingToday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getstaffbypackingTodayResponseGetstaffbypackingTodayResult getstaffbypackingToday();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getstaffbypackingToday", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getstaffbypackingTodayResponseGetstaffbypackingTodayResult> getstaffbypackingTodayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsUPS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsUPS(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsUPS", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsUPSAsync(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetComputerName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetComputerNameResponseGetComputerNameResult GetComputerName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetComputerName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetComputerNameResponseGetComputerNameResult> GetComputerNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentComputerByStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCurrentComputerByStaffResponseGetCurrentComputerByStaffResult GetCurrentComputerByStaff(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentComputerByStaff", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCurrentComputerByStaffResponseGetCurrentComputerByStaffResult> GetCurrentComputerByStaffAsync(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AutoTransferInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AutoTransferInventory(long Productid, string email, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AutoTransferInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AutoTransferInventoryAsync(long Productid, string email, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getworkreport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getworkreportResponseGetworkreportResult getworkreport(string companyname, string computername, string username, string shift, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getworkreport", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getworkreportResponseGetworkreportResult> getworkreportAsync(string companyname, string computername, string username, string shift, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getworkreportUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getworkreportUpdatedResponseGetworkreportUpdatedResult getworkreportUpdated(string companyname, string computername, string username, string shift, string startdate, string enddate, string RecordType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getworkreportUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getworkreportUpdatedResponseGetworkreportUpdatedResult> getworkreportUpdatedAsync(string companyname, string computername, string username, string shift, string startdate, string enddate, string RecordType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderAccountwise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOrderAccountwiseResponseGetOrderAccountwiseResult GetOrderAccountwise(string companyname, string computername, string startdate, string enddate, string category, string ordertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderAccountwise", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderAccountwiseResponseGetOrderAccountwiseResult> GetOrderAccountwiseAsync(string companyname, string computername, string startdate, string enddate, string category, string ordertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderAccountwiseupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOrderAccountwiseupdatedResponseGetOrderAccountwiseupdatedResult GetOrderAccountwiseupdated(string companyname, string computername, string startdate, string enddate, string category, string ordertype, string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderAccountwiseupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderAccountwiseupdatedResponseGetOrderAccountwiseupdatedResult> GetOrderAccountwiseupdatedAsync(string companyname, string computername, string startdate, string enddate, string category, string ordertype, string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckAllowcategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckAllowcategory(string ComputerName, string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckAllowcategory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckAllowcategoryAsync(string ComputerName, string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllowAllcategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AllowAllcategory(string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllowAllcategory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AllowAllcategoryAsync(string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliveryUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductDeliveryUpdated(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliveryUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductDeliveryUpdatedAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliverynewUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductDeliverynewUpdated(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliverynewUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductDeliverynewUpdatedAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategorybycomputerwise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllCategorybycomputerwiseResponseGetAllCategorybycomputerwiseResult GetAllCategorybycomputerwise(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategorybycomputerwise", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllCategorybycomputerwiseResponseGetAllCategorybycomputerwiseResult> GetAllCategorybycomputerwiseAsync(string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllunshippedOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllunshippedOrderResponseGetAllunshippedOrderResult GetAllunshippedOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllunshippedOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllunshippedOrderResponseGetAllunshippedOrderResult> GetAllunshippedOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOutOfStockOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllOutOfStockOrderResponseGetAllOutOfStockOrderResult GetAllOutOfStockOrder(string companyname, string computername, string category, string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOutOfStockOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllOutOfStockOrderResponseGetAllOutOfStockOrderResult> GetAllOutOfStockOrderAsync(string companyname, string computername, string category, string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOrderStatusQty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllOrderStatusQtyResponseGetAllOrderStatusQtyResult GetAllOrderStatusQty(string companyname, string computername, string category, string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOrderStatusQty", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllOrderStatusQtyResponseGetAllOrderStatusQtyResult> GetAllOrderStatusQtyAsync(string companyname, string computername, string category, string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetComputerNameByShift", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetComputerNameByShiftResponseGetComputerNameByShiftResult GetComputerNameByShift(string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetComputerNameByShift", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetComputerNameByShiftResponseGetComputerNameByShiftResult> GetComputerNameByShiftAsync(string shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InventoryRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InventoryRecord(string inventory, string MainProductId, string sfpinventory, string fbainventory, string expinventory, string sbsinventory, string ProductId, string sku, string barcode, string quantity, string reason, string companyname, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InventoryRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InventoryRecordAsync(string inventory, string MainProductId, string sfpinventory, string fbainventory, string expinventory, string sbsinventory, string ProductId, string sku, string barcode, string quantity, string reason, string companyname, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanInNewUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductScanInNewUpdated(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    string TransferOtherCompany, 
                    System.DateTime ManufactureDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanInNewUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductScanInNewUpdatedAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    string TransferOtherCompany, 
                    System.DateTime ManufactureDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLoginPermission", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetLoginPermissionResponseGetLoginPermissionResult GetLoginPermission(string companyname, string emailid, string compautername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLoginPermission", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetLoginPermissionResponseGetLoginPermissionResult> GetLoginPermissionAsync(string companyname, string emailid, string compautername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccessForRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAccessForRoleResponseGetAccessForRoleResult GetAccessForRole(string emailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccessForRole", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAccessForRoleResponseGetAccessForRoleResult> GetAccessForRoleAsync(string emailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductdeliveryOnTransferInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductdeliveryOnTransferInventory(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductdeliveryOnTransferInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductdeliveryOnTransferInventoryAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanInNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductScanInNew(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    System.DateTime ManufactureDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanInNew", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductScanInNewAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    System.DateTime ManufactureDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliveryUpdatedNEW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductDeliveryUpdatedNEW(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliveryUpdatedNEW", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductDeliveryUpdatedNEWAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliverynewUpdatedNEW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductDeliverynewUpdatedNEW(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliverynewUpdatedNEW", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductDeliverynewUpdatedNEWAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCoun" +
            "t", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCount(string companyname, int Ordernumber, string issuestatus, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCoun" +
            "t", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCountAsync(string companyname, int Ordernumber, string issuestatus, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByPscanoutProcedure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryByPscanoutProcedure(
                    string allowmultiple, 
                    int Ordernumber, 
                    int ProductId, 
                    int VariantId, 
                    int Outqty, 
                    string EmailId, 
                    string Companyname, 
                    string CustomerId, 
                    int MainInventory, 
                    int Promoinventory, 
                    int SFPInventory, 
                    int FBAInventory, 
                    int ExpiryInventory, 
                    int SBSInventory, 
                    string SKU, 
                    string Barcode, 
                    string Computername, 
                    string Countryname, 
                    System.DateTime Expirydate1, 
                    System.DateTime Expirydate2, 
                    System.DateTime Expirydate3, 
                    string Expirymsg, 
                    string IssueMainTitle, 
                    string IssueSubtitle, 
                    string Issuestatus, 
                    string IsClaimed, 
                    string Comment, 
                    string AssignUser, 
                    string IsStrdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByPscanoutProcedure", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryByPscanoutProcedureAsync(
                    string allowmultiple, 
                    int Ordernumber, 
                    int ProductId, 
                    int VariantId, 
                    int Outqty, 
                    string EmailId, 
                    string Companyname, 
                    string CustomerId, 
                    int MainInventory, 
                    int Promoinventory, 
                    int SFPInventory, 
                    int FBAInventory, 
                    int ExpiryInventory, 
                    int SBSInventory, 
                    string SKU, 
                    string Barcode, 
                    string Computername, 
                    string Countryname, 
                    System.DateTime Expirydate1, 
                    System.DateTime Expirydate2, 
                    System.DateTime Expirydate3, 
                    string Expirymsg, 
                    string IssueMainTitle, 
                    string IssueSubtitle, 
                    string Issuestatus, 
                    string IsClaimed, 
                    string Comment, 
                    string AssignUser, 
                    string IsStrdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMarkAsShippedOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateMarkAsShippedOrder(string ordernumber, string trackingnumber, string shippingmethod, string password, string couriername, System.DateTime shippedon, string OrderStatus, string createdby, string parcelweight, decimal parcelcharge, string companyrepresentative);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMarkAsShippedOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateMarkAsShippedOrderAsync(string ordernumber, string trackingnumber, string shippingmethod, string password, string couriername, System.DateTime shippedon, string OrderStatus, string createdby, string parcelweight, decimal parcelcharge, string companyrepresentative);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getorderdetailsonpscanout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement Getorderdetailsonpscanout(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getorderdetailsonpscanout", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetorderdetailsonpscanoutAsync(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetorderPrintlabel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetorderPrintlabelResponseGetorderPrintlabelResult GetorderPrintlabel(
                    string ordernumber, 
                    int printqty, 
                    string orderstatus, 
                    string companyname, 
                    string ordertype, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string category, 
                    string countrytype, 
                    string couriertype, 
                    string couriername, 
                    string postagename, 
                    string Other, 
                    string Email, 
                    string NoChange, 
                    System.DateTime printdate, 
                    string Shipmethod, 
                    string AccountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetorderPrintlabel", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetorderPrintlabelResponseGetorderPrintlabelResult> GetorderPrintlabelAsync(
                    string ordernumber, 
                    int printqty, 
                    string orderstatus, 
                    string companyname, 
                    string ordertype, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string category, 
                    string countrytype, 
                    string couriertype, 
                    string couriername, 
                    string postagename, 
                    string Other, 
                    string Email, 
                    string NoChange, 
                    System.DateTime printdate, 
                    string Shipmethod, 
                    string AccountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAutodownloadLabelOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAutodownloadLabelOrderResponseGetAutodownloadLabelOrderResult GetAutodownloadLabelOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAutodownloadLabelOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAutodownloadLabelOrderResponseGetAutodownloadLabelOrderResult> GetAutodownloadLabelOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPostageTypeandCourierwithordernumberwithDateRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetPostageTypeandCourierwithordernumberwithDateRange(string ComputerName, System.DateTime dtstartdate, System.DateTime dtenddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPostageTypeandCourierwithordernumberwithDateRange", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPostageTypeandCourierwithordernumberwithDateRangeAsync(string ComputerName, System.DateTime dtstartdate, System.DateTime dtenddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPostageTypeandCourierwithordernumberwithDateRangeandOrderty" +
            "pe", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetPostageTypeandCourierwithordernumberwithDateRangeandOrdertype(string OrderType, System.DateTime dtstartdate, System.DateTime dtenddate, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPostageTypeandCourierwithordernumberwithDateRangeandOrderty" +
            "pe", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPostageTypeandCourierwithordernumberwithDateRangeandOrdertypeAsync(string OrderType, System.DateTime dtstartdate, System.DateTime dtenddate, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPostageTypeandCourierwithordernumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetPostageTypeandCourierwithordernumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPostageTypeandCourierwithordernumber", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPostageTypeandCourierwithordernumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcouriernamewithtype", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement Getcouriernamewithtype(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcouriernamewithtype", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetcouriernamewithtypeAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePrintDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdatePrintDate(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePrintDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdatePrintDateAsync(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrdertrackingwithgfs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateOrdertrackingwithgfs(string ordernumber, string trackingid, string username, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrdertrackingwithgfs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateOrdertrackingwithgfsAsync(string ordernumber, string trackingid, string username, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveScanProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveScanProduct(string SKU, string Barcode, int OrderSystemId, string Ordertype, string CompanyName, long ProductId, int Qty, string EmailId, string InvoiceNo, string InvoiceDate, int SupplierId, string Expirydate, string Expirymsg, string DeliveryNoteNumber, string ManufactureDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveScanProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveScanProductAsync(string SKU, string Barcode, int OrderSystemId, string Ordertype, string CompanyName, long ProductId, int Qty, string EmailId, string InvoiceNo, string InvoiceDate, int SupplierId, string Expirydate, string Expirymsg, string DeliveryNoteNumber, string ManufactureDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getproduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getproductResponseGetproductResult getproduct(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getproduct", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getproductResponseGetproductResult> getproductAsync(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductByIdResponseGetProductByIdResult GetProductById(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductById", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductByIdResponseGetProductByIdResult> GetProductByIdAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBrand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllBrandResponseGetAllBrandResult GetAllBrand();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBrand", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllBrandResponseGetAllBrandResult> GetAllBrandAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaxClass", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTaxClassResponseGetTaxClassResult GetTaxClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaxClass", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTaxClassResponseGetTaxClassResult> GetTaxClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserWithroll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetUserWithrollResponseGetUserWithrollResult GetUserWithroll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserWithroll", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetUserWithrollResponseGetUserWithrollResult> GetUserWithrollAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserroll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetUserrollResponseGetUserrollResult GetUserroll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserroll", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetUserrollResponseGetUserrollResult> GetUserrollAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllScreenForRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllScreenForRoleResponseGetAllScreenForRoleResult GetAllScreenForRole(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllScreenForRole", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllScreenForRoleResponseGetAllScreenForRoleResult> GetAllScreenForRoleAsync(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetuserByRoleId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetuserByRoleIdResponseGetuserByRoleIdResult GetuserByRoleId(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetuserByRoleId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetuserByRoleIdResponseGetuserByRoleIdResult> GetuserByRoleIdAsync(long RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadCreditnoteForPaperWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.LoadCreditnoteForPaperWorkResponseLoadCreditnoteForPaperWorkResult LoadCreditnoteForPaperWork(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadCreditnoteForPaperWork", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.LoadCreditnoteForPaperWorkResponseLoadCreditnoteForPaperWorkResult> LoadCreditnoteForPaperWorkAsync(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePaperWorkForCreditNote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdatePaperWorkForCreditNote(string CreditId, string DockNo, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePaperWorkForCreditNote", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdatePaperWorkForCreditNoteAsync(string CreditId, string DockNo, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPagePermission", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetPagePermission(string PageName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPagePermission", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> GetPagePermissionAsync(string PageName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveQuantityAdjustmentRecordForCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveQuantityAdjustmentRecordForCheck(string qty, string InventoryType, string sku, string barcode, string companyname, string Expiry, string email, string Reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveQuantityAdjustmentRecordForCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveQuantityAdjustmentRecordForCheckAsync(string qty, string InventoryType, string sku, string barcode, string companyname, string Expiry, string email, string Reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCreditNoteWithoutDoc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCreditNoteWithoutDocResponseGetCreditNoteWithoutDocResult GetCreditNoteWithoutDoc(string companyname, string sku, string barcode, string pipcode, string InvoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCreditNoteWithoutDoc", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCreditNoteWithoutDocResponseGetCreditNoteWithoutDocResult> GetCreditNoteWithoutDocAsync(string companyname, string sku, string barcode, string pipcode, string InvoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCreditNote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCreditNote(string CreditId, string Comment, string DocNumber, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCreditNote", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateCreditNoteAsync(string CreditId, string Comment, string DocNumber, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataTableToJSONWithJavaScriptSerializer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DataTableToJSONWithJavaScriptSerializer(string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataTableToJSONWithJavaScriptSerializer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DataTableToJSONWithJavaScriptSerializerAsync(string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool OrderExist(string OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderExist", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> OrderExistAsync(string OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrackingNumberExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TrackingNumberExist(string TrackingNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrackingNumberExist", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> TrackingNumberExistAsync(string TrackingNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadQuantityAdjustmentOpenCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.LoadQuantityAdjustmentOpenCaseResponseLoadQuantityAdjustmentOpenCaseResult LoadQuantityAdjustmentOpenCase(string Barcode, string Reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadQuantityAdjustmentOpenCase", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.LoadQuantityAdjustmentOpenCaseResponseLoadQuantityAdjustmentOpenCaseResult> LoadQuantityAdjustmentOpenCaseAsync(string Barcode, string Reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateqtyadjustment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Updateqtyadjustment(string AId, string qty, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateqtyadjustment", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateqtyadjustmentAsync(string AId, string qty, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryRoomInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateExpiryRoomInventory(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryRoomInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateExpiryRoomInventoryAsync(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDamageRoomInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDamageRoomInventory(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDamageRoomInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDamageRoomInventoryAsync(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddDamageRoomInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddDamageRoomInventory(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddDamageRoomInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddDamageRoomInventoryAsync(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddExpiryRoomInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddExpiryRoomInventory(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddExpiryRoomInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddExpiryRoomInventoryAsync(string ProductId, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductINExpiryroom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductINExpiryroom(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductINExpiryroom", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductINExpiryroomAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveExpiryRoomReplacementbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveExpiryRoomReplacementbycompany(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveExpiryRoomReplacementbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveExpiryRoomReplacementbycompanyAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryRoomqtyupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateExpiryRoomqtyupdated(int productid, int variantid, int qty, string companyname, string expdate, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryRoomqtyupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateExpiryRoomqtyupdatedAsync(int productid, int variantid, int qty, string companyname, string expdate, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListOfPrintOrderError", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetListOfPrintOrderErrorResponseGetListOfPrintOrderErrorResult GetListOfPrintOrderError(string OrderList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListOfPrintOrderError", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetListOfPrintOrderErrorResponseGetListOfPrintOrderErrorResult> GetListOfPrintOrderErrorAsync(string OrderList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDefaultVarientResponseGetDefaultVarientResult GetDefaultVarient(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientResponseGetDefaultVarientResult> GetDefaultVarientAsync(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateProductInventory(long ProductId, int Qty, string InventoryType, string Reason, string EmailId, int AddQty, string AddInventoryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateProductInventoryAsync(long ProductId, int Qty, string InventoryType, string Reason, string EmailId, int AddQty, string AddInventoryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientSFPcompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientSFPcompany(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientSFPcompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientSFPcompanyAsync(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSFPInventoryByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSFPInventoryByVarient(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSFPInventoryByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateSFPInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientcompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientcompany(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientcompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientcompanyAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryByVarient(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDamageReplacementbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveDamageReplacementbycompany(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDamageReplacementbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveDamageReplacementbycompanyAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientdamageroomcompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientdamageroomcompany(string VarientId, string mquantity, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientdamageroomcompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientdamageroomcompanyAsync(string VarientId, string mquantity, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryByProduct(string ProductId, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryByProductAsync(string ProductId, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDamageInventoryByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDamageInventoryByVarient(string VarientId, string mquantity, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDamageInventoryByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDamageInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryfromscanoutwithskubycompanyname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveproductdeliverywithexpiryfromscanoutwithskubycompanyname(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryfromscanoutwithskubycompanyname", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryfromscanoutwithskubycompanynameAsync(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryfromscanout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveproductdeliverywithexpiryfromscanout(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryfromscanout", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryfromscanoutAsync(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryexpirymessagewithskubycompanyname" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveproductdeliverywithexpiryexpirymessagewithskubycompanyname(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryexpirymessagewithskubycompanyname" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryexpirymessagewithskubycompanynameAsync(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryexpirymessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveproductdeliverywithexpiryexpirymessage(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryexpirymessage", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryexpirymessageAsync(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetrestrictionValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetrestrictionValue(int ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetrestrictionValue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetrestrictionValueAsync(int ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsRoyalMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsRoyalMail(string variantid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsRoyalMail", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsRoyalMailAsync(string variantid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getclearenceorder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetclearenceorderResponseGetclearenceorderResult Getclearenceorder(string variantid, string companyname, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getclearenceorder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetclearenceorderResponseGetclearenceorderResult> GetclearenceorderAsync(string variantid, string companyname, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getsellingchannel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetsellingchannelResponseGetsellingchannelResult Getsellingchannel(string OrderNumber, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getsellingchannel", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetsellingchannelResponseGetsellingchannelResult> GetsellingchannelAsync(string OrderNumber, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFbaInventoryInCostingSheet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateFbaInventoryInCostingSheet(string VarientId, string CostingType, int quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFbaInventoryInCostingSheet", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateFbaInventoryInCostingSheetAsync(string VarientId, string CostingType, int quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getpostagetype", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetpostagetypeResponseGetpostagetypeResult Getpostagetype(string variantid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getpostagetype", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetpostagetypeResponseGetpostagetypeResult> GetpostagetypeAsync(string variantid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getpostage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetpostageResponseGetpostageResult Getpostage(string AccountName, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getpostage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetpostageResponseGetpostageResult> GetpostageAsync(string AccountName, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpiryproductdatebycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpiryproductdatebycompanyResponseGetExpiryproductdatebycompanyResult GetExpiryproductdatebycompany(int ordernumber, string exptype, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpiryproductdatebycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpiryproductdatebycompanyResponseGetExpiryproductdatebycompanyResult> GetExpiryproductdatebycompanyAsync(int ordernumber, string exptype, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatebycompanyname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirydatebycompanynameResponseGetExpirydatebycompanynameResult GetExpirydatebycompanyname(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatebycompanyname", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirydatebycompanynameResponseGetExpirydatebycompanynameResult> GetExpirydatebycompanynameAsync(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirydateResponseGetExpirydateResult GetExpirydate(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydate", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirydateResponseGetExpirydateResult> GetExpirydateAsync(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryInventoryUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateExpiryInventoryUpdated(string ProductId, string mquantity, string quantity, string expdate, string createdby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryInventoryUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateExpiryInventoryUpdatedAsync(string ProductId, string mquantity, string quantity, string expdate, string createdby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderTransactionStateupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateOrderTransactionStateupdated(long OrderId, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderTransactionStateupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateOrderTransactionStateupdatedAsync(long OrderId, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMainToExpiryUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromMainToExpiryUpdated(string VarientId, string mquantity, string quantity, System.DateTime expdate, string createdby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMainToExpiryUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromMainToExpiryUpdatedAsync(string VarientId, string mquantity, string quantity, System.DateTime expdate, string createdby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatefromexpiryroom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirydatefromexpiryroomResponseGetExpirydatefromexpiryroomResult GetExpirydatefromexpiryroom(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatefromexpiryroom", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirydatefromexpiryroomResponseGetExpirydatefromexpiryroomResult> GetExpirydatefromexpiryroomAsync(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirymessagebycompanyname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirymessagebycompanynameResponseGetExpirymessagebycompanynameResult GetExpirymessagebycompanyname(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirymessagebycompanyname", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirymessagebycompanynameResponseGetExpirymessagebycompanynameResult> GetExpirymessagebycompanynameAsync(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirymsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirymsgResponseGetExpirymsgResult GetExpirymsg(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirymsg", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirymsgResponseGetExpirymsgResult> GetExpirymsgAsync(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDetailbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductDetailbycompanyResponseGetProductDetailbycompanyResult GetProductDetailbycompany(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDetailbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductDetailbycompanyResponseGetProductDetailbycompanyResult> GetProductDetailbycompanyAsync(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScanInProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetScanInProductResponseGetScanInProductResult GetScanInProduct(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScanInProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetScanInProductResponseGetScanInProductResult> GetScanInProductAsync(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductDetailsResponseGetProductDetailsResult GetProductDetails(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductDetailsResponseGetProductDetailsResult> GetProductDetailsAsync(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductRackLabel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductRackLabelResponseGetProductRackLabelResult GetProductRackLabel(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductRackLabel", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductRackLabelResponseGetProductRackLabelResult> GetProductRackLabelAsync(string strCode, string strType, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderReturndStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateOrderReturndStatus(string OrderNumber, string ProductId, int ReturnQty, int OrderQty, string createdby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderReturndStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateOrderReturndStatusAsync(string OrderNumber, string ProductId, int ReturnQty, int OrderQty, string createdby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcostingbyorder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getcostingbyorderResponseGetcostingbyorderResult getcostingbyorder(int ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcostingbyorder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getcostingbyorderResponseGetcostingbyorderResult> getcostingbyorderAsync(int ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPalletNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetPalletNumberResponseGetPalletNumberResult GetPalletNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPalletNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetPalletNumberResponseGetPalletNumberResult> GetPalletNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPallet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetPalletResponseGetPalletResult GetPallet(int MainProductId, int PalletNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPallet", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetPalletResponseGetPalletResult> GetPalletAsync(int MainProductId, int PalletNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetUserResponseGetUserResult GetUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetUserResponseGetUserResult> GetUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetcollectionnoofItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetcollectionnoofItemResponseGetcollectionnoofItemResult GetcollectionnoofItem(string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetcollectionnoofItem", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetcollectionnoofItemResponseGetcollectionnoofItemResult> GetcollectionnoofItemAsync(string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShelfingnoofItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetShelfingnoofItemResponseGetShelfingnoofItemResult GetShelfingnoofItem(string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShelfingnoofItem", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetShelfingnoofItemResponseGetShelfingnoofItemResult> GetShelfingnoofItemAsync(string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WareHouseStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.WareHouseStaffResponseWareHouseStaffResult WareHouseStaff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WareHouseStaff", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.WareHouseStaffResponseWareHouseStaffResult> WareHouseStaffAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaskTimer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTaskTimerResponseGetTaskTimerResult GetTaskTimer(string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTaskTimer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTaskTimerResponseGetTaskTimerResult> GetTaskTimerAsync(string CountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveTaskTimer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveTaskTimer(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveTaskTimer", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveTaskTimerAsync(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveTaskTimers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveTaskTimers(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveTaskTimers", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveTaskTimersAsync(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTaskTimer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateTaskTimer(int STId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTaskTimer", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateTaskTimerAsync(int STId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checknondeliveredorder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.checknondeliveredorderResponseChecknondeliveredorderResult checknondeliveredorder(int ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checknondeliveredorder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.checknondeliveredorderResponseChecknondeliveredorderResult> checknondeliveredorderAsync(int ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveordercomment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Saveordercomment(int Ordernumber, string Comment, string Createdby, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveordercomment", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveordercommentAsync(int Ordernumber, string Comment, string Createdby, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveorderstatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Saveorderstatus(int Ordernumber, string OrderStatus, string Createdby, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveorderstatus", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveorderstatusAsync(int Ordernumber, string OrderStatus, string Createdby, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadOrderIssues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.LoadOrderIssuesResponseLoadOrderIssuesResult LoadOrderIssues(int OrderId, string Resendstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadOrderIssues", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.LoadOrderIssuesResponseLoadOrderIssuesResult> LoadOrderIssuesAsync(int OrderId, string Resendstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderIssues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateOrderIssues(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderIssues", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateOrderIssuesAsync(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderIssuesUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateOrderIssuesUpdated(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim, string asignto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderIssuesUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateOrderIssuesUpdatedAsync(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim, string asignto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateVariantpostage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateVariantpostage(int variantid, string accountname, string postage, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateVariantpostage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateVariantpostageAsync(int variantid, string accountname, string postage, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductVariantWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductVariantWeight(int variantid, string productweight, string packingweight, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductVariantWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductVariantWeightAsync(int variantid, string productweight, string packingweight, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDimension", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDimension(int VariantId, string Length, string Width, string Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDimension", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDimensionAsync(int VariantId, string Length, string Width, string Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMainProductWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateMainProductWeight(int ProductId, string productweight, string packingweight, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMainProductWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateMainProductWeightAsync(int ProductId, string productweight, string packingweight, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCategory(int productid, string categoryid, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateCategoryAsync(int productid, string categoryid, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductHistory(int productid, string FieldName, string FieldValue, string OldValue, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductHistoryAsync(int productid, string FieldName, string FieldValue, string OldValue, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMainProductId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getMainProductIdResponseGetMainProductIdResult getMainProductId(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMainProductId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getMainProductIdResponseGetMainProductIdResult> getMainProductIdAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductWeight(int variantid, string productweight, string packingweight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductWeightAsync(int variantid, string productweight, string packingweight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCreditNote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveCreditNote(
                    long ProductId, 
                    long VariantId, 
                    string SKU, 
                    string Barcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    string dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string Attachfilename, 
                    string ValueIncVat, 
                    long CreditNoteNo, 
                    string CompanyName, 
                    string comment, 
                    long DeliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCreditNote", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveCreditNoteAsync(
                    long ProductId, 
                    long VariantId, 
                    string SKU, 
                    string Barcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    string dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string Attachfilename, 
                    string ValueIncVat, 
                    long CreditNoteNo, 
                    string CompanyName, 
                    string comment, 
                    long DeliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getproductvariantbypacksize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getproductvariantbypacksizeResponseGetproductvariantbypacksizeResult getproductvariantbypacksize(int productid, int packsize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getproductvariantbypacksize", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getproductvariantbypacksizeResponseGetproductvariantbypacksizeResult> getproductvariantbypacksizeAsync(int productid, int packsize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInvoicesName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveInvoicesName(string FileType, string FileName, string createdby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInvoicesName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveInvoicesNameAsync(string FileType, string FileName, string createdby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFileType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveFileType(string FileType, string createdby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFileType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveFileTypeAsync(string FileType, string createdby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getFileType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getFileTypeResponseGetFileTypeResult getFileType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getFileType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getFileTypeResponseGetFileTypeResult> getFileTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpostagebyVID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetpostagebyVIDResponseGetpostagebyVIDResult GetpostagebyVID(string variantid, string companyname, string accountname, string couriertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpostagebyVID", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetpostagebyVIDResponseGetpostagebyVIDResult> GetpostagebyVIDAsync(string variantid, string companyname, string accountname, string couriertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatepostage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updatepostage(string variantid, string accountname, string postage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatepostage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updatepostageAsync(string variantid, string accountname, string postage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpostagebyAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetpostagebyAccountResponseGetpostagebyAccountResult GetpostagebyAccount(string companyname, string accountname, string couriertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpostagebyAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetpostagebyAccountResponseGetpostagebyAccountResult> GetpostagebyAccountAsync(string companyname, string accountname, string couriertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatecostingbypostagechange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.updatecostingbypostagechangeResponseUpdatecostingbypostagechangeResult updatecostingbypostagechange(string postage, string accname, string companyname, string variantid, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatecostingbypostagechange", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.updatecostingbypostagechangeResponseUpdatecostingbypostagechangeResult> updatecostingbypostagechangeAsync(string postage, string accname, string companyname, string variantid, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveUploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveUploadFile(string FileType, string comment, string FileName, string createdby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveUploadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveUploadFileAsync(string FileType, string comment, string FileName, string createdby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInventoryCountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetInventoryCountDetailsResponseGetInventoryCountDetailsResult GetInventoryCountDetails(string productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInventoryCountDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetInventoryCountDetailsResponseGetInventoryCountDetailsResult> GetInventoryCountDetailsAsync(string productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateWareHouseProductLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateWareHouseProductLocation(int productid, string IeleNo, string RackNo, string BoxNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateWareHouseProductLocation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateWareHouseProductLocationAsync(int productid, string IeleNo, string RackNo, string BoxNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetIssueReasonResponseGetIssueReasonResult GetIssueReason();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueReason", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetIssueReasonResponseGetIssueReasonResult> GetIssueReasonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueSubReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetIssueSubReasonResponseGetIssueSubReasonResult GetIssueSubReason(string parentid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueSubReason", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetIssueSubReasonResponseGetIssueSubReasonResult> GetIssueSubReasonAsync(string parentid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateScaninOnInventoryCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateScaninOnInventoryCount(string productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateScaninOnInventoryCount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateScaninOnInventoryCountAsync(string productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateScaninRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateScaninRecord(string productid, string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateScaninRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateScaninRecordAsync(string productid, string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOrderDetailsResponseGetOrderDetailsResult GetOrderDetails(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderDetailsResponseGetOrderDetailsResult> GetOrderDetailsAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductCategory(int productid, string categoryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductCategoryAsync(int productid, string categoryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategorywithReadtytoprintorder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllCategorywithReadtytoprintorderResponseGetAllCategorywithReadtytoprintorderResult GetAllCategorywithReadtytoprintorder(string OrderType, System.DateTime StartDate, System.DateTime EndDate, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategorywithReadtytoprintorder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllCategorywithReadtytoprintorderResponseGetAllCategorywithReadtytoprintorderResult> GetAllCategorywithReadtytoprintorderAsync(string OrderType, System.DateTime StartDate, System.DateTime EndDate, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllCategoryResponseGetAllCategoryResult GetAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllCategoryResponseGetAllCategoryResult> GetAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCategoryResponseGetCategoryResult GetCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCategoryResponseGetCategoryResult> GetCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOrderPackingWeight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveOrderPackingWeight(int OrderNumber, string PackingWeight, string CreatedBy, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOrderPackingWeight", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveOrderPackingWeightAsync(int OrderNumber, string PackingWeight, string CreatedBy, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateproductInventorybyInventorycount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateproductInventorybyInventorycount(string ProductId, string VariantId, string sku, string barcode, string email, string InventoryType, string CompanyName, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateproductInventorybyInventorycount", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateproductInventorybyInventorycountAsync(string ProductId, string VariantId, string sku, string barcode, string email, string InventoryType, string CompanyName, string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatecostingbypostage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updatecostingbypostage(string AccountName, string SKU, string CompanyName, int OrderNumber, int VariantId, decimal PostageCost, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatecostingbypostage", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updatecostingbypostageAsync(string AccountName, string SKU, string CompanyName, int OrderNumber, int VariantId, decimal PostageCost, string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOrderPackingWeightWithpostalservice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveOrderPackingWeightWithpostalservice(int OrderNumber, string PackingWeight, string postalservice, string CreatedBy, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOrderPackingWeightWithpostalservice", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveOrderPackingWeightWithpostalserviceAsync(int OrderNumber, string PackingWeight, string postalservice, string CreatedBy, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AutoTransferMainInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AutoTransferMainInventory(int productid, int Quantity, string companyname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AutoTransferMainInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AutoTransferMainInventoryAsync(int productid, int Quantity, string companyname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCartWithZeroPid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetShoppingCartWithZeroPidResponseGetShoppingCartWithZeroPidResult GetShoppingCartWithZeroPid(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCartWithZeroPid", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartWithZeroPidResponseGetShoppingCartWithZeroPidResult> GetShoppingCartWithZeroPidAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckLoginDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckLoginDetail(string EMailField, string PasswordField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckLoginDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckLoginDetailAsync(string EMailField, string PasswordField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLoginDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLoginDetail(string EMailField, string PasswordField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLoginDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLoginDetailAsync(string EMailField, string PasswordField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsHazardProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int IsHazardProduct(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsHazardProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<int> IsHazardProductAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScanInData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetScanInDataResponseGetScanInDataResult GetScanInData(long scaninid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScanInData", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetScanInDataResponseGetScanInDataResult> GetScanInDataAsync(long scaninid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDeliveryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductDeliveryDataResponseGetProductDeliveryDataResult GetProductDeliveryData(long Deliveryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDeliveryData", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductDeliveryDataResponseGetProductDeliveryDataResult> GetProductDeliveryDataAsync(long Deliveryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInventoryId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetInventoryIdResponseGetInventoryIdResult GetInventoryId(long VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInventoryId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetInventoryIdResponseGetInventoryIdResult> GetInventoryIdAsync(long VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillGridAgainstSkuwithcompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.FillGridAgainstSkuwithcompanyResponseFillGridAgainstSkuwithcompanyResult FillGridAgainstSkuwithcompany(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillGridAgainstSkuwithcompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.FillGridAgainstSkuwithcompanyResponseFillGridAgainstSkuwithcompanyResult> FillGridAgainstSkuwithcompanyAsync(string sku, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillGridAgainstBarcodewithcompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.FillGridAgainstBarcodewithcompanyResponseFillGridAgainstBarcodewithcompanyResult FillGridAgainstBarcodewithcompany(string Barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillGridAgainstBarcodewithcompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.FillGridAgainstBarcodewithcompanyResponseFillGridAgainstBarcodewithcompanyResult> FillGridAgainstBarcodewithcompanyAsync(string Barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFBAOrdering", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetFBAOrderingResponseGetFBAOrderingResult GetFBAOrdering(string Barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFBAOrdering", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetFBAOrderingResponseGetFBAOrderingResult> GetFBAOrderingAsync(string Barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexistmessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool checkexistmessage(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexistmessage", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> checkexistmessageAsync(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetexistExpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetexistExpiry(string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetexistExpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetexistExpiryAsync(string MainProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompanybycountry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCompanybycountryResponseGetCompanybycountryResult GetCompanybycountry(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompanybycountry", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCompanybycountryResponseGetCompanybycountryResult> GetCompanybycountryAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetSupplierResponseGetSupplierResult GetSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetSupplierResponseGetSupplierResult> GetSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCompanyResponseGetCompanyResult GetCompany();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCompanyResponseGetCompanyResult> GetCompanyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAccountNameResponseGetAccountNameResult GetAccountName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAccountNameResponseGetAccountNameResult> GetAccountNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManualInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetManualInvoiceResponseGetManualInvoiceResult GetManualInvoice(string InvoiceNumber, string SKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManualInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetManualInvoiceResponseGetManualInvoiceResult> GetManualInvoiceAsync(string InvoiceNumber, string SKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOrderTypeResponseGetOrderTypeResult GetOrderType(string InvoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderTypeResponseGetOrderTypeResult> GetOrderTypeAsync(string InvoiceNumber);
        
        // CODEGEN: Parameter 'arr' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'Microsoft.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCapture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.SaveCaptureResponse SaveCapture(ServiceReference1.SaveCaptureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCapture", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SaveCaptureResponse> SaveCaptureAsync(ServiceReference1.SaveCaptureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCaptureLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveCaptureLog(string Name, string ContentType, string Data, string SystemIp, string CreatedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCaptureLog", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveCaptureLogAsync(string Name, string ContentType, string Data, string SystemIp, string CreatedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInvoicePrint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetInvoicePrintResponseGetInvoicePrintResult GetInvoicePrint(string strType, string OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInvoicePrint", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetInvoicePrintResponseGetInvoicePrintResult> GetInvoicePrintAsync(string strType, string OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllPerformaInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllPerformaInvoiceResponseGetAllPerformaInvoiceResult GetAllPerformaInvoice(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllPerformaInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllPerformaInvoiceResponseGetAllPerformaInvoiceResult> GetAllPerformaInvoiceAsync(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllManualInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetAllManualInvoiceResponseGetAllManualInvoiceResult GetAllManualInvoice(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllManualInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetAllManualInvoiceResponseGetAllManualInvoiceResult> GetAllManualInvoiceAsync(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePerchaseExpance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SavePerchaseExpance(string InvoiceNumber, System.DateTime InvoiceDate, string ShippingName, string CompanyName, string CreatedBy, string TotalPriceWithVat, string TotalVat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePerchaseExpance", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SavePerchaseExpanceAsync(string InvoiceNumber, System.DateTime InvoiceDate, string ShippingName, string CompanyName, string CreatedBy, string TotalPriceWithVat, string TotalVat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePerformaInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SavePerformaInvoice(
                    string InvoiceNumber, 
                    string SalesOrderNumber, 
                    string InvoiceType, 
                    System.DateTime InvoiceDate, 
                    string PaymentStatus, 
                    string AmountPaidTo, 
                    string ShippingName, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductId, 
                    string MainProductId, 
                    string ProductName, 
                    string SKU, 
                    string Barcode, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ProductPrice, 
                    string SalePrice, 
                    string Discount, 
                    string Commission, 
                    string WarehouseExpense, 
                    string CreatedBy, 
                    string TotalPriceWithVat, 
                    string TotalVat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePerformaInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SavePerformaInvoiceAsync(
                    string InvoiceNumber, 
                    string SalesOrderNumber, 
                    string InvoiceType, 
                    System.DateTime InvoiceDate, 
                    string PaymentStatus, 
                    string AmountPaidTo, 
                    string ShippingName, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductId, 
                    string MainProductId, 
                    string ProductName, 
                    string SKU, 
                    string Barcode, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ProductPrice, 
                    string SalePrice, 
                    string Discount, 
                    string Commission, 
                    string WarehouseExpense, 
                    string CreatedBy, 
                    string TotalPriceWithVat, 
                    string TotalVat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportOrder(ServiceReference1.ImportOrderDtorderlist dtorderlist, string SalesChannel, string TotalAmount, string shippingcost, string InvoiceDate, string ShippingAddressName, string ShippingAddressAddressLine1, string ShippingAddressAddressLine2, string city, string country, string zipcode, string EmailId, string Phonenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportOrderAsync(ServiceReference1.ImportOrderDtorderlist dtorderlist, string SalesChannel, string TotalAmount, string shippingcost, string InvoiceDate, string ShippingAddressName, string ShippingAddressAddressLine1, string ShippingAddressAddressLine2, string city, string country, string zipcode, string EmailId, string Phonenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveManulInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveManulInvoice(
                    string MId, 
                    string MInvoiceId, 
                    string ShippingName, 
                    System.DateTime InvoiceDate, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductName, 
                    string SKU, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ListPrice, 
                    string Discount, 
                    string CreatedBy, 
                    string PaymentStatus, 
                    string Reason, 
                    string DeliveredQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveManulInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveManulInvoiceAsync(
                    string MId, 
                    string MInvoiceId, 
                    string ShippingName, 
                    System.DateTime InvoiceDate, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductName, 
                    string SKU, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ListPrice, 
                    string Discount, 
                    string CreatedBy, 
                    string PaymentStatus, 
                    string Reason, 
                    string DeliveredQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDeliveredqtyManualInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDeliveredqtyManualInvoice(string InvoiceNumber, string SKU, int Qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDeliveredqtyManualInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDeliveredqtyManualInvoiceAsync(string InvoiceNumber, string SKU, int Qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompanyDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCompanyDetailsResponseGetCompanyDetailsResult GetCompanyDetails(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompanyDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCompanyDetailsResponseGetCompanyDetailsResult> GetCompanyDetailsAsync(string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteManualInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteManualInvoice(string MId, string DeletedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteManualInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteManualInvoiceAsync(string MId, string DeletedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateexpiry(string dateold, string datenew, int qty, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateexpiryAsync(string dateold, string datenew, int qty, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDuplicateOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetDuplicateOrder(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDuplicateOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> GetDuplicateOrderAsync(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcourierservice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getcourierserviceResponseGetcourierserviceResult getcourierservice(string countryname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcourierservice", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getcourierserviceResponseGetcourierserviceResult> getcourierserviceAsync(string countryname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveshipmentdetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Saveshipmentdetails(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber, string parcelweight, decimal parcelcharge, string shipby, string comprep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Saveshipmentdetails", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveshipmentdetailsAsync(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber, string parcelweight, decimal parcelcharge, string shipby, string comprep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientpromotionupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientpromotionupdated(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientpromotionupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientpromotionupdatedAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarientpromotion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryByVarientpromotion(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarientpromotion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryByVarientpromotionAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoAction(string byaction, string action, string pagename, string oldval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoAction", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoActionAsync(string byaction, string action, string pagename, string oldval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDoAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveDoAction(string byaction, string action, string pagename, string oldval, string companyname, string sku, string barcode, string ordernumber, string asinitemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDoAction", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveDoActionAsync(string byaction, string action, string pagename, string oldval, string companyname, string sku, string barcode, string ordernumber, string asinitemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPendingOrderDetailsbycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetPendingOrderDetailsbycompany(string productid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPendingOrderDetailsbycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPendingOrderDetailsbycompanyAsync(string productid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPendingOrderDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement GetPendingOrderDetails(string Barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPendingOrderDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPendingOrderDetailsAsync(string Barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarientDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDefaultVarientDetailsResponseGetDefaultVarientDetailsResult GetDefaultVarientDetails(string ProductId, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarientDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientDetailsResponseGetDefaultVarientDetailsResult> GetDefaultVarientDetailsAsync(string ProductId, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarientDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDefaultVarientDetailResponseGetDefaultVarientDetailResult GetDefaultVarientDetail(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarientDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientDetailResponseGetDefaultVarientDetailResult> GetDefaultVarientDetailAsync(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarientDetailsupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDefaultVarientDetailsupdatedResponseGetDefaultVarientDetailsupdatedResult GetDefaultVarientDetailsupdated(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDefaultVarientDetailsupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientDetailsupdatedResponseGetDefaultVarientDetailsupdatedResult> GetDefaultVarientDetailsupdatedAsync(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromMaintoSFPInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfromMaintoSFPInventory(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromMaintoSFPInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfromMaintoSFPInventoryAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMaintoSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromMaintoSFP(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMaintoSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromMaintoSFPAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtoMainInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfromSFPtoMainInventory(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtoMainInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfromSFPtoMainInventoryAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromSFPtoMain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromSFPtoMain(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromSFPtoMain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromSFPtoMainAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoMainInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfrompromotiontoMainInventory(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoMainInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfrompromotiontoMainInventoryAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfrompromotiontoMain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfrompromotiontoMain(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfrompromotiontoMain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfrompromotiontoMainAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoSFPInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfrompromotiontoSFPInventory(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoSFPInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfrompromotiontoSFPInventoryAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfrompromotiontoSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfrompromotiontoSFP(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfrompromotiontoSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfrompromotiontoSFPAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtopromotionInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfromSFPtopromotionInventory(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtopromotionInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfromSFPtopromotionInventoryAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromSFPtopromotion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromSFPtopromotion(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromSFPtopromotion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromSFPtopromotionAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMainToExpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromMainToExpiry(string VarientId, string mquantity, string quantity, System.DateTime expdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMainToExpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromMainToExpiryAsync(string VarientId, string mquantity, string quantity, System.DateTime expdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateExpiryInventory(string VarientId, string mquantity, string quantity, string expdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExpiryInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateExpiryInventoryAsync(string VarientId, string mquantity, string quantity, string expdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMainToFBA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromMainToFBA(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromMainToFBA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromMainToFBAAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromFBAToMain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromFBAToMain(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromFBAToMain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromFBAToMainAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromSFPToFBA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromSFPToFBA(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromSFPToFBA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromSFPToFBAAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromFBAToSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromFBAToSFP(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromFBAToSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromFBAToSFPAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromPromotionToFBA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferInventoryfromPromotionToFBA(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferInventoryfromPromotionToFBA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferInventoryfromPromotionToFBAAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductmaininventorybycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductmaininventorybycompany(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductmaininventorybycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductmaininventorybycompanyAsync(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updatemaininventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Updatemaininventory(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updatemaininventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdatemaininventoryAsync(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updatepromoinventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Updatepromoinventory(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updatepromoinventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdatepromoinventoryAsync(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSFPinventorybycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSFPinventorybycompany(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSFPinventorybycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateSFPinventorybycompanyAsync(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSFPinventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSFPinventory(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSFPinventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateSFPinventoryAsync(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFBAinventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateFBAinventory(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFBAinventory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateFBAinventoryAsync(int Inventory, int ProductID, int VariantID, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantityforAST", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductQuantityforAST(int Inventory, int ProductID, int VariantID, string isType, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantityforAST", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductQuantityforASTAsync(int Inventory, int ProductID, int VariantID, string isType, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getinventorybycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getinventorybycompanyResponseGetinventorybycompanyResult getinventorybycompany(string productid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getinventorybycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getinventorybycompanyResponseGetinventorybycompanyResult> getinventorybycompanyAsync(string productid, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getinventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getinventoryResponseGetinventoryResult getinventory(string productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getinventory", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getinventoryResponseGetinventoryResult> getinventoryAsync(string productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatewithskubarcodebycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirydatewithskubarcodebycompanyResponseGetExpirydatewithskubarcodebycompanyResult GetExpirydatewithskubarcodebycompany(string sku, string barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatewithskubarcodebycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirydatewithskubarcodebycompanyResponseGetExpirydatewithskubarcodebycompanyResult> GetExpirydatewithskubarcodebycompanyAsync(string sku, string barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpirybybarcode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateexpirybybarcode(string dateold, System.DateTime datenew, int qty, string sku, string companyname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpirybybarcode", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateexpirybybarcodeAsync(string dateold, System.DateTime datenew, int qty, string sku, string companyname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveproductdeliverywithexpiryout(System.DateTime dttime, int qty, int deliveryid, string companyname, string barcode, string sku, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryout", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryoutAsync(System.DateTime dttime, int qty, int deliveryid, string companyname, string barcode, string sku, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatewithskubarcodeWithoutexpiryroomdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetExpirydatewithskubarcodeWithoutexpiryroomdateResponseGetExpirydatewithskubarcodeWithoutexpiryroomdateResult GetExpirydatewithskubarcodeWithoutexpiryroomdate(string sku, string barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExpirydatewithskubarcodeWithoutexpiryroomdate", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetExpirydatewithskubarcodeWithoutexpiryroomdateResponseGetExpirydatewithskubarcodeWithoutexpiryroomdateResult> GetExpirydatewithskubarcodeWithoutexpiryroomdateAsync(string sku, string barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqtybycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpiryqtybycompany(System.DateTime expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqtybycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpiryqtybycompanyAsync(System.DateTime expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpiryqty(System.DateTime expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqty", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpiryqtyAsync(System.DateTime expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqtyExactbydate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpiryqtyExactbydate(System.DateTime expiry, string companyname, string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqtyExactbydate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpiryqtyExactbydateAsync(System.DateTime expiry, string companyname, string Barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/transferinventorywithscanoutothercompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool transferinventorywithscanoutothercompany(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/transferinventorywithscanoutothercompany", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> transferinventorywithscanoutothercompanyAsync(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpirymessagebycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpirymessagebycompany(string expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpirymessagebycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpirymessagebycompanyAsync(string expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpirymessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpirymessage(string expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpirymessage", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpirymessageAsync(string expiry, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/transferinventorywithafterscanout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool transferinventorywithafterscanout(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType, System.DateTime exp1, int qty1, System.DateTime exp2, int qty2, System.DateTime exp3, int qty3, string expmsg, int qtymsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/transferinventorywithafterscanout", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> transferinventorywithafterscanoutAsync(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType, System.DateTime exp1, int qty1, System.DateTime exp2, int qty2, System.DateTime exp3, int qty3, string expmsg, int qtymsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientexpirybycompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientexpirybycompany(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientexpirybycompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientexpirybycompanyAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateexpiryInventoryByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateexpiryInventoryByVarient(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateexpiryInventoryByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateexpiryInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientpromotioncompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientpromotioncompany(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientpromotioncompany", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientpromotioncompanyAsync(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatepromotionInventoryByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdatepromotionInventoryByVarient(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatepromotionInventoryByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdatepromotionInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFBAInventoryByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateFBAInventoryByVarient(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFBAInventoryByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateFBAInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getoldproductid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Getoldproductid(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getoldproductid", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetoldproductidAsync(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getoldvariantid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Getoldvariantid(int vid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getoldvariantid", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetoldvariantidAsync(int vid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueIdByorderNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetIssueIdByorderNumber(int OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIssueIdByorderNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetIssueIdByorderNumberAsync(int OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductQuantity(string barcode, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductQuantityAsync(string barcode, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantityupdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductQuantityupdate(int Inventory, int ProductID, int VariantID, string isType, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantityupdate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductQuantityupdateAsync(int Inventory, int ProductID, int VariantID, string isType, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantityforindia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductQuantityforindia(int Inventory, int ProductID, int VariantID, string isType, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantityforindia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductQuantityforindiaAsync(int Inventory, int ProductID, int VariantID, string isType, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantity1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductQuantity1(int Inventory, int ProductID, int VariantID, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductQuantity1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductQuantity1Async(int Inventory, int ProductID, int VariantID, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantity(string barcode, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityAsync(string barcode, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarient(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarient", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientexpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientexpiry(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientexpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientexpiryAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarientexpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryByVarientexpiry(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarientexpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryByVarientexpiryAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryforscanoutwithsku", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpiryforscanoutwithsku(System.DateTime expiry, string barcode, string inventorytype, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryforscanoutwithsku", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpiryforscanoutwithskuAsync(System.DateTime expiry, string barcode, string inventorytype, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpirymessageforscanoutwithsku", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpirymessageforscanoutwithsku(string expiry, string barcode, string inventorytype, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpirymessageforscanoutwithsku", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpirymessageforscanoutwithskuAsync(string expiry, string barcode, string inventorytype, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientforindia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientforindia(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientforindia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientforindiaAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDeliveredQuantity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateDeliveredQuantity(int DeliveredQuantity, int OrderNumber, int ShoppingCartRecID, int CustomerID, int ProductID, int VariantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDeliveredQuantity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateDeliveredQuantityAsync(int DeliveredQuantity, int OrderNumber, int ShoppingCartRecID, int CustomerID, int ProductID, int VariantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductDetailResponseGetProductDetailResult GetProductDetail(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductDetailResponseGetProductDetailResult> GetProductDetailAsync(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOrderResponseGetOrderResult GetOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderResponseGetOrderResult> GetOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsPausedOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int IsPausedOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsPausedOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<int> IsPausedOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFORCE_VOIDED", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int IsFORCE_VOIDED(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFORCE_VOIDED", ReplyAction="*")]
        System.Threading.Tasks.Task<int> IsFORCE_VOIDEDAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetCustomerResponseGetCustomerResult GetCustomer(int CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetCustomerResponseGetCustomerResult> GetCustomerAsync(int CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarCodeByVId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetBarCodeByVIdResponseGetBarCodeByVIdResult GetBarCodeByVId(string SKUSuffix, int VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarCodeByVId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetBarCodeByVIdResponseGetBarCodeByVIdResult> GetBarCodeByVIdAsync(string SKUSuffix, int VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcompanyorder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Getcompanyorder(string OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcompanyorder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetcompanyorderAsync(string OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcompanyname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Getcompanyname(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getcompanyname", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetcompanynameAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVariantByPIdnSKu", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetVariantByPIdnSKuResponseGetVariantByPIdnSKuResult GetVariantByPIdnSKu(string SKUSuffix, int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVariantByPIdnSKu", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetVariantByPIdnSKuResponseGetVariantByPIdnSKuResult> GetVariantByPIdnSKuAsync(string SKUSuffix, int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarCodeByPIdwithcompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetBarCodeByPIdwithcompanyResponseGetBarCodeByPIdwithcompanyResult GetBarCodeByPIdwithcompany(string SKU, int ProductId, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarCodeByPIdwithcompany", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetBarCodeByPIdwithcompanyResponseGetBarCodeByPIdwithcompanyResult> GetBarCodeByPIdwithcompanyAsync(string SKU, int ProductId, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getwarehouseanouncement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.ArrayOfXElement getwarehouseanouncement(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getwarehouseanouncement", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> getwarehouseanouncementAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpirybybarcodemsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateexpirybybarcodemsg(string dateold, string datenew, int qty, string sku, string companyname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpirybybarcodemsg", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateexpirybybarcodemsgAsync(string dateold, string datenew, int qty, string sku, string companyname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDelivery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductDelivery(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDelivery", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductDeliveryAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarCodeByPIdsku", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetBarCodeByPIdskuResponseGetBarCodeByPIdskuResult GetBarCodeByPIdsku(string SKU, int ProductId, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarCodeByPIdsku", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetBarCodeByPIdskuResponseGetBarCodeByPIdskuResult> GetBarCodeByPIdskuAsync(string SKU, int ProductId, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSKUByOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetSKUByOrderResponseGetSKUByOrderResult GetSKUByOrder(int OrderNumber, int VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSKUByOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetSKUByOrderResponseGetSKUByOrderResult> GetSKUByOrderAsync(int OrderNumber, int VariantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetProductResponseGetProductResult GetProduct(int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetProductResponseGetProductResult> GetProductAsync(int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPopup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPopup(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPopup", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPopupAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDamageqtyupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateDamageqtyupdated(int productid, int variantid, int qty, string companyname, string expdate, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDamageqtyupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateDamageqtyupdatedAsync(int productid, int variantid, int qty, string companyname, string expdate, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductINdamageroom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductINdamageroom(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductINdamageroom", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductINdamageroomAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpirydate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDamageExpirydateResponseGetDamageExpirydateResult GetDamageExpirydate(string sku, string barcode, string inventoryfor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpirydate", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDamageExpirydateResponseGetDamageExpirydateResult> GetDamageExpirydateAsync(string sku, string barcode, string inventoryfor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpirydt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDamageExpirydtResponseGetDamageExpirydtResult GetDamageExpirydt(string sku, string barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpirydt", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDamageExpirydtResponseGetDamageExpirydtResult> GetDamageExpirydtAsync(string sku, string barcode, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDamageExpiryResponseGetDamageExpiryResult GetDamageExpiry(string sku, string inventoryfor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDamageExpiryResponseGetDamageExpiryResult> GetDamageExpiryAsync(string sku, string inventoryfor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpirymsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetDamageExpirymsgResponseGetDamageExpirymsgResult GetDamageExpirymsg(string sku, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDamageExpirymsg", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetDamageExpirymsgResponseGetDamageExpirymsgResult> GetDamageExpirymsgAsync(string sku, string Companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetShoppingCartResponseGetShoppingCartResult GetShoppingCart(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCart", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartResponseGetShoppingCartResult> GetShoppingCartAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCartMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetShoppingCartMultipleResponseGetShoppingCartMultipleResult GetShoppingCartMultiple(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCartMultiple", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartMultipleResponseGetShoppingCartMultipleResult> GetShoppingCartMultipleAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMultipleShopingCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateMultipleShopingCart(int Ordernumber, int productid, int variantid, int qty, string deliverby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMultipleShopingCart", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateMultipleShopingCartAsync(int Ordernumber, int productid, int variantid, int qty, string deliverby, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCartupdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetShoppingCartupdateResponseGetShoppingCartupdateResult GetShoppingCartupdate(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShoppingCartupdate", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartupdateResponseGetShoppingCartupdateResult> GetShoppingCartupdateAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductScanIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateProductScanIn(
                    long ScanInId, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    long ScanInQty, 
                    string InvoiceNo, 
                    string Reason, 
                    long DockedNo, 
                    string Value, 
                    string Quantity, 
                    decimal CreditStockPayment, 
                    long CreditNoteNo, 
                    string Email, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    string msg, 
                    string dtime, 
                    string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductScanIn", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateProductScanInAsync(
                    long ScanInId, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    long ScanInQty, 
                    string InvoiceNo, 
                    string Reason, 
                    long DockedNo, 
                    string Value, 
                    string Quantity, 
                    decimal CreditStockPayment, 
                    long CreditNoteNo, 
                    string Email, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    string msg, 
                    string dtime, 
                    string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update_OrderSystem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Update_OrderSystem(long OrderSystemId, long Release_OrderSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update_OrderSystem", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Update_OrderSystemAsync(long OrderSystemId, long Release_OrderSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductDelivery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateProductDelivery(long DeliveryId, System.DateTime InvoiceDate, long SupplierId, long DeliveredQty, string InvoiceNo, string Reason, long DockedNo, string Value, string Quantity, decimal CreditStockPayment, long CreditNoteNo, string valueexcvat, string valueincvat, long manualordno, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductDelivery", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateProductDeliveryAsync(long DeliveryId, System.DateTime InvoiceDate, long SupplierId, long DeliveredQty, string InvoiceNo, string Reason, long DockedNo, string Value, string Quantity, decimal CreditStockPayment, long CreditNoteNo, string valueexcvat, string valueincvat, long manualordno, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderSystem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateOrderSystem(long OrderSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderSystem", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateOrderSystemAsync(long OrderSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderSystemBackOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateOrderSystemBackOrder(long OrderSystemId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderSystemBackOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateOrderSystemBackOrderAsync(long OrderSystemId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderTransactionState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateOrderTransactionState(long OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderTransactionState", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateOrderTransactionStateAsync(long OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateorderstatusafterscanin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateorderstatusafterscanin(long Productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateorderstatusafterscanin", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateorderstatusafterscaninAsync(long Productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateorderstatusaftertransferqty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateorderstatusaftertransferqty(long Productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateorderstatusaftertransferqty", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateorderstatusaftertransferqtyAsync(long Productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateorderstatusafterscanout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateorderstatusafterscanout(long Productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateorderstatusafterscanout", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateorderstatusafterscanoutAsync(long Productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanInupdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductScanInupdated(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanInupdated", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductScanInupdatedAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductDeliveryexpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateProductDeliveryexpiry(long DeliveryId, long DeliveredQty, string expmsg, string expdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductDeliveryexpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateProductDeliveryexpiryAsync(long DeliveryId, long DeliveredQty, string expmsg, string expdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDeliveryexpiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getDeliveryexpiryResponseGetDeliveryexpiryResult getDeliveryexpiry(long DeliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDeliveryexpiry", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getDeliveryexpiryResponseGetDeliveryexpiryResult> getDeliveryexpiryAsync(long DeliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliverynew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductDeliverynew(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductDeliverynew", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductDeliverynewAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveProductScanIn(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProductScanIn", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveProductScanInAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpirymsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Updateexpirymsg(string dateold, string datenew, int qty, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Updateexpirymsg", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateexpirymsgAsync(string dateold, string datenew, int qty, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderQuentity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetOrderQuentityResponseGetOrderQuentityResult GetOrderQuentity(int OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderQuentity", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderQuentityResponseGetOrderQuentityResult> GetOrderQuentityAsync(int OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ispromotionstartwithsupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Ispromotionstartwithsupplier(int productid, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ispromotionstartwithsupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IspromotionstartwithsupplierAsync(int productid, long supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ispromotionstart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Ispromotionstart(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ispromotionstart", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IspromotionstartAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCategoryLockedForInventoryCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsCategoryLockedForInventoryCount(string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCategoryLockedForInventoryCount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsCategoryLockedForInventoryCountAsync(string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqtybymultipledate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkexpiryqtybymultipledate(System.DateTime expiry, System.DateTime expiry2, System.DateTime expiry3, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkexpiryqtybymultipledate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkexpiryqtybymultipledateAsync(System.DateTime expiry, System.DateTime expiry2, System.DateTime expiry3, string barcode, string companyname, string sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrackedOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.GetTrackedOrderResponseGetTrackedOrderResult GetTrackedOrder(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrackedOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTrackedOrderResponseGetTrackedOrderResult> GetTrackedOrderAsync(string ordernumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryoutbymultipledate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool saveproductdeliverywithexpiryoutbymultipledate(System.DateTime dttime, System.DateTime dttime2, System.DateTime dttime3, int qty, int deliveryid, string companyname, string barcode, string sku, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveproductdeliverywithexpiryoutbymultipledate", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryoutbymultipledateAsync(System.DateTime dttime, System.DateTime dttime2, System.DateTime dttime3, int qty, int deliveryid, string companyname, string barcode, string sku, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsRecountstart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsRecountstart(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsRecountstart", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsRecountstartAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromMaintoSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfromMaintoSFP(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromMaintoSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfromMaintoSFPAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtoMain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfromSFPtoMain(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtoMain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfromSFPtoMainAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtopromotion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfromSFPtopromotion(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfromSFPtopromotion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfromSFPtopromotionAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfrompromotiontoSFP(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfrompromotiontoSFPAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoMain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferfrompromotiontoMain(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferfrompromotiontoMain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransferfrompromotiontoMainAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientPscanoutSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryQuantityByVarientPscanoutSFP(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryQuantityByVarientPscanoutSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientPscanoutSFPAsync(string VarientId, string mquantity, string quantity, string isType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarientPscanoutSFP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateInventoryByVarientPscanoutSFP(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateInventoryByVarientPscanoutSFP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateInventoryByVarientPscanoutSFPAsync(string VarientId, string mquantity, string quantity, string companyname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getinventoryall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getinventoryallResponseGetinventoryallResult getinventoryall(string productid, string countryname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getinventoryall", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getinventoryallResponseGetinventoryallResult> getinventoryallAsync(string productid, string countryname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankHolidays", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ServiceReference1.getBankHolidaysResponseGetBankHolidaysResult getBankHolidays();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankHolidays", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.getBankHolidaysResponseGetBankHolidaysResult> getBankHolidaysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveAsShipped", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveAsShipped(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveAsShipped", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveAsShippedAsync(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getproductdetailsbycompanyResponseGetproductdetailsbycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetSellinglevelResponseGetSellinglevelResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class OrderRecievedScanByDetailsResponseOrderRecievedScanByDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetSameCustomerOrderResponseGetSameCustomerOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class LastScanInDetailsResponseLastScanInDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class SameDayScanInDetailsResponseSameDayScanInDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class Get_Amazon_Click_And_Collect_Order_ForPickedUPResponseGet_Amazon_Click_And_Collect_Order_ForPickedUPResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class Get_Saved_Notification_TimeResponseGet_Saved_Notification_TimeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class mergepdfDT : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getACACInventoryResponseGetACACInventoryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getOrderRecievedReadyToPrintforcomputerResponseGetOrderRecievedReadyToPrintforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPUserResponseJKIOPUserResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPGetAccessForRoleResponseJKIOPGetAccessForRoleResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadAllUserResponseJKIOPLoadAllUserResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadAllStudentResponseJKIOPLoadAllStudentResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetdAllStudentbysessionResponseGetdAllStudentbysessionResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class DownloadUploadedfileByIdResponseDownloadUploadedfileByIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class DownloadUploadedfileBySupplierResponseDownloadUploadedfileBySupplierResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadStudentInfoResponseJKIOPLoadStudentInfoResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadStudentPaymentInfoResponseJKIOPLoadStudentPaymentInfoResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadROllResponseJKIOPLoadROllResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPUSERROllResponseJKIOPUSERROllResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPGetAllScreenForRoleResponseJKIOPGetAllScreenForRoleResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadPaymentResponseJKIOPLoadPaymentResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetstudentforInvoiceResponseGetstudentforInvoiceResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadPaymentDetailBySPIdResponseJKIOPLoadPaymentDetailBySPIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadPaymentBySPIdResponseJKIOPLoadPaymentBySPIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadPaymentByPaymentIdResponseJKIOPLoadPaymentByPaymentIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDocumentResponseGetDocumentResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDocumentByIdResponseGetDocumentByIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadStaffExpenseResponseJKIOPLoadStaffExpenseResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadStaffExpenseByIdResponseJKIOPLoadStaffExpenseByIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadSupplierByIdResponseJKIOPLoadSupplierByIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadSupplierResponseJKIOPLoadSupplierResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPLoadstudentbysearchResponseJKIOPLoadstudentbysearchResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPStudentPaymentInfoResponseJKIOPStudentPaymentInfoResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class SupplierExpenseHistoryResponseSupplierExpenseHistoryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class SupplierExpenseHistoryBYHidResponseSupplierExpenseHistoryBYHidResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class LoadExternalLinkByFormIdAndTypeResponseLoadExternalLinkByFormIdAndTypeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class LoadSupplierPaymentBySPIdResponseLoadSupplierPaymentBySPIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class JKIOPSupplierPaymentBySupplierIdResponseJKIOPSupplierPaymentBySupplierIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetStudentFineResponseGetStudentFineResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getstudentinfobyrollnumberResponseGetstudentinfobyrollnumberResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getstudentfineinfobyFIneIdResponseGetstudentfineinfobyFIneIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getstudentfineinfobyRollnumberResponseGetstudentfineinfobyRollnumberResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getstudentRefundinfobyRollnumberResponseGetstudentRefundinfobyRollnumberResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getstudentRefundinfobyRefundIdResponseGetstudentRefundinfobyRefundIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetStudentRefundResponseGetStudentRefundResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOfficeLeaveDetailsResponseGetOfficeLeaveDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetStaffRotaResponseGetStaffRotaResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTaskNameResponseGetTaskNameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTaskNamesResponseGetTaskNamesResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTeamNameResponseGetTeamNameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetStaffCountryWiseResponseGetStaffCountryWiseResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class CheckTaskRunningOnComputerResponseCheckTaskRunningOnComputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTasksResponseGetTasksResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetStaffInOutResponseGetStaffInOutResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class checkproductcategoryforcomputerResponseCheckproductcategoryforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetcategoryforcomputerResponseGetcategoryforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetunshippedorderforcomputerResponseGetunshippedorderforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class checkproductcategoryforcomputerbyordernumberResponseCheckproductcategoryforcomputerbyordernumberResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class gettodayshippedordercategoryforcomputerResponseGettodayshippedordercategoryforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetunshippedorderbycompanyResponseGetunshippedorderbycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetToadyshippedorderbycompanyResponseGetToadyshippedorderbycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetlateshipmentResponseGetlateshipmentResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetstaffbycomputerResponseGetstaffbycomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetShipUnshipLateshipOrderResponseGetShipUnshipLateshipOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getunshippedorderbyComputerNameResponseGetunshippedorderbyComputerNameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getunshipandtodayshiporderforcomputerResponseGetunshipandtodayshiporderforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getComputerbypackingTodayResponseGetComputerbypackingTodayResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getlateshipmentbycategoryforcomputerResponseGetlateshipmentbycategoryforcomputerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getstaffbypackingTodayResponseGetstaffbypackingTodayResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetComputerNameResponseGetComputerNameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCurrentComputerByStaffResponseGetCurrentComputerByStaffResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getworkreportResponseGetworkreportResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getworkreportUpdatedResponseGetworkreportUpdatedResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOrderAccountwiseResponseGetOrderAccountwiseResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOrderAccountwiseupdatedResponseGetOrderAccountwiseupdatedResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllCategorybycomputerwiseResponseGetAllCategorybycomputerwiseResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllunshippedOrderResponseGetAllunshippedOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllOutOfStockOrderResponseGetAllOutOfStockOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllOrderStatusQtyResponseGetAllOrderStatusQtyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetComputerNameByShiftResponseGetComputerNameByShiftResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetLoginPermissionResponseGetLoginPermissionResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAccessForRoleResponseGetAccessForRoleResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetorderPrintlabelResponseGetorderPrintlabelResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAutodownloadLabelOrderResponseGetAutodownloadLabelOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getproductResponseGetproductResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductByIdResponseGetProductByIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllBrandResponseGetAllBrandResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTaxClassResponseGetTaxClassResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetUserWithrollResponseGetUserWithrollResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetUserrollResponseGetUserrollResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllScreenForRoleResponseGetAllScreenForRoleResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetuserByRoleIdResponseGetuserByRoleIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class LoadCreditnoteForPaperWorkResponseLoadCreditnoteForPaperWorkResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCreditNoteWithoutDocResponseGetCreditNoteWithoutDocResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class LoadQuantityAdjustmentOpenCaseResponseLoadQuantityAdjustmentOpenCaseResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetListOfPrintOrderErrorResponseGetListOfPrintOrderErrorResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDefaultVarientResponseGetDefaultVarientResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetclearenceorderResponseGetclearenceorderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetsellingchannelResponseGetsellingchannelResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetpostagetypeResponseGetpostagetypeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetpostageResponseGetpostageResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpiryproductdatebycompanyResponseGetExpiryproductdatebycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirydatebycompanynameResponseGetExpirydatebycompanynameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirydateResponseGetExpirydateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirydatefromexpiryroomResponseGetExpirydatefromexpiryroomResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirymessagebycompanynameResponseGetExpirymessagebycompanynameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirymsgResponseGetExpirymsgResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductDetailbycompanyResponseGetProductDetailbycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetScanInProductResponseGetScanInProductResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductDetailsResponseGetProductDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductRackLabelResponseGetProductRackLabelResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getcostingbyorderResponseGetcostingbyorderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetPalletNumberResponseGetPalletNumberResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetPalletResponseGetPalletResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetUserResponseGetUserResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetcollectionnoofItemResponseGetcollectionnoofItemResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetShelfingnoofItemResponseGetShelfingnoofItemResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class WareHouseStaffResponseWareHouseStaffResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTaskTimerResponseGetTaskTimerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class checknondeliveredorderResponseChecknondeliveredorderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class LoadOrderIssuesResponseLoadOrderIssuesResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getMainProductIdResponseGetMainProductIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getproductvariantbypacksizeResponseGetproductvariantbypacksizeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getFileTypeResponseGetFileTypeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetpostagebyVIDResponseGetpostagebyVIDResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetpostagebyAccountResponseGetpostagebyAccountResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class updatecostingbypostagechangeResponseUpdatecostingbypostagechangeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetInventoryCountDetailsResponseGetInventoryCountDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetIssueReasonResponseGetIssueReasonResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetIssueSubReasonResponseGetIssueSubReasonResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOrderDetailsResponseGetOrderDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllCategorywithReadtytoprintorderResponseGetAllCategorywithReadtytoprintorderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllCategoryResponseGetAllCategoryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCategoryResponseGetCategoryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetShoppingCartWithZeroPidResponseGetShoppingCartWithZeroPidResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetScanInDataResponseGetScanInDataResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductDeliveryDataResponseGetProductDeliveryDataResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetInventoryIdResponseGetInventoryIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class FillGridAgainstSkuwithcompanyResponseFillGridAgainstSkuwithcompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class FillGridAgainstBarcodewithcompanyResponseFillGridAgainstBarcodewithcompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetFBAOrderingResponseGetFBAOrderingResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCompanybycountryResponseGetCompanybycountryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetSupplierResponseGetSupplierResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCompanyResponseGetCompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAccountNameResponseGetAccountNameResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetManualInvoiceResponseGetManualInvoiceResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOrderTypeResponseGetOrderTypeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveCapture", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveCaptureRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ContentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] arr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string SystemIp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string CreatedOn;
        
        public SaveCaptureRequest()
        {
        }
        
        public SaveCaptureRequest(string Name, string ContentType, byte[] arr, string SystemIp, string CreatedOn)
        {
            this.Name = Name;
            this.ContentType = ContentType;
            this.arr = arr;
            this.SystemIp = SystemIp;
            this.CreatedOn = CreatedOn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveCaptureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveCaptureResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SaveCaptureResult;
        
        public SaveCaptureResponse()
        {
        }
        
        public SaveCaptureResponse(int SaveCaptureResult)
        {
            this.SaveCaptureResult = SaveCaptureResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetInvoicePrintResponseGetInvoicePrintResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllPerformaInvoiceResponseGetAllPerformaInvoiceResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAllManualInvoiceResponseGetAllManualInvoiceResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class ImportOrderDtorderlist : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCompanyDetailsResponseGetCompanyDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getcourierserviceResponseGetcourierserviceResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDefaultVarientDetailsResponseGetDefaultVarientDetailsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDefaultVarientDetailResponseGetDefaultVarientDetailResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDefaultVarientDetailsupdatedResponseGetDefaultVarientDetailsupdatedResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getinventorybycompanyResponseGetinventorybycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getinventoryResponseGetinventoryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirydatewithskubarcodebycompanyResponseGetExpirydatewithskubarcodebycompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExpirydatewithskubarcodeWithoutexpiryroomdateResponseGetExpirydatewithskubarcodeWithoutexpiryroomdateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductDetailResponseGetProductDetailResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOrderResponseGetOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCustomerResponseGetCustomerResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetBarCodeByVIdResponseGetBarCodeByVIdResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetVariantByPIdnSKuResponseGetVariantByPIdnSKuResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetBarCodeByPIdwithcompanyResponseGetBarCodeByPIdwithcompanyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetBarCodeByPIdskuResponseGetBarCodeByPIdskuResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetSKUByOrderResponseGetSKUByOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetProductResponseGetProductResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDamageExpirydateResponseGetDamageExpirydateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDamageExpirydtResponseGetDamageExpirydtResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDamageExpiryResponseGetDamageExpiryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetDamageExpirymsgResponseGetDamageExpirymsgResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetShoppingCartResponseGetShoppingCartResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetShoppingCartMultipleResponseGetShoppingCartMultipleResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetShoppingCartupdateResponseGetShoppingCartupdateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getDeliveryexpiryResponseGetDeliveryexpiryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetOrderQuentityResponseGetOrderQuentityResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetTrackedOrderResponseGetTrackedOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getinventoryallResponseGetinventoryallResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getBankHolidaysResponseGetBankHolidaysResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface BarcodeWebServiceSoapChannel : ServiceReference1.BarcodeWebServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class BarcodeWebServiceSoapClient : System.ServiceModel.ClientBase<ServiceReference1.BarcodeWebServiceSoap>, ServiceReference1.BarcodeWebServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BarcodeWebServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(BarcodeWebServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), BarcodeWebServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BarcodeWebServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BarcodeWebServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BarcodeWebServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BarcodeWebServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BarcodeWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int SaveStaffIn(string StaffEmailId, string ScanInTime, string CountryName)
        {
            return base.Channel.SaveStaffIn(StaffEmailId, ScanInTime, CountryName);
        }
        
        public System.Threading.Tasks.Task<int> SaveStaffInAsync(string StaffEmailId, string ScanInTime, string CountryName)
        {
            return base.Channel.SaveStaffInAsync(StaffEmailId, ScanInTime, CountryName);
        }
        
        public int SaveStaffOut(string StaffEmailId, string ScanOutTime)
        {
            return base.Channel.SaveStaffOut(StaffEmailId, ScanOutTime);
        }
        
        public System.Threading.Tasks.Task<int> SaveStaffOutAsync(string StaffEmailId, string ScanOutTime)
        {
            return base.Channel.SaveStaffOutAsync(StaffEmailId, ScanOutTime);
        }
        
        public int SaveStaffScanIn(string StaffEmailId)
        {
            return base.Channel.SaveStaffScanIn(StaffEmailId);
        }
        
        public System.Threading.Tasks.Task<int> SaveStaffScanInAsync(string StaffEmailId)
        {
            return base.Channel.SaveStaffScanInAsync(StaffEmailId);
        }
        
        public int SaveStaffScanOut(string StaffEmailId)
        {
            return base.Channel.SaveStaffScanOut(StaffEmailId);
        }
        
        public System.Threading.Tasks.Task<int> SaveStaffScanOutAsync(string StaffEmailId)
        {
            return base.Channel.SaveStaffScanOutAsync(StaffEmailId);
        }
        
        public ServiceReference1.getproductdetailsbycompanyResponseGetproductdetailsbycompanyResult getproductdetailsbycompany(string Companyname)
        {
            return base.Channel.getproductdetailsbycompany(Companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getproductdetailsbycompanyResponseGetproductdetailsbycompanyResult> getproductdetailsbycompanyAsync(string Companyname)
        {
            return base.Channel.getproductdetailsbycompanyAsync(Companyname);
        }
        
        public ServiceReference1.GetSellinglevelResponseGetSellinglevelResult GetSellinglevel(string MainProductId)
        {
            return base.Channel.GetSellinglevel(MainProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetSellinglevelResponseGetSellinglevelResult> GetSellinglevelAsync(string MainProductId)
        {
            return base.Channel.GetSellinglevelAsync(MainProductId);
        }
        
        public ServiceReference1.OrderRecievedScanByDetailsResponseOrderRecievedScanByDetailsResult OrderRecievedScanByDetails(string ProductId)
        {
            return base.Channel.OrderRecievedScanByDetails(ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.OrderRecievedScanByDetailsResponseOrderRecievedScanByDetailsResult> OrderRecievedScanByDetailsAsync(string ProductId)
        {
            return base.Channel.OrderRecievedScanByDetailsAsync(ProductId);
        }
        
        public ServiceReference1.GetSameCustomerOrderResponseGetSameCustomerOrderResult GetSameCustomerOrder(string OrderNumber)
        {
            return base.Channel.GetSameCustomerOrder(OrderNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetSameCustomerOrderResponseGetSameCustomerOrderResult> GetSameCustomerOrderAsync(string OrderNumber)
        {
            return base.Channel.GetSameCustomerOrderAsync(OrderNumber);
        }
        
        public ServiceReference1.LastScanInDetailsResponseLastScanInDetailsResult LastScanInDetails(string ProductId)
        {
            return base.Channel.LastScanInDetails(ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.LastScanInDetailsResponseLastScanInDetailsResult> LastScanInDetailsAsync(string ProductId)
        {
            return base.Channel.LastScanInDetailsAsync(ProductId);
        }
        
        public ServiceReference1.SameDayScanInDetailsResponseSameDayScanInDetailsResult SameDayScanInDetails(string MainProductId)
        {
            return base.Channel.SameDayScanInDetails(MainProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SameDayScanInDetailsResponseSameDayScanInDetailsResult> SameDayScanInDetailsAsync(string MainProductId)
        {
            return base.Channel.SameDayScanInDetailsAsync(MainProductId);
        }
        
        public ServiceReference1.Get_Amazon_Click_And_Collect_Order_ForPickedUPResponseGet_Amazon_Click_And_Collect_Order_ForPickedUPResult Get_Amazon_Click_And_Collect_Order_ForPickedUP()
        {
            return base.Channel.Get_Amazon_Click_And_Collect_Order_ForPickedUP();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Get_Amazon_Click_And_Collect_Order_ForPickedUPResponseGet_Amazon_Click_And_Collect_Order_ForPickedUPResult> Get_Amazon_Click_And_Collect_Order_ForPickedUPAsync()
        {
            return base.Channel.Get_Amazon_Click_And_Collect_Order_ForPickedUPAsync();
        }
        
        public ServiceReference1.Get_Saved_Notification_TimeResponseGet_Saved_Notification_TimeResult Get_Saved_Notification_Time(string msgtype)
        {
            return base.Channel.Get_Saved_Notification_Time(msgtype);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Get_Saved_Notification_TimeResponseGet_Saved_Notification_TimeResult> Get_Saved_Notification_TimeAsync(string msgtype)
        {
            return base.Channel.Get_Saved_Notification_TimeAsync(msgtype);
        }
        
        public string mergepdf(ServiceReference1.mergepdfDT dt, string mergedFileName)
        {
            return base.Channel.mergepdf(dt, mergedFileName);
        }
        
        public System.Threading.Tasks.Task<string> mergepdfAsync(ServiceReference1.mergepdfDT dt, string mergedFileName)
        {
            return base.Channel.mergepdfAsync(dt, mergedFileName);
        }
        
        public void ImportASTEbayOrders(ServiceReference1.ArrayOfXElement ds)
        {
            base.Channel.ImportASTEbayOrders(ds);
        }
        
        public System.Threading.Tasks.Task ImportASTEbayOrdersAsync(ServiceReference1.ArrayOfXElement ds)
        {
            return base.Channel.ImportASTEbayOrdersAsync(ds);
        }
        
        public void ImportAmazonForAST(ServiceReference1.ArrayOfXElement ds)
        {
            base.Channel.ImportAmazonForAST(ds);
        }
        
        public System.Threading.Tasks.Task ImportAmazonForASTAsync(ServiceReference1.ArrayOfXElement ds)
        {
            return base.Channel.ImportAmazonForASTAsync(ds);
        }
        
        public int createconsignment()
        {
            return base.Channel.createconsignment();
        }
        
        public System.Threading.Tasks.Task<int> createconsignmentAsync()
        {
            return base.Channel.createconsignmentAsync();
        }
        
        public int getlistofcreatedconsignment()
        {
            return base.Channel.getlistofcreatedconsignment();
        }
        
        public System.Threading.Tasks.Task<int> getlistofcreatedconsignmentAsync()
        {
            return base.Channel.getlistofcreatedconsignmentAsync();
        }
        
        public int getlistofcreatedconsignmentast()
        {
            return base.Channel.getlistofcreatedconsignmentast();
        }
        
        public System.Threading.Tasks.Task<int> getlistofcreatedconsignmentastAsync()
        {
            return base.Channel.getlistofcreatedconsignmentastAsync();
        }
        
        public bool UpdateAmazonClickAndCollectInventory(long VariantId, int Qty, string Reason, string EmailId)
        {
            return base.Channel.UpdateAmazonClickAndCollectInventory(VariantId, Qty, Reason, EmailId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAmazonClickAndCollectInventoryAsync(long VariantId, int Qty, string Reason, string EmailId)
        {
            return base.Channel.UpdateAmazonClickAndCollectInventoryAsync(VariantId, Qty, Reason, EmailId);
        }
        
        public ServiceReference1.getACACInventoryResponseGetACACInventoryResult getACACInventory(string VariantId)
        {
            return base.Channel.getACACInventory(VariantId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getACACInventoryResponseGetACACInventoryResult> getACACInventoryAsync(string VariantId)
        {
            return base.Channel.getACACInventoryAsync(VariantId);
        }
        
        public ServiceReference1.getOrderRecievedReadyToPrintforcomputerResponseGetOrderRecievedReadyToPrintforcomputerResult getOrderRecievedReadyToPrintforcomputer(string computername, string companyname)
        {
            return base.Channel.getOrderRecievedReadyToPrintforcomputer(computername, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getOrderRecievedReadyToPrintforcomputerResponseGetOrderRecievedReadyToPrintforcomputerResult> getOrderRecievedReadyToPrintforcomputerAsync(string computername, string companyname)
        {
            return base.Channel.getOrderRecievedReadyToPrintforcomputerAsync(computername, companyname);
        }
        
        public ServiceReference1.JKIOPUserResponseJKIOPUserResult JKIOPUser(string username, string password)
        {
            return base.Channel.JKIOPUser(username, password);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPUserResponseJKIOPUserResult> JKIOPUserAsync(string username, string password)
        {
            return base.Channel.JKIOPUserAsync(username, password);
        }
        
        public ServiceReference1.JKIOPGetAccessForRoleResponseJKIOPGetAccessForRoleResult JKIOPGetAccessForRole(long RoleId)
        {
            return base.Channel.JKIOPGetAccessForRole(RoleId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPGetAccessForRoleResponseJKIOPGetAccessForRoleResult> JKIOPGetAccessForRoleAsync(long RoleId)
        {
            return base.Channel.JKIOPGetAccessForRoleAsync(RoleId);
        }
        
        public ServiceReference1.JKIOPLoadAllUserResponseJKIOPLoadAllUserResult JKIOPLoadAllUser()
        {
            return base.Channel.JKIOPLoadAllUser();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadAllUserResponseJKIOPLoadAllUserResult> JKIOPLoadAllUserAsync()
        {
            return base.Channel.JKIOPLoadAllUserAsync();
        }
        
        public string SaveJKIOPUser(string UserId, string RoleId, string UserName, string UserPassword, bool IsActive)
        {
            return base.Channel.SaveJKIOPUser(UserId, RoleId, UserName, UserPassword, IsActive);
        }
        
        public System.Threading.Tasks.Task<string> SaveJKIOPUserAsync(string UserId, string RoleId, string UserName, string UserPassword, bool IsActive)
        {
            return base.Channel.SaveJKIOPUserAsync(UserId, RoleId, UserName, UserPassword, IsActive);
        }
        
        public ServiceReference1.JKIOPLoadAllStudentResponseJKIOPLoadAllStudentResult JKIOPLoadAllStudent()
        {
            return base.Channel.JKIOPLoadAllStudent();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadAllStudentResponseJKIOPLoadAllStudentResult> JKIOPLoadAllStudentAsync()
        {
            return base.Channel.JKIOPLoadAllStudentAsync();
        }
        
        public int DeleteUserMaster(long UserId)
        {
            return base.Channel.DeleteUserMaster(UserId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserMasterAsync(long UserId)
        {
            return base.Channel.DeleteUserMasterAsync(UserId);
        }
        
        public ServiceReference1.GetdAllStudentbysessionResponseGetdAllStudentbysessionResult GetdAllStudentbysession(string session, string startdate, string enddate)
        {
            return base.Channel.GetdAllStudentbysession(session, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetdAllStudentbysessionResponseGetdAllStudentbysessionResult> GetdAllStudentbysessionAsync(string session, string startdate, string enddate)
        {
            return base.Channel.GetdAllStudentbysessionAsync(session, startdate, enddate);
        }
        
        public ServiceReference1.DownloadUploadedfileByIdResponseDownloadUploadedfileByIdResult DownloadUploadedfileById(string FormType, string FormId)
        {
            return base.Channel.DownloadUploadedfileById(FormType, FormId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DownloadUploadedfileByIdResponseDownloadUploadedfileByIdResult> DownloadUploadedfileByIdAsync(string FormType, string FormId)
        {
            return base.Channel.DownloadUploadedfileByIdAsync(FormType, FormId);
        }
        
        public ServiceReference1.DownloadUploadedfileBySupplierResponseDownloadUploadedfileBySupplierResult DownloadUploadedfileBySupplier(string FormType, string FormId)
        {
            return base.Channel.DownloadUploadedfileBySupplier(FormType, FormId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DownloadUploadedfileBySupplierResponseDownloadUploadedfileBySupplierResult> DownloadUploadedfileBySupplierAsync(string FormType, string FormId)
        {
            return base.Channel.DownloadUploadedfileBySupplierAsync(FormType, FormId);
        }
        
        public ServiceReference1.JKIOPLoadStudentInfoResponseJKIOPLoadStudentInfoResult JKIOPLoadStudentInfo(string StudentId)
        {
            return base.Channel.JKIOPLoadStudentInfo(StudentId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStudentInfoResponseJKIOPLoadStudentInfoResult> JKIOPLoadStudentInfoAsync(string StudentId)
        {
            return base.Channel.JKIOPLoadStudentInfoAsync(StudentId);
        }
        
        public ServiceReference1.JKIOPLoadStudentPaymentInfoResponseJKIOPLoadStudentPaymentInfoResult JKIOPLoadStudentPaymentInfo(string SPId)
        {
            return base.Channel.JKIOPLoadStudentPaymentInfo(SPId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStudentPaymentInfoResponseJKIOPLoadStudentPaymentInfoResult> JKIOPLoadStudentPaymentInfoAsync(string SPId)
        {
            return base.Channel.JKIOPLoadStudentPaymentInfoAsync(SPId);
        }
        
        public string SaveJKIOPUserRoll(string RoleName, string RoleId)
        {
            return base.Channel.SaveJKIOPUserRoll(RoleName, RoleId);
        }
        
        public System.Threading.Tasks.Task<string> SaveJKIOPUserRollAsync(string RoleName, string RoleId)
        {
            return base.Channel.SaveJKIOPUserRollAsync(RoleName, RoleId);
        }
        
        public ServiceReference1.JKIOPLoadROllResponseJKIOPLoadROllResult JKIOPLoadROll()
        {
            return base.Channel.JKIOPLoadROll();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadROllResponseJKIOPLoadROllResult> JKIOPLoadROllAsync()
        {
            return base.Channel.JKIOPLoadROllAsync();
        }
        
        public ServiceReference1.JKIOPUSERROllResponseJKIOPUSERROllResult JKIOPUSERROll(long RoleId)
        {
            return base.Channel.JKIOPUSERROll(RoleId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPUSERROllResponseJKIOPUSERROllResult> JKIOPUSERROllAsync(long RoleId)
        {
            return base.Channel.JKIOPUSERROllAsync(RoleId);
        }
        
        public string SaveJKIOPUserRollAccess(bool DeleteAccess, string ScreenId, bool ViewAccess, bool EditAccess, string RoleAccessId, string RoleId, bool LockEditAccess)
        {
            return base.Channel.SaveJKIOPUserRollAccess(DeleteAccess, ScreenId, ViewAccess, EditAccess, RoleAccessId, RoleId, LockEditAccess);
        }
        
        public System.Threading.Tasks.Task<string> SaveJKIOPUserRollAccessAsync(bool DeleteAccess, string ScreenId, bool ViewAccess, bool EditAccess, string RoleAccessId, string RoleId, bool LockEditAccess)
        {
            return base.Channel.SaveJKIOPUserRollAccessAsync(DeleteAccess, ScreenId, ViewAccess, EditAccess, RoleAccessId, RoleId, LockEditAccess);
        }
        
        public ServiceReference1.JKIOPGetAllScreenForRoleResponseJKIOPGetAllScreenForRoleResult JKIOPGetAllScreenForRole(long RoleId)
        {
            return base.Channel.JKIOPGetAllScreenForRole(RoleId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPGetAllScreenForRoleResponseJKIOPGetAllScreenForRoleResult> JKIOPGetAllScreenForRoleAsync(long RoleId)
        {
            return base.Channel.JKIOPGetAllScreenForRoleAsync(RoleId);
        }
        
        public string SaveJKIOPStudent(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear)
        {
            return base.Channel.SaveJKIOPStudent(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear);
        }
        
        public System.Threading.Tasks.Task<string> SaveJKIOPStudentAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear)
        {
            return base.Channel.SaveJKIOPStudentAsync(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear);
        }
        
        public string SaveStudent(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount)
        {
            return base.Channel.SaveStudent(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear, Cashamount, bankamount);
        }
        
        public System.Threading.Tasks.Task<string> SaveStudentAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount)
        {
            return base.Channel.SaveStudentAsync(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear, Cashamount, bankamount);
        }
        
        public string SaveStudentDetails(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue)
        {
            return base.Channel.SaveStudentDetails(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear, Cashamount, bankamount, IsDiscontinue);
        }
        
        public System.Threading.Tasks.Task<string> SaveStudentDetailsAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue)
        {
            return base.Channel.SaveStudentDetailsAsync(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear, Cashamount, bankamount, IsDiscontinue);
        }
        
        public string SaveStudentInfo(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue, 
                    bool IsSCStudent, 
                    string LedgerNumber)
        {
            return base.Channel.SaveStudentInfo(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear, Cashamount, bankamount, IsDiscontinue, IsSCStudent, LedgerNumber);
        }
        
        public System.Threading.Tasks.Task<string> SaveStudentInfoAsync(
                    string StudentId, 
                    string RolleNumber, 
                    string FName, 
                    string LName, 
                    string DOB, 
                    string MobileNumber, 
                    string AlternateNumber, 
                    string Gender, 
                    string EmailId, 
                    string FatherName, 
                    string FatherMobileNumber, 
                    string MotherName, 
                    string Address, 
                    string City, 
                    string State, 
                    string Pincode, 
                    string StudentImage, 
                    string CourseName, 
                    string TotalFees, 
                    string PaymentMode, 
                    string NoOfEMI, 
                    string FirstAmount, 
                    string FirstDate, 
                    string SecondAmount, 
                    string SecondDate, 
                    string ThirdAmount, 
                    string ThirdDate, 
                    string FourthAmount, 
                    string FourthDate, 
                    string username, 
                    string CourseYear, 
                    string SessionYear, 
                    string Cashamount, 
                    string bankamount, 
                    bool IsDiscontinue, 
                    bool IsSCStudent, 
                    string LedgerNumber)
        {
            return base.Channel.SaveStudentInfoAsync(StudentId, RolleNumber, FName, LName, DOB, MobileNumber, AlternateNumber, Gender, EmailId, FatherName, FatherMobileNumber, MotherName, Address, City, State, Pincode, StudentImage, CourseName, TotalFees, PaymentMode, NoOfEMI, FirstAmount, FirstDate, SecondAmount, SecondDate, ThirdAmount, ThirdDate, FourthAmount, FourthDate, username, CourseYear, SessionYear, Cashamount, bankamount, IsDiscontinue, IsSCStudent, LedgerNumber);
        }
        
        public ServiceReference1.JKIOPLoadPaymentResponseJKIOPLoadPaymentResult JKIOPLoadPayment(string coursesession, string startdate, string enddate)
        {
            return base.Channel.JKIOPLoadPayment(coursesession, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentResponseJKIOPLoadPaymentResult> JKIOPLoadPaymentAsync(string coursesession, string startdate, string enddate)
        {
            return base.Channel.JKIOPLoadPaymentAsync(coursesession, startdate, enddate);
        }
        
        public int checkip(string ip)
        {
            return base.Channel.checkip(ip);
        }
        
        public System.Threading.Tasks.Task<int> checkipAsync(string ip)
        {
            return base.Channel.checkipAsync(ip);
        }
        
        public ServiceReference1.ArrayOfXElement GetRecievedamountHistory(string session)
        {
            return base.Channel.GetRecievedamountHistory(session);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRecievedamountHistoryAsync(string session)
        {
            return base.Channel.GetRecievedamountHistoryAsync(session);
        }
        
        public ServiceReference1.ArrayOfXElement GetRecievedamountDetails(string session, string Name, string type)
        {
            return base.Channel.GetRecievedamountDetails(session, Name, type);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRecievedamountDetailsAsync(string session, string Name, string type)
        {
            return base.Channel.GetRecievedamountDetailsAsync(session, Name, type);
        }
        
        public ServiceReference1.GetstudentforInvoiceResponseGetstudentforInvoiceResult GetstudentforInvoice(string RollNumber)
        {
            return base.Channel.GetstudentforInvoice(RollNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetstudentforInvoiceResponseGetstudentforInvoiceResult> GetstudentforInvoiceAsync(string RollNumber)
        {
            return base.Channel.GetstudentforInvoiceAsync(RollNumber);
        }
        
        public ServiceReference1.JKIOPLoadPaymentDetailBySPIdResponseJKIOPLoadPaymentDetailBySPIdResult JKIOPLoadPaymentDetailBySPId(string SPId)
        {
            return base.Channel.JKIOPLoadPaymentDetailBySPId(SPId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentDetailBySPIdResponseJKIOPLoadPaymentDetailBySPIdResult> JKIOPLoadPaymentDetailBySPIdAsync(string SPId)
        {
            return base.Channel.JKIOPLoadPaymentDetailBySPIdAsync(SPId);
        }
        
        public ServiceReference1.JKIOPLoadPaymentBySPIdResponseJKIOPLoadPaymentBySPIdResult JKIOPLoadPaymentBySPId(string SPId)
        {
            return base.Channel.JKIOPLoadPaymentBySPId(SPId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentBySPIdResponseJKIOPLoadPaymentBySPIdResult> JKIOPLoadPaymentBySPIdAsync(string SPId)
        {
            return base.Channel.JKIOPLoadPaymentBySPIdAsync(SPId);
        }
        
        public ServiceReference1.JKIOPLoadPaymentByPaymentIdResponseJKIOPLoadPaymentByPaymentIdResult JKIOPLoadPaymentByPaymentId(string PId)
        {
            return base.Channel.JKIOPLoadPaymentByPaymentId(PId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadPaymentByPaymentIdResponseJKIOPLoadPaymentByPaymentIdResult> JKIOPLoadPaymentByPaymentIdAsync(string PId)
        {
            return base.Channel.JKIOPLoadPaymentByPaymentIdAsync(PId);
        }
        
        public string SaveSubmitstudentpaymenttobankhandover(string PId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount)
        {
            return base.Channel.SaveSubmitstudentpaymenttobankhandover(PId, IsHandOver, HandoverName, SubmitDate, username, SubmitTransactionnumber, comment, Depositeamount);
        }
        
        public System.Threading.Tasks.Task<string> SaveSubmitstudentpaymenttobankhandoverAsync(string PId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount)
        {
            return base.Channel.SaveSubmitstudentpaymenttobankhandoverAsync(PId, IsHandOver, HandoverName, SubmitDate, username, SubmitTransactionnumber, comment, Depositeamount);
        }
        
        public string SavePaymentInfo(string PId, string PaymentMode, string Amount, string EMIAmount, string BankTransactionNumber, bool IsHandOver, string HandoverName, string ApproveBy, string SubmitDate, string username, string StudentId, string Recieveddate, string SubmitTransactionnumber, string StudentPaymentId)
        {
            return base.Channel.SavePaymentInfo(PId, PaymentMode, Amount, EMIAmount, BankTransactionNumber, IsHandOver, HandoverName, ApproveBy, SubmitDate, username, StudentId, Recieveddate, SubmitTransactionnumber, StudentPaymentId);
        }
        
        public System.Threading.Tasks.Task<string> SavePaymentInfoAsync(string PId, string PaymentMode, string Amount, string EMIAmount, string BankTransactionNumber, bool IsHandOver, string HandoverName, string ApproveBy, string SubmitDate, string username, string StudentId, string Recieveddate, string SubmitTransactionnumber, string StudentPaymentId)
        {
            return base.Channel.SavePaymentInfoAsync(PId, PaymentMode, Amount, EMIAmount, BankTransactionNumber, IsHandOver, HandoverName, ApproveBy, SubmitDate, username, StudentId, Recieveddate, SubmitTransactionnumber, StudentPaymentId);
        }
        
        public string deletePaymentInfo(long PId)
        {
            return base.Channel.deletePaymentInfo(PId);
        }
        
        public System.Threading.Tasks.Task<string> deletePaymentInfoAsync(long PId)
        {
            return base.Channel.deletePaymentInfoAsync(PId);
        }
        
        public string deletestudentPaymentInfo(long SPId)
        {
            return base.Channel.deletestudentPaymentInfo(SPId);
        }
        
        public System.Threading.Tasks.Task<string> deletestudentPaymentInfoAsync(long SPId)
        {
            return base.Channel.deletestudentPaymentInfoAsync(SPId);
        }
        
        public string deletestudentInfo(long SId)
        {
            return base.Channel.deletestudentInfo(SId);
        }
        
        public System.Threading.Tasks.Task<string> deletestudentInfoAsync(long SId)
        {
            return base.Channel.deletestudentInfoAsync(SId);
        }
        
        public string deleteSupplierPaymentHistory(long SPId)
        {
            return base.Channel.deleteSupplierPaymentHistory(SPId);
        }
        
        public System.Threading.Tasks.Task<string> deleteSupplierPaymentHistoryAsync(long SPId)
        {
            return base.Channel.deleteSupplierPaymentHistoryAsync(SPId);
        }
        
        public string deleteSupplier(long SupplierId)
        {
            return base.Channel.deleteSupplier(SupplierId);
        }
        
        public System.Threading.Tasks.Task<string> deleteSupplierAsync(long SupplierId)
        {
            return base.Channel.deleteSupplierAsync(SupplierId);
        }
        
        public string SaveDocuments(string DId, string Title, string username)
        {
            return base.Channel.SaveDocuments(DId, Title, username);
        }
        
        public System.Threading.Tasks.Task<string> SaveDocumentsAsync(string DId, string Title, string username)
        {
            return base.Channel.SaveDocumentsAsync(DId, Title, username);
        }
        
        public ServiceReference1.GetDocumentResponseGetDocumentResult GetDocument(string DocumentId)
        {
            return base.Channel.GetDocument(DocumentId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDocumentResponseGetDocumentResult> GetDocumentAsync(string DocumentId)
        {
            return base.Channel.GetDocumentAsync(DocumentId);
        }
        
        public ServiceReference1.GetDocumentByIdResponseGetDocumentByIdResult GetDocumentById(string DocumentId)
        {
            return base.Channel.GetDocumentById(DocumentId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDocumentByIdResponseGetDocumentByIdResult> GetDocumentByIdAsync(string DocumentId)
        {
            return base.Channel.GetDocumentByIdAsync(DocumentId);
        }
        
        public string deleteDocumentById(long DId)
        {
            return base.Channel.deleteDocumentById(DId);
        }
        
        public System.Threading.Tasks.Task<string> deleteDocumentByIdAsync(long DId)
        {
            return base.Channel.deleteDocumentByIdAsync(DId);
        }
        
        public string SaveSupplierPaymentHistory(string SPId, string supplierid, string ExpenseReason, string ExpenseAmount, bool IsApproved, string ApproveBy, string ExpenseImage, string username, string paymentmode, string transactionId, string PaymentDate)
        {
            return base.Channel.SaveSupplierPaymentHistory(SPId, supplierid, ExpenseReason, ExpenseAmount, IsApproved, ApproveBy, ExpenseImage, username, paymentmode, transactionId, PaymentDate);
        }
        
        public System.Threading.Tasks.Task<string> SaveSupplierPaymentHistoryAsync(string SPId, string supplierid, string ExpenseReason, string ExpenseAmount, bool IsApproved, string ApproveBy, string ExpenseImage, string username, string paymentmode, string transactionId, string PaymentDate)
        {
            return base.Channel.SaveSupplierPaymentHistoryAsync(SPId, supplierid, ExpenseReason, ExpenseAmount, IsApproved, ApproveBy, ExpenseImage, username, paymentmode, transactionId, PaymentDate);
        }
        
        public ServiceReference1.JKIOPLoadStaffExpenseResponseJKIOPLoadStaffExpenseResult JKIOPLoadStaffExpense()
        {
            return base.Channel.JKIOPLoadStaffExpense();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStaffExpenseResponseJKIOPLoadStaffExpenseResult> JKIOPLoadStaffExpenseAsync()
        {
            return base.Channel.JKIOPLoadStaffExpenseAsync();
        }
        
        public ServiceReference1.JKIOPLoadStaffExpenseByIdResponseJKIOPLoadStaffExpenseByIdResult JKIOPLoadStaffExpenseById(string EId)
        {
            return base.Channel.JKIOPLoadStaffExpenseById(EId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadStaffExpenseByIdResponseJKIOPLoadStaffExpenseByIdResult> JKIOPLoadStaffExpenseByIdAsync(string EId)
        {
            return base.Channel.JKIOPLoadStaffExpenseByIdAsync(EId);
        }
        
        public ServiceReference1.JKIOPLoadSupplierByIdResponseJKIOPLoadSupplierByIdResult JKIOPLoadSupplierById(string SId)
        {
            return base.Channel.JKIOPLoadSupplierById(SId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadSupplierByIdResponseJKIOPLoadSupplierByIdResult> JKIOPLoadSupplierByIdAsync(string SId)
        {
            return base.Channel.JKIOPLoadSupplierByIdAsync(SId);
        }
        
        public ServiceReference1.JKIOPLoadSupplierResponseJKIOPLoadSupplierResult JKIOPLoadSupplier(string supplier, string startdate, string enddate)
        {
            return base.Channel.JKIOPLoadSupplier(supplier, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadSupplierResponseJKIOPLoadSupplierResult> JKIOPLoadSupplierAsync(string supplier, string startdate, string enddate)
        {
            return base.Channel.JKIOPLoadSupplierAsync(supplier, startdate, enddate);
        }
        
        public string SaveJKIOPSupplier(string SId, string Name, string Email, string PhoneNo, string Address, string Comment, string BankName, string AccountNo, string IFSCCode, string username, string amount)
        {
            return base.Channel.SaveJKIOPSupplier(SId, Name, Email, PhoneNo, Address, Comment, BankName, AccountNo, IFSCCode, username, amount);
        }
        
        public System.Threading.Tasks.Task<string> SaveJKIOPSupplierAsync(string SId, string Name, string Email, string PhoneNo, string Address, string Comment, string BankName, string AccountNo, string IFSCCode, string username, string amount)
        {
            return base.Channel.SaveJKIOPSupplierAsync(SId, Name, Email, PhoneNo, Address, Comment, BankName, AccountNo, IFSCCode, username, amount);
        }
        
        public ServiceReference1.JKIOPLoadstudentbysearchResponseJKIOPLoadstudentbysearchResult JKIOPLoadstudentbysearch(string RollNumber, string Firstname, string FatherName, string dob)
        {
            return base.Channel.JKIOPLoadstudentbysearch(RollNumber, Firstname, FatherName, dob);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPLoadstudentbysearchResponseJKIOPLoadstudentbysearchResult> JKIOPLoadstudentbysearchAsync(string RollNumber, string Firstname, string FatherName, string dob)
        {
            return base.Channel.JKIOPLoadstudentbysearchAsync(RollNumber, Firstname, FatherName, dob);
        }
        
        public ServiceReference1.JKIOPStudentPaymentInfoResponseJKIOPStudentPaymentInfoResult JKIOPStudentPaymentInfo(string StudentId)
        {
            return base.Channel.JKIOPStudentPaymentInfo(StudentId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPStudentPaymentInfoResponseJKIOPStudentPaymentInfoResult> JKIOPStudentPaymentInfoAsync(string StudentId)
        {
            return base.Channel.JKIOPStudentPaymentInfoAsync(StudentId);
        }
        
        public string SaveSupplierExpenseHistory(string HId, string EId, string PaymentMode, string Transactionnumber, string Amount, string PaidDate, bool IsApproved, string ApprovedBy, string ImageName, string username)
        {
            return base.Channel.SaveSupplierExpenseHistory(HId, EId, PaymentMode, Transactionnumber, Amount, PaidDate, IsApproved, ApprovedBy, ImageName, username);
        }
        
        public System.Threading.Tasks.Task<string> SaveSupplierExpenseHistoryAsync(string HId, string EId, string PaymentMode, string Transactionnumber, string Amount, string PaidDate, bool IsApproved, string ApprovedBy, string ImageName, string username)
        {
            return base.Channel.SaveSupplierExpenseHistoryAsync(HId, EId, PaymentMode, Transactionnumber, Amount, PaidDate, IsApproved, ApprovedBy, ImageName, username);
        }
        
        public ServiceReference1.SupplierExpenseHistoryResponseSupplierExpenseHistoryResult SupplierExpenseHistory(string EId)
        {
            return base.Channel.SupplierExpenseHistory(EId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SupplierExpenseHistoryResponseSupplierExpenseHistoryResult> SupplierExpenseHistoryAsync(string EId)
        {
            return base.Channel.SupplierExpenseHistoryAsync(EId);
        }
        
        public ServiceReference1.SupplierExpenseHistoryBYHidResponseSupplierExpenseHistoryBYHidResult SupplierExpenseHistoryBYHid(string HId)
        {
            return base.Channel.SupplierExpenseHistoryBYHid(HId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SupplierExpenseHistoryBYHidResponseSupplierExpenseHistoryBYHidResult> SupplierExpenseHistoryBYHidAsync(string HId)
        {
            return base.Channel.SupplierExpenseHistoryBYHidAsync(HId);
        }
        
        public string SaveExternalLink(string FormType, string FormId, string LastUpdate, string LinkDescription, string LinkFile, string LinkFileType, string Path, string isDrawing, string username)
        {
            return base.Channel.SaveExternalLink(FormType, FormId, LastUpdate, LinkDescription, LinkFile, LinkFileType, Path, isDrawing, username);
        }
        
        public System.Threading.Tasks.Task<string> SaveExternalLinkAsync(string FormType, string FormId, string LastUpdate, string LinkDescription, string LinkFile, string LinkFileType, string Path, string isDrawing, string username)
        {
            return base.Channel.SaveExternalLinkAsync(FormType, FormId, LastUpdate, LinkDescription, LinkFile, LinkFileType, Path, isDrawing, username);
        }
        
        public ServiceReference1.LoadExternalLinkByFormIdAndTypeResponseLoadExternalLinkByFormIdAndTypeResult LoadExternalLinkByFormIdAndType(string FormType, string FormId)
        {
            return base.Channel.LoadExternalLinkByFormIdAndType(FormType, FormId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.LoadExternalLinkByFormIdAndTypeResponseLoadExternalLinkByFormIdAndTypeResult> LoadExternalLinkByFormIdAndTypeAsync(string FormType, string FormId)
        {
            return base.Channel.LoadExternalLinkByFormIdAndTypeAsync(FormType, FormId);
        }
        
        public string DeleteExternalRecord(string ExernalId)
        {
            return base.Channel.DeleteExternalRecord(ExernalId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteExternalRecordAsync(string ExernalId)
        {
            return base.Channel.DeleteExternalRecordAsync(ExernalId);
        }
        
        public ServiceReference1.LoadSupplierPaymentBySPIdResponseLoadSupplierPaymentBySPIdResult LoadSupplierPaymentBySPId(string SPId)
        {
            return base.Channel.LoadSupplierPaymentBySPId(SPId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.LoadSupplierPaymentBySPIdResponseLoadSupplierPaymentBySPIdResult> LoadSupplierPaymentBySPIdAsync(string SPId)
        {
            return base.Channel.LoadSupplierPaymentBySPIdAsync(SPId);
        }
        
        public ServiceReference1.JKIOPSupplierPaymentBySupplierIdResponseJKIOPSupplierPaymentBySupplierIdResult JKIOPSupplierPaymentBySupplierId(string SupplierId)
        {
            return base.Channel.JKIOPSupplierPaymentBySupplierId(SupplierId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.JKIOPSupplierPaymentBySupplierIdResponseJKIOPSupplierPaymentBySupplierIdResult> JKIOPSupplierPaymentBySupplierIdAsync(string SupplierId)
        {
            return base.Channel.JKIOPSupplierPaymentBySupplierIdAsync(SupplierId);
        }
        
        public ServiceReference1.GetStudentFineResponseGetStudentFineResult GetStudentFine(string CourseYear, string CourseSession, string fromdate, string todate)
        {
            return base.Channel.GetStudentFine(CourseYear, CourseSession, fromdate, todate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetStudentFineResponseGetStudentFineResult> GetStudentFineAsync(string CourseYear, string CourseSession, string fromdate, string todate)
        {
            return base.Channel.GetStudentFineAsync(CourseYear, CourseSession, fromdate, todate);
        }
        
        public ServiceReference1.getstudentinfobyrollnumberResponseGetstudentinfobyrollnumberResult getstudentinfobyrollnumber(string RollNumber)
        {
            return base.Channel.getstudentinfobyrollnumber(RollNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getstudentinfobyrollnumberResponseGetstudentinfobyrollnumberResult> getstudentinfobyrollnumberAsync(string RollNumber)
        {
            return base.Channel.getstudentinfobyrollnumberAsync(RollNumber);
        }
        
        public ServiceReference1.getstudentfineinfobyFIneIdResponseGetstudentfineinfobyFIneIdResult getstudentfineinfobyFIneId(string FineId)
        {
            return base.Channel.getstudentfineinfobyFIneId(FineId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getstudentfineinfobyFIneIdResponseGetstudentfineinfobyFIneIdResult> getstudentfineinfobyFIneIdAsync(string FineId)
        {
            return base.Channel.getstudentfineinfobyFIneIdAsync(FineId);
        }
        
        public ServiceReference1.getstudentfineinfobyRollnumberResponseGetstudentfineinfobyRollnumberResult getstudentfineinfobyRollnumber(string RollNumber)
        {
            return base.Channel.getstudentfineinfobyRollnumber(RollNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getstudentfineinfobyRollnumberResponseGetstudentfineinfobyRollnumberResult> getstudentfineinfobyRollnumberAsync(string RollNumber)
        {
            return base.Channel.getstudentfineinfobyRollnumberAsync(RollNumber);
        }
        
        public string SaveFinepaymenttobankhandover(string FId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount)
        {
            return base.Channel.SaveFinepaymenttobankhandover(FId, IsHandOver, HandoverName, SubmitDate, username, SubmitTransactionnumber, comment, Depositeamount);
        }
        
        public System.Threading.Tasks.Task<string> SaveFinepaymenttobankhandoverAsync(string FId, bool IsHandOver, string HandoverName, string SubmitDate, string username, string SubmitTransactionnumber, string comment, string Depositeamount)
        {
            return base.Channel.SaveFinepaymenttobankhandoverAsync(FId, IsHandOver, HandoverName, SubmitDate, username, SubmitTransactionnumber, comment, Depositeamount);
        }
        
        public string SaveFinePaymentInfo(
                    string FId, 
                    string PaymentMode, 
                    string Amount, 
                    string PaidAmount, 
                    string FineAmount, 
                    string BankTransactionNumber, 
                    bool IsHandOver, 
                    string HandoverName, 
                    string DepositeDate, 
                    string username, 
                    string RollNumber, 
                    string Recieveddate, 
                    string SubmitTransactionnumber, 
                    string FineComment, 
                    string DepositeComment, 
                    string Session, 
                    string courseyear)
        {
            return base.Channel.SaveFinePaymentInfo(FId, PaymentMode, Amount, PaidAmount, FineAmount, BankTransactionNumber, IsHandOver, HandoverName, DepositeDate, username, RollNumber, Recieveddate, SubmitTransactionnumber, FineComment, DepositeComment, Session, courseyear);
        }
        
        public System.Threading.Tasks.Task<string> SaveFinePaymentInfoAsync(
                    string FId, 
                    string PaymentMode, 
                    string Amount, 
                    string PaidAmount, 
                    string FineAmount, 
                    string BankTransactionNumber, 
                    bool IsHandOver, 
                    string HandoverName, 
                    string DepositeDate, 
                    string username, 
                    string RollNumber, 
                    string Recieveddate, 
                    string SubmitTransactionnumber, 
                    string FineComment, 
                    string DepositeComment, 
                    string Session, 
                    string courseyear)
        {
            return base.Channel.SaveFinePaymentInfoAsync(FId, PaymentMode, Amount, PaidAmount, FineAmount, BankTransactionNumber, IsHandOver, HandoverName, DepositeDate, username, RollNumber, Recieveddate, SubmitTransactionnumber, FineComment, DepositeComment, Session, courseyear);
        }
        
        public string SaveRefundPaymentInfo(string RId, string PaymentMode, string Amount, string BankTransactionNumber, string RefundDate, string username, string RollNumber, string Comment, string Session, string courseyear, string approveby, string BankName)
        {
            return base.Channel.SaveRefundPaymentInfo(RId, PaymentMode, Amount, BankTransactionNumber, RefundDate, username, RollNumber, Comment, Session, courseyear, approveby, BankName);
        }
        
        public System.Threading.Tasks.Task<string> SaveRefundPaymentInfoAsync(string RId, string PaymentMode, string Amount, string BankTransactionNumber, string RefundDate, string username, string RollNumber, string Comment, string Session, string courseyear, string approveby, string BankName)
        {
            return base.Channel.SaveRefundPaymentInfoAsync(RId, PaymentMode, Amount, BankTransactionNumber, RefundDate, username, RollNumber, Comment, Session, courseyear, approveby, BankName);
        }
        
        public ServiceReference1.getstudentRefundinfobyRollnumberResponseGetstudentRefundinfobyRollnumberResult getstudentRefundinfobyRollnumber(string RollNumber)
        {
            return base.Channel.getstudentRefundinfobyRollnumber(RollNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getstudentRefundinfobyRollnumberResponseGetstudentRefundinfobyRollnumberResult> getstudentRefundinfobyRollnumberAsync(string RollNumber)
        {
            return base.Channel.getstudentRefundinfobyRollnumberAsync(RollNumber);
        }
        
        public ServiceReference1.getstudentRefundinfobyRefundIdResponseGetstudentRefundinfobyRefundIdResult getstudentRefundinfobyRefundId(string RId)
        {
            return base.Channel.getstudentRefundinfobyRefundId(RId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getstudentRefundinfobyRefundIdResponseGetstudentRefundinfobyRefundIdResult> getstudentRefundinfobyRefundIdAsync(string RId)
        {
            return base.Channel.getstudentRefundinfobyRefundIdAsync(RId);
        }
        
        public ServiceReference1.GetStudentRefundResponseGetStudentRefundResult GetStudentRefund(string CourseYear, string CourseSession, string fromdate, string todate)
        {
            return base.Channel.GetStudentRefund(CourseYear, CourseSession, fromdate, todate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetStudentRefundResponseGetStudentRefundResult> GetStudentRefundAsync(string CourseYear, string CourseSession, string fromdate, string todate)
        {
            return base.Channel.GetStudentRefundAsync(CourseYear, CourseSession, fromdate, todate);
        }
        
        public int SaveProductexpirylistinventory(string productid, int qty, string Expiry, string CompanyName)
        {
            return base.Channel.SaveProductexpirylistinventory(productid, qty, Expiry, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductexpirylistinventoryAsync(string productid, int qty, string Expiry, string CompanyName)
        {
            return base.Channel.SaveProductexpirylistinventoryAsync(productid, qty, Expiry, CompanyName);
        }
        
        public int SaveCollegeLog(string LogType, string LogDescription, string OldValue, string NewValue, string RollNumber, string CreatedBy)
        {
            return base.Channel.SaveCollegeLog(LogType, LogDescription, OldValue, NewValue, RollNumber, CreatedBy);
        }
        
        public System.Threading.Tasks.Task<int> SaveCollegeLogAsync(string LogType, string LogDescription, string OldValue, string NewValue, string RollNumber, string CreatedBy)
        {
            return base.Channel.SaveCollegeLogAsync(LogType, LogDescription, OldValue, NewValue, RollNumber, CreatedBy);
        }
        
        public int SaveOfficeLeaveRequest(string StaffEmailId, string LeaveType, System.DateTime LFromDate, System.DateTime LToDate, string FromTime, string ToTime, string Reason, string CreatedBy)
        {
            return base.Channel.SaveOfficeLeaveRequest(StaffEmailId, LeaveType, LFromDate, LToDate, FromTime, ToTime, Reason, CreatedBy);
        }
        
        public System.Threading.Tasks.Task<int> SaveOfficeLeaveRequestAsync(string StaffEmailId, string LeaveType, System.DateTime LFromDate, System.DateTime LToDate, string FromTime, string ToTime, string Reason, string CreatedBy)
        {
            return base.Channel.SaveOfficeLeaveRequestAsync(StaffEmailId, LeaveType, LFromDate, LToDate, FromTime, ToTime, Reason, CreatedBy);
        }
        
        public int DeleteOfficeLeaveRequest(string Id)
        {
            return base.Channel.DeleteOfficeLeaveRequest(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOfficeLeaveRequestAsync(string Id)
        {
            return base.Channel.DeleteOfficeLeaveRequestAsync(Id);
        }
        
        public ServiceReference1.GetOfficeLeaveDetailsResponseGetOfficeLeaveDetailsResult GetOfficeLeaveDetails(string EmailId, System.DateTime StartDate, System.DateTime EndDate, string RequestStatus, string LeaveType)
        {
            return base.Channel.GetOfficeLeaveDetails(EmailId, StartDate, EndDate, RequestStatus, LeaveType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOfficeLeaveDetailsResponseGetOfficeLeaveDetailsResult> GetOfficeLeaveDetailsAsync(string EmailId, System.DateTime StartDate, System.DateTime EndDate, string RequestStatus, string LeaveType)
        {
            return base.Channel.GetOfficeLeaveDetailsAsync(EmailId, StartDate, EndDate, RequestStatus, LeaveType);
        }
        
        public ServiceReference1.ArrayOfXElement GetDailyScheduleWork(string StaffEmailId)
        {
            return base.Channel.GetDailyScheduleWork(StaffEmailId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetDailyScheduleWorkAsync(string StaffEmailId)
        {
            return base.Channel.GetDailyScheduleWorkAsync(StaffEmailId);
        }
        
        public ServiceReference1.ArrayOfXElement GetDailyScheduleWorks(string StaffEmailId, string TaskName, string CategoryId, string TeamName)
        {
            return base.Channel.GetDailyScheduleWorks(StaffEmailId, TaskName, CategoryId, TeamName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetDailyScheduleWorksAsync(string StaffEmailId, string TaskName, string CategoryId, string TeamName)
        {
            return base.Channel.GetDailyScheduleWorksAsync(StaffEmailId, TaskName, CategoryId, TeamName);
        }
        
        public ServiceReference1.GetStaffRotaResponseGetStaffRotaResult GetStaffRota(string EmailId, System.DateTime StartDate, System.DateTime EndDate)
        {
            return base.Channel.GetStaffRota(EmailId, StartDate, EndDate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetStaffRotaResponseGetStaffRotaResult> GetStaffRotaAsync(string EmailId, System.DateTime StartDate, System.DateTime EndDate)
        {
            return base.Channel.GetStaffRotaAsync(EmailId, StartDate, EndDate);
        }
        
        public ServiceReference1.GetTaskNameResponseGetTaskNameResult GetTaskName()
        {
            return base.Channel.GetTaskName();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTaskNameResponseGetTaskNameResult> GetTaskNameAsync()
        {
            return base.Channel.GetTaskNameAsync();
        }
        
        public ServiceReference1.GetTaskNamesResponseGetTaskNamesResult GetTaskNames(string countryname)
        {
            return base.Channel.GetTaskNames(countryname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTaskNamesResponseGetTaskNamesResult> GetTaskNamesAsync(string countryname)
        {
            return base.Channel.GetTaskNamesAsync(countryname);
        }
        
        public ServiceReference1.GetTeamNameResponseGetTeamNameResult GetTeamName()
        {
            return base.Channel.GetTeamName();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTeamNameResponseGetTeamNameResult> GetTeamNameAsync()
        {
            return base.Channel.GetTeamNameAsync();
        }
        
        public ServiceReference1.GetStaffCountryWiseResponseGetStaffCountryWiseResult GetStaffCountryWise(string CountryName)
        {
            return base.Channel.GetStaffCountryWise(CountryName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetStaffCountryWiseResponseGetStaffCountryWiseResult> GetStaffCountryWiseAsync(string CountryName)
        {
            return base.Channel.GetStaffCountryWiseAsync(CountryName);
        }
        
        public ServiceReference1.CheckTaskRunningOnComputerResponseCheckTaskRunningOnComputerResult CheckTaskRunningOnComputer(string EmailId, string ComputerName)
        {
            return base.Channel.CheckTaskRunningOnComputer(EmailId, ComputerName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CheckTaskRunningOnComputerResponseCheckTaskRunningOnComputerResult> CheckTaskRunningOnComputerAsync(string EmailId, string ComputerName)
        {
            return base.Channel.CheckTaskRunningOnComputerAsync(EmailId, ComputerName);
        }
        
        public ServiceReference1.GetTasksResponseGetTasksResult GetTasks(string CountryName)
        {
            return base.Channel.GetTasks(CountryName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTasksResponseGetTasksResult> GetTasksAsync(string CountryName)
        {
            return base.Channel.GetTasksAsync(CountryName);
        }
        
        public ServiceReference1.GetStaffInOutResponseGetStaffInOutResult GetStaffInOut(string EmailId)
        {
            return base.Channel.GetStaffInOut(EmailId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetStaffInOutResponseGetStaffInOutResult> GetStaffInOutAsync(string EmailId)
        {
            return base.Channel.GetStaffInOutAsync(EmailId);
        }
        
        public int SaveTasksTimer(string EmailId, string TaskType, int CategoryId, string StartTime, string Comment, string ComputerName)
        {
            return base.Channel.SaveTasksTimer(EmailId, TaskType, CategoryId, StartTime, Comment, ComputerName);
        }
        
        public System.Threading.Tasks.Task<int> SaveTasksTimerAsync(string EmailId, string TaskType, int CategoryId, string StartTime, string Comment, string ComputerName)
        {
            return base.Channel.SaveTasksTimerAsync(EmailId, TaskType, CategoryId, StartTime, Comment, ComputerName);
        }
        
        public int UpdateTasksTimer(int STId, string EndTime)
        {
            return base.Channel.UpdateTasksTimer(STId, EndTime);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTasksTimerAsync(int STId, string EndTime)
        {
            return base.Channel.UpdateTasksTimerAsync(STId, EndTime);
        }
        
        public string updateStatusAfterAutoTransferForcefully(int productid, string companyname)
        {
            return base.Channel.updateStatusAfterAutoTransferForcefully(productid, companyname);
        }
        
        public System.Threading.Tasks.Task<string> updateStatusAfterAutoTransferForcefullyAsync(int productid, string companyname)
        {
            return base.Channel.updateStatusAfterAutoTransferForcefullyAsync(productid, companyname);
        }
        
        public ServiceReference1.checkproductcategoryforcomputerResponseCheckproductcategoryforcomputerResult checkproductcategoryforcomputer(string productid, string computername)
        {
            return base.Channel.checkproductcategoryforcomputer(productid, computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.checkproductcategoryforcomputerResponseCheckproductcategoryforcomputerResult> checkproductcategoryforcomputerAsync(string productid, string computername)
        {
            return base.Channel.checkproductcategoryforcomputerAsync(productid, computername);
        }
        
        public ServiceReference1.GetcategoryforcomputerResponseGetcategoryforcomputerResult Getcategoryforcomputer(string computername)
        {
            return base.Channel.Getcategoryforcomputer(computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetcategoryforcomputerResponseGetcategoryforcomputerResult> GetcategoryforcomputerAsync(string computername)
        {
            return base.Channel.GetcategoryforcomputerAsync(computername);
        }
        
        public ServiceReference1.GetunshippedorderforcomputerResponseGetunshippedorderforcomputerResult Getunshippedorderforcomputer(string computername, string companyname)
        {
            return base.Channel.Getunshippedorderforcomputer(computername, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetunshippedorderforcomputerResponseGetunshippedorderforcomputerResult> GetunshippedorderforcomputerAsync(string computername, string companyname)
        {
            return base.Channel.GetunshippedorderforcomputerAsync(computername, companyname);
        }
        
        public ServiceReference1.checkproductcategoryforcomputerbyordernumberResponseCheckproductcategoryforcomputerbyordernumberResult checkproductcategoryforcomputerbyordernumber(string ordernumber, string computername)
        {
            return base.Channel.checkproductcategoryforcomputerbyordernumber(ordernumber, computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.checkproductcategoryforcomputerbyordernumberResponseCheckproductcategoryforcomputerbyordernumberResult> checkproductcategoryforcomputerbyordernumberAsync(string ordernumber, string computername)
        {
            return base.Channel.checkproductcategoryforcomputerbyordernumberAsync(ordernumber, computername);
        }
        
        public ServiceReference1.gettodayshippedordercategoryforcomputerResponseGettodayshippedordercategoryforcomputerResult gettodayshippedordercategoryforcomputer(string computername, string companyname)
        {
            return base.Channel.gettodayshippedordercategoryforcomputer(computername, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.gettodayshippedordercategoryforcomputerResponseGettodayshippedordercategoryforcomputerResult> gettodayshippedordercategoryforcomputerAsync(string computername, string companyname)
        {
            return base.Channel.gettodayshippedordercategoryforcomputerAsync(computername, companyname);
        }
        
        public ServiceReference1.GetunshippedorderbycompanyResponseGetunshippedorderbycompanyResult Getunshippedorderbycompany(string companyname)
        {
            return base.Channel.Getunshippedorderbycompany(companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetunshippedorderbycompanyResponseGetunshippedorderbycompanyResult> GetunshippedorderbycompanyAsync(string companyname)
        {
            return base.Channel.GetunshippedorderbycompanyAsync(companyname);
        }
        
        public ServiceReference1.GetToadyshippedorderbycompanyResponseGetToadyshippedorderbycompanyResult GetToadyshippedorderbycompany(string companyname)
        {
            return base.Channel.GetToadyshippedorderbycompany(companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetToadyshippedorderbycompanyResponseGetToadyshippedorderbycompanyResult> GetToadyshippedorderbycompanyAsync(string companyname)
        {
            return base.Channel.GetToadyshippedorderbycompanyAsync(companyname);
        }
        
        public ServiceReference1.GetlateshipmentResponseGetlateshipmentResult Getlateshipment()
        {
            return base.Channel.Getlateshipment();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetlateshipmentResponseGetlateshipmentResult> GetlateshipmentAsync()
        {
            return base.Channel.GetlateshipmentAsync();
        }
        
        public ServiceReference1.GetstaffbycomputerResponseGetstaffbycomputerResult Getstaffbycomputer(string computername)
        {
            return base.Channel.Getstaffbycomputer(computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetstaffbycomputerResponseGetstaffbycomputerResult> GetstaffbycomputerAsync(string computername)
        {
            return base.Channel.GetstaffbycomputerAsync(computername);
        }
        
        public string Saveloginlog(string userId, string computername, string ipaddress, string companyname, string computertype, string logintype)
        {
            return base.Channel.Saveloginlog(userId, computername, ipaddress, companyname, computertype, logintype);
        }
        
        public System.Threading.Tasks.Task<string> SaveloginlogAsync(string userId, string computername, string ipaddress, string companyname, string computertype, string logintype)
        {
            return base.Channel.SaveloginlogAsync(userId, computername, ipaddress, companyname, computertype, logintype);
        }
        
        public string Savelogouttime(string userId, string logoutreason, string logintype)
        {
            return base.Channel.Savelogouttime(userId, logoutreason, logintype);
        }
        
        public System.Threading.Tasks.Task<string> SavelogouttimeAsync(string userId, string logoutreason, string logintype)
        {
            return base.Channel.SavelogouttimeAsync(userId, logoutreason, logintype);
        }
        
        public ServiceReference1.GetShipUnshipLateshipOrderResponseGetShipUnshipLateshipOrderResult GetShipUnshipLateshipOrder()
        {
            return base.Channel.GetShipUnshipLateshipOrder();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetShipUnshipLateshipOrderResponseGetShipUnshipLateshipOrderResult> GetShipUnshipLateshipOrderAsync()
        {
            return base.Channel.GetShipUnshipLateshipOrderAsync();
        }
        
        public ServiceReference1.getunshippedorderbyComputerNameResponseGetunshippedorderbyComputerNameResult getunshippedorderbyComputerName(string computername)
        {
            return base.Channel.getunshippedorderbyComputerName(computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getunshippedorderbyComputerNameResponseGetunshippedorderbyComputerNameResult> getunshippedorderbyComputerNameAsync(string computername)
        {
            return base.Channel.getunshippedorderbyComputerNameAsync(computername);
        }
        
        public ServiceReference1.getunshipandtodayshiporderforcomputerResponseGetunshipandtodayshiporderforcomputerResult getunshipandtodayshiporderforcomputer(string computername)
        {
            return base.Channel.getunshipandtodayshiporderforcomputer(computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getunshipandtodayshiporderforcomputerResponseGetunshipandtodayshiporderforcomputerResult> getunshipandtodayshiporderforcomputerAsync(string computername)
        {
            return base.Channel.getunshipandtodayshiporderforcomputerAsync(computername);
        }
        
        public ServiceReference1.getComputerbypackingTodayResponseGetComputerbypackingTodayResult getComputerbypackingToday(string computername)
        {
            return base.Channel.getComputerbypackingToday(computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getComputerbypackingTodayResponseGetComputerbypackingTodayResult> getComputerbypackingTodayAsync(string computername)
        {
            return base.Channel.getComputerbypackingTodayAsync(computername);
        }
        
        public ServiceReference1.getlateshipmentbycategoryforcomputerResponseGetlateshipmentbycategoryforcomputerResult getlateshipmentbycategoryforcomputer(string computername, string companyname)
        {
            return base.Channel.getlateshipmentbycategoryforcomputer(computername, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getlateshipmentbycategoryforcomputerResponseGetlateshipmentbycategoryforcomputerResult> getlateshipmentbycategoryforcomputerAsync(string computername, string companyname)
        {
            return base.Channel.getlateshipmentbycategoryforcomputerAsync(computername, companyname);
        }
        
        public ServiceReference1.getstaffbypackingTodayResponseGetstaffbypackingTodayResult getstaffbypackingToday()
        {
            return base.Channel.getstaffbypackingToday();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getstaffbypackingTodayResponseGetstaffbypackingTodayResult> getstaffbypackingTodayAsync()
        {
            return base.Channel.getstaffbypackingTodayAsync();
        }
        
        public bool IsUPS(string ordernumber)
        {
            return base.Channel.IsUPS(ordernumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsUPSAsync(string ordernumber)
        {
            return base.Channel.IsUPSAsync(ordernumber);
        }
        
        public ServiceReference1.GetComputerNameResponseGetComputerNameResult GetComputerName()
        {
            return base.Channel.GetComputerName();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetComputerNameResponseGetComputerNameResult> GetComputerNameAsync()
        {
            return base.Channel.GetComputerNameAsync();
        }
        
        public ServiceReference1.GetCurrentComputerByStaffResponseGetCurrentComputerByStaffResult GetCurrentComputerByStaff(string EmailId)
        {
            return base.Channel.GetCurrentComputerByStaff(EmailId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCurrentComputerByStaffResponseGetCurrentComputerByStaffResult> GetCurrentComputerByStaffAsync(string EmailId)
        {
            return base.Channel.GetCurrentComputerByStaffAsync(EmailId);
        }
        
        public bool AutoTransferInventory(long Productid, string email, string companyname)
        {
            return base.Channel.AutoTransferInventory(Productid, email, companyname);
        }
        
        public System.Threading.Tasks.Task<bool> AutoTransferInventoryAsync(long Productid, string email, string companyname)
        {
            return base.Channel.AutoTransferInventoryAsync(Productid, email, companyname);
        }
        
        public ServiceReference1.getworkreportResponseGetworkreportResult getworkreport(string companyname, string computername, string username, string shift, string startdate, string enddate)
        {
            return base.Channel.getworkreport(companyname, computername, username, shift, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getworkreportResponseGetworkreportResult> getworkreportAsync(string companyname, string computername, string username, string shift, string startdate, string enddate)
        {
            return base.Channel.getworkreportAsync(companyname, computername, username, shift, startdate, enddate);
        }
        
        public ServiceReference1.getworkreportUpdatedResponseGetworkreportUpdatedResult getworkreportUpdated(string companyname, string computername, string username, string shift, string startdate, string enddate, string RecordType)
        {
            return base.Channel.getworkreportUpdated(companyname, computername, username, shift, startdate, enddate, RecordType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getworkreportUpdatedResponseGetworkreportUpdatedResult> getworkreportUpdatedAsync(string companyname, string computername, string username, string shift, string startdate, string enddate, string RecordType)
        {
            return base.Channel.getworkreportUpdatedAsync(companyname, computername, username, shift, startdate, enddate, RecordType);
        }
        
        public ServiceReference1.GetOrderAccountwiseResponseGetOrderAccountwiseResult GetOrderAccountwise(string companyname, string computername, string startdate, string enddate, string category, string ordertype)
        {
            return base.Channel.GetOrderAccountwise(companyname, computername, startdate, enddate, category, ordertype);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderAccountwiseResponseGetOrderAccountwiseResult> GetOrderAccountwiseAsync(string companyname, string computername, string startdate, string enddate, string category, string ordertype)
        {
            return base.Channel.GetOrderAccountwiseAsync(companyname, computername, startdate, enddate, category, ordertype);
        }
        
        public ServiceReference1.GetOrderAccountwiseupdatedResponseGetOrderAccountwiseupdatedResult GetOrderAccountwiseupdated(string companyname, string computername, string startdate, string enddate, string category, string ordertype, string shift)
        {
            return base.Channel.GetOrderAccountwiseupdated(companyname, computername, startdate, enddate, category, ordertype, shift);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderAccountwiseupdatedResponseGetOrderAccountwiseupdatedResult> GetOrderAccountwiseupdatedAsync(string companyname, string computername, string startdate, string enddate, string category, string ordertype, string shift)
        {
            return base.Channel.GetOrderAccountwiseupdatedAsync(companyname, computername, startdate, enddate, category, ordertype, shift);
        }
        
        public bool CheckAllowcategory(string ComputerName, string ProductId)
        {
            return base.Channel.CheckAllowcategory(ComputerName, ProductId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAllowcategoryAsync(string ComputerName, string ProductId)
        {
            return base.Channel.CheckAllowcategoryAsync(ComputerName, ProductId);
        }
        
        public bool AllowAllcategory(string ComputerName)
        {
            return base.Channel.AllowAllcategory(ComputerName);
        }
        
        public System.Threading.Tasks.Task<bool> AllowAllcategoryAsync(string ComputerName)
        {
            return base.Channel.AllowAllcategoryAsync(ComputerName);
        }
        
        public int SaveProductDeliveryUpdated(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername)
        {
            return base.Channel.SaveProductDeliveryUpdated(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment, computername);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductDeliveryUpdatedAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername)
        {
            return base.Channel.SaveProductDeliveryUpdatedAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment, computername);
        }
        
        public int SaveProductDeliverynewUpdated(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername)
        {
            return base.Channel.SaveProductDeliverynewUpdated(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, computername);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductDeliverynewUpdatedAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername)
        {
            return base.Channel.SaveProductDeliverynewUpdatedAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, computername);
        }
        
        public ServiceReference1.GetAllCategorybycomputerwiseResponseGetAllCategorybycomputerwiseResult GetAllCategorybycomputerwise(string computername)
        {
            return base.Channel.GetAllCategorybycomputerwise(computername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllCategorybycomputerwiseResponseGetAllCategorybycomputerwiseResult> GetAllCategorybycomputerwiseAsync(string computername)
        {
            return base.Channel.GetAllCategorybycomputerwiseAsync(computername);
        }
        
        public ServiceReference1.GetAllunshippedOrderResponseGetAllunshippedOrderResult GetAllunshippedOrder()
        {
            return base.Channel.GetAllunshippedOrder();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllunshippedOrderResponseGetAllunshippedOrderResult> GetAllunshippedOrderAsync()
        {
            return base.Channel.GetAllunshippedOrderAsync();
        }
        
        public ServiceReference1.GetAllOutOfStockOrderResponseGetAllOutOfStockOrderResult GetAllOutOfStockOrder(string companyname, string computername, string category, string shift)
        {
            return base.Channel.GetAllOutOfStockOrder(companyname, computername, category, shift);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllOutOfStockOrderResponseGetAllOutOfStockOrderResult> GetAllOutOfStockOrderAsync(string companyname, string computername, string category, string shift)
        {
            return base.Channel.GetAllOutOfStockOrderAsync(companyname, computername, category, shift);
        }
        
        public ServiceReference1.GetAllOrderStatusQtyResponseGetAllOrderStatusQtyResult GetAllOrderStatusQty(string companyname, string computername, string category, string shift)
        {
            return base.Channel.GetAllOrderStatusQty(companyname, computername, category, shift);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllOrderStatusQtyResponseGetAllOrderStatusQtyResult> GetAllOrderStatusQtyAsync(string companyname, string computername, string category, string shift)
        {
            return base.Channel.GetAllOrderStatusQtyAsync(companyname, computername, category, shift);
        }
        
        public ServiceReference1.GetComputerNameByShiftResponseGetComputerNameByShiftResult GetComputerNameByShift(string shift)
        {
            return base.Channel.GetComputerNameByShift(shift);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetComputerNameByShiftResponseGetComputerNameByShiftResult> GetComputerNameByShiftAsync(string shift)
        {
            return base.Channel.GetComputerNameByShiftAsync(shift);
        }
        
        public string InventoryRecord(string inventory, string MainProductId, string sfpinventory, string fbainventory, string expinventory, string sbsinventory, string ProductId, string sku, string barcode, string quantity, string reason, string companyname, string EmailId)
        {
            return base.Channel.InventoryRecord(inventory, MainProductId, sfpinventory, fbainventory, expinventory, sbsinventory, ProductId, sku, barcode, quantity, reason, companyname, EmailId);
        }
        
        public System.Threading.Tasks.Task<string> InventoryRecordAsync(string inventory, string MainProductId, string sfpinventory, string fbainventory, string expinventory, string sbsinventory, string ProductId, string sku, string barcode, string quantity, string reason, string companyname, string EmailId)
        {
            return base.Channel.InventoryRecordAsync(inventory, MainProductId, sfpinventory, fbainventory, expinventory, sbsinventory, ProductId, sku, barcode, quantity, reason, companyname, EmailId);
        }
        
        public int SaveProductScanInNewUpdated(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    string TransferOtherCompany, 
                    System.DateTime ManufactureDate)
        {
            return base.Channel.SaveProductScanInNewUpdated(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment, DeliveryNoteNo, inventory, MainProductId, sfpinventory, fbainventory, expinventory, sbsinventory, TransferOtherCompany, ManufactureDate);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductScanInNewUpdatedAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    string TransferOtherCompany, 
                    System.DateTime ManufactureDate)
        {
            return base.Channel.SaveProductScanInNewUpdatedAsync(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment, DeliveryNoteNo, inventory, MainProductId, sfpinventory, fbainventory, expinventory, sbsinventory, TransferOtherCompany, ManufactureDate);
        }
        
        public ServiceReference1.GetLoginPermissionResponseGetLoginPermissionResult GetLoginPermission(string companyname, string emailid, string compautername)
        {
            return base.Channel.GetLoginPermission(companyname, emailid, compautername);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetLoginPermissionResponseGetLoginPermissionResult> GetLoginPermissionAsync(string companyname, string emailid, string compautername)
        {
            return base.Channel.GetLoginPermissionAsync(companyname, emailid, compautername);
        }
        
        public ServiceReference1.GetAccessForRoleResponseGetAccessForRoleResult GetAccessForRole(string emailid)
        {
            return base.Channel.GetAccessForRole(emailid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAccessForRoleResponseGetAccessForRoleResult> GetAccessForRoleAsync(string emailid)
        {
            return base.Channel.GetAccessForRoleAsync(emailid);
        }
        
        public int SaveProductdeliveryOnTransferInventory(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory)
        {
            return base.Channel.SaveProductdeliveryOnTransferInventory(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment, computername, inventory, promoinventory, sfpinventory, fbainventory, expiryinventory, sbsinventory);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductdeliveryOnTransferInventoryAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory)
        {
            return base.Channel.SaveProductdeliveryOnTransferInventoryAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment, computername, inventory, promoinventory, sfpinventory, fbainventory, expiryinventory, sbsinventory);
        }
        
        public int SaveProductScanInNew(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    System.DateTime ManufactureDate)
        {
            return base.Channel.SaveProductScanInNew(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment, DeliveryNoteNo, inventory, MainProductId, sfpinventory, fbainventory, expinventory, sbsinventory, ManufactureDate);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductScanInNewAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo, 
                    string inventory, 
                    string MainProductId, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expinventory, 
                    string sbsinventory, 
                    System.DateTime ManufactureDate)
        {
            return base.Channel.SaveProductScanInNewAsync(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment, DeliveryNoteNo, inventory, MainProductId, sfpinventory, fbainventory, expinventory, sbsinventory, ManufactureDate);
        }
        
        public int SaveProductDeliveryUpdatedNEW(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory)
        {
            return base.Channel.SaveProductDeliveryUpdatedNEW(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment, computername, inventory, promoinventory, sfpinventory, fbainventory, expiryinventory, sbsinventory);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductDeliveryUpdatedNEWAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory)
        {
            return base.Channel.SaveProductDeliveryUpdatedNEWAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment, computername, inventory, promoinventory, sfpinventory, fbainventory, expiryinventory, sbsinventory);
        }
        
        public int SaveProductDeliverynewUpdatedNEW(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory)
        {
            return base.Channel.SaveProductDeliverynewUpdatedNEW(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, computername, inventory, promoinventory, sfpinventory, fbainventory, expiryinventory, sbsinventory);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductDeliverynewUpdatedNEWAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string computername, 
                    string inventory, 
                    string promoinventory, 
                    string sfpinventory, 
                    string fbainventory, 
                    string expiryinventory, 
                    string sbsinventory)
        {
            return base.Channel.SaveProductDeliverynewUpdatedNEWAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, computername, inventory, promoinventory, sfpinventory, fbainventory, expiryinventory, sbsinventory);
        }
        
        public ServiceReference1.ArrayOfXElement GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCount(string companyname, int Ordernumber, string issuestatus, int productid)
        {
            return base.Channel.GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCount(companyname, Ordernumber, issuestatus, productid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCountAsync(string companyname, int Ordernumber, string issuestatus, int productid)
        {
            return base.Channel.GetIssueMainCategory_User_OrderIssue_AccountName_InventoryCountAsync(companyname, Ordernumber, issuestatus, productid);
        }
        
        public string UpdateInventoryByPscanoutProcedure(
                    string allowmultiple, 
                    int Ordernumber, 
                    int ProductId, 
                    int VariantId, 
                    int Outqty, 
                    string EmailId, 
                    string Companyname, 
                    string CustomerId, 
                    int MainInventory, 
                    int Promoinventory, 
                    int SFPInventory, 
                    int FBAInventory, 
                    int ExpiryInventory, 
                    int SBSInventory, 
                    string SKU, 
                    string Barcode, 
                    string Computername, 
                    string Countryname, 
                    System.DateTime Expirydate1, 
                    System.DateTime Expirydate2, 
                    System.DateTime Expirydate3, 
                    string Expirymsg, 
                    string IssueMainTitle, 
                    string IssueSubtitle, 
                    string Issuestatus, 
                    string IsClaimed, 
                    string Comment, 
                    string AssignUser, 
                    string IsStrdate)
        {
            return base.Channel.UpdateInventoryByPscanoutProcedure(allowmultiple, Ordernumber, ProductId, VariantId, Outqty, EmailId, Companyname, CustomerId, MainInventory, Promoinventory, SFPInventory, FBAInventory, ExpiryInventory, SBSInventory, SKU, Barcode, Computername, Countryname, Expirydate1, Expirydate2, Expirydate3, Expirymsg, IssueMainTitle, IssueSubtitle, Issuestatus, IsClaimed, Comment, AssignUser, IsStrdate);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryByPscanoutProcedureAsync(
                    string allowmultiple, 
                    int Ordernumber, 
                    int ProductId, 
                    int VariantId, 
                    int Outqty, 
                    string EmailId, 
                    string Companyname, 
                    string CustomerId, 
                    int MainInventory, 
                    int Promoinventory, 
                    int SFPInventory, 
                    int FBAInventory, 
                    int ExpiryInventory, 
                    int SBSInventory, 
                    string SKU, 
                    string Barcode, 
                    string Computername, 
                    string Countryname, 
                    System.DateTime Expirydate1, 
                    System.DateTime Expirydate2, 
                    System.DateTime Expirydate3, 
                    string Expirymsg, 
                    string IssueMainTitle, 
                    string IssueSubtitle, 
                    string Issuestatus, 
                    string IsClaimed, 
                    string Comment, 
                    string AssignUser, 
                    string IsStrdate)
        {
            return base.Channel.UpdateInventoryByPscanoutProcedureAsync(allowmultiple, Ordernumber, ProductId, VariantId, Outqty, EmailId, Companyname, CustomerId, MainInventory, Promoinventory, SFPInventory, FBAInventory, ExpiryInventory, SBSInventory, SKU, Barcode, Computername, Countryname, Expirydate1, Expirydate2, Expirydate3, Expirymsg, IssueMainTitle, IssueSubtitle, Issuestatus, IsClaimed, Comment, AssignUser, IsStrdate);
        }
        
        public string UpdateMarkAsShippedOrder(string ordernumber, string trackingnumber, string shippingmethod, string password, string couriername, System.DateTime shippedon, string OrderStatus, string createdby, string parcelweight, decimal parcelcharge, string companyrepresentative)
        {
            return base.Channel.UpdateMarkAsShippedOrder(ordernumber, trackingnumber, shippingmethod, password, couriername, shippedon, OrderStatus, createdby, parcelweight, parcelcharge, companyrepresentative);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMarkAsShippedOrderAsync(string ordernumber, string trackingnumber, string shippingmethod, string password, string couriername, System.DateTime shippedon, string OrderStatus, string createdby, string parcelweight, decimal parcelcharge, string companyrepresentative)
        {
            return base.Channel.UpdateMarkAsShippedOrderAsync(ordernumber, trackingnumber, shippingmethod, password, couriername, shippedon, OrderStatus, createdby, parcelweight, parcelcharge, companyrepresentative);
        }
        
        public ServiceReference1.ArrayOfXElement Getorderdetailsonpscanout(string ordernumber)
        {
            return base.Channel.Getorderdetailsonpscanout(ordernumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetorderdetailsonpscanoutAsync(string ordernumber)
        {
            return base.Channel.GetorderdetailsonpscanoutAsync(ordernumber);
        }
        
        public ServiceReference1.GetorderPrintlabelResponseGetorderPrintlabelResult GetorderPrintlabel(
                    string ordernumber, 
                    int printqty, 
                    string orderstatus, 
                    string companyname, 
                    string ordertype, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string category, 
                    string countrytype, 
                    string couriertype, 
                    string couriername, 
                    string postagename, 
                    string Other, 
                    string Email, 
                    string NoChange, 
                    System.DateTime printdate, 
                    string Shipmethod, 
                    string AccountName)
        {
            return base.Channel.GetorderPrintlabel(ordernumber, printqty, orderstatus, companyname, ordertype, startdate, enddate, category, countrytype, couriertype, couriername, postagename, Other, Email, NoChange, printdate, Shipmethod, AccountName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetorderPrintlabelResponseGetorderPrintlabelResult> GetorderPrintlabelAsync(
                    string ordernumber, 
                    int printqty, 
                    string orderstatus, 
                    string companyname, 
                    string ordertype, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string category, 
                    string countrytype, 
                    string couriertype, 
                    string couriername, 
                    string postagename, 
                    string Other, 
                    string Email, 
                    string NoChange, 
                    System.DateTime printdate, 
                    string Shipmethod, 
                    string AccountName)
        {
            return base.Channel.GetorderPrintlabelAsync(ordernumber, printqty, orderstatus, companyname, ordertype, startdate, enddate, category, countrytype, couriertype, couriername, postagename, Other, Email, NoChange, printdate, Shipmethod, AccountName);
        }
        
        public ServiceReference1.GetAutodownloadLabelOrderResponseGetAutodownloadLabelOrderResult GetAutodownloadLabelOrder()
        {
            return base.Channel.GetAutodownloadLabelOrder();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAutodownloadLabelOrderResponseGetAutodownloadLabelOrderResult> GetAutodownloadLabelOrderAsync()
        {
            return base.Channel.GetAutodownloadLabelOrderAsync();
        }
        
        public ServiceReference1.ArrayOfXElement GetPostageTypeandCourierwithordernumberwithDateRange(string ComputerName, System.DateTime dtstartdate, System.DateTime dtenddate)
        {
            return base.Channel.GetPostageTypeandCourierwithordernumberwithDateRange(ComputerName, dtstartdate, dtenddate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPostageTypeandCourierwithordernumberwithDateRangeAsync(string ComputerName, System.DateTime dtstartdate, System.DateTime dtenddate)
        {
            return base.Channel.GetPostageTypeandCourierwithordernumberwithDateRangeAsync(ComputerName, dtstartdate, dtenddate);
        }
        
        public ServiceReference1.ArrayOfXElement GetPostageTypeandCourierwithordernumberwithDateRangeandOrdertype(string OrderType, System.DateTime dtstartdate, System.DateTime dtenddate, string ComputerName)
        {
            return base.Channel.GetPostageTypeandCourierwithordernumberwithDateRangeandOrdertype(OrderType, dtstartdate, dtenddate, ComputerName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPostageTypeandCourierwithordernumberwithDateRangeandOrdertypeAsync(string OrderType, System.DateTime dtstartdate, System.DateTime dtenddate, string ComputerName)
        {
            return base.Channel.GetPostageTypeandCourierwithordernumberwithDateRangeandOrdertypeAsync(OrderType, dtstartdate, dtenddate, ComputerName);
        }
        
        public ServiceReference1.ArrayOfXElement GetPostageTypeandCourierwithordernumber()
        {
            return base.Channel.GetPostageTypeandCourierwithordernumber();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPostageTypeandCourierwithordernumberAsync()
        {
            return base.Channel.GetPostageTypeandCourierwithordernumberAsync();
        }
        
        public ServiceReference1.ArrayOfXElement Getcouriernamewithtype(string country)
        {
            return base.Channel.Getcouriernamewithtype(country);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetcouriernamewithtypeAsync(string country)
        {
            return base.Channel.GetcouriernamewithtypeAsync(country);
        }
        
        public string UpdatePrintDate(string ordernumber)
        {
            return base.Channel.UpdatePrintDate(ordernumber);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePrintDateAsync(string ordernumber)
        {
            return base.Channel.UpdatePrintDateAsync(ordernumber);
        }
        
        public string UpdateOrdertrackingwithgfs(string ordernumber, string trackingid, string username, string companyname)
        {
            return base.Channel.UpdateOrdertrackingwithgfs(ordernumber, trackingid, username, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateOrdertrackingwithgfsAsync(string ordernumber, string trackingid, string username, string companyname)
        {
            return base.Channel.UpdateOrdertrackingwithgfsAsync(ordernumber, trackingid, username, companyname);
        }
        
        public bool saveScanProduct(string SKU, string Barcode, int OrderSystemId, string Ordertype, string CompanyName, long ProductId, int Qty, string EmailId, string InvoiceNo, string InvoiceDate, int SupplierId, string Expirydate, string Expirymsg, string DeliveryNoteNumber, string ManufactureDate)
        {
            return base.Channel.saveScanProduct(SKU, Barcode, OrderSystemId, Ordertype, CompanyName, ProductId, Qty, EmailId, InvoiceNo, InvoiceDate, SupplierId, Expirydate, Expirymsg, DeliveryNoteNumber, ManufactureDate);
        }
        
        public System.Threading.Tasks.Task<bool> saveScanProductAsync(string SKU, string Barcode, int OrderSystemId, string Ordertype, string CompanyName, long ProductId, int Qty, string EmailId, string InvoiceNo, string InvoiceDate, int SupplierId, string Expirydate, string Expirymsg, string DeliveryNoteNumber, string ManufactureDate)
        {
            return base.Channel.saveScanProductAsync(SKU, Barcode, OrderSystemId, Ordertype, CompanyName, ProductId, Qty, EmailId, InvoiceNo, InvoiceDate, SupplierId, Expirydate, Expirymsg, DeliveryNoteNumber, ManufactureDate);
        }
        
        public ServiceReference1.getproductResponseGetproductResult getproduct(string companyname)
        {
            return base.Channel.getproduct(companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getproductResponseGetproductResult> getproductAsync(string companyname)
        {
            return base.Channel.getproductAsync(companyname);
        }
        
        public ServiceReference1.GetProductByIdResponseGetProductByIdResult GetProductById(int productid)
        {
            return base.Channel.GetProductById(productid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductByIdResponseGetProductByIdResult> GetProductByIdAsync(int productid)
        {
            return base.Channel.GetProductByIdAsync(productid);
        }
        
        public ServiceReference1.GetAllBrandResponseGetAllBrandResult GetAllBrand()
        {
            return base.Channel.GetAllBrand();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllBrandResponseGetAllBrandResult> GetAllBrandAsync()
        {
            return base.Channel.GetAllBrandAsync();
        }
        
        public ServiceReference1.GetTaxClassResponseGetTaxClassResult GetTaxClass()
        {
            return base.Channel.GetTaxClass();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTaxClassResponseGetTaxClassResult> GetTaxClassAsync()
        {
            return base.Channel.GetTaxClassAsync();
        }
        
        public ServiceReference1.GetUserWithrollResponseGetUserWithrollResult GetUserWithroll()
        {
            return base.Channel.GetUserWithroll();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetUserWithrollResponseGetUserWithrollResult> GetUserWithrollAsync()
        {
            return base.Channel.GetUserWithrollAsync();
        }
        
        public ServiceReference1.GetUserrollResponseGetUserrollResult GetUserroll()
        {
            return base.Channel.GetUserroll();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetUserrollResponseGetUserrollResult> GetUserrollAsync()
        {
            return base.Channel.GetUserrollAsync();
        }
        
        public ServiceReference1.GetAllScreenForRoleResponseGetAllScreenForRoleResult GetAllScreenForRole(long RoleId)
        {
            return base.Channel.GetAllScreenForRole(RoleId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllScreenForRoleResponseGetAllScreenForRoleResult> GetAllScreenForRoleAsync(long RoleId)
        {
            return base.Channel.GetAllScreenForRoleAsync(RoleId);
        }
        
        public ServiceReference1.GetuserByRoleIdResponseGetuserByRoleIdResult GetuserByRoleId(long RoleId)
        {
            return base.Channel.GetuserByRoleId(RoleId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetuserByRoleIdResponseGetuserByRoleIdResult> GetuserByRoleIdAsync(long RoleId)
        {
            return base.Channel.GetuserByRoleIdAsync(RoleId);
        }
        
        public ServiceReference1.LoadCreditnoteForPaperWorkResponseLoadCreditnoteForPaperWorkResult LoadCreditnoteForPaperWork(string companyname)
        {
            return base.Channel.LoadCreditnoteForPaperWork(companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.LoadCreditnoteForPaperWorkResponseLoadCreditnoteForPaperWorkResult> LoadCreditnoteForPaperWorkAsync(string companyname)
        {
            return base.Channel.LoadCreditnoteForPaperWorkAsync(companyname);
        }
        
        public string UpdatePaperWorkForCreditNote(string CreditId, string DockNo, string EmailId)
        {
            return base.Channel.UpdatePaperWorkForCreditNote(CreditId, DockNo, EmailId);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePaperWorkForCreditNoteAsync(string CreditId, string DockNo, string EmailId)
        {
            return base.Channel.UpdatePaperWorkForCreditNoteAsync(CreditId, DockNo, EmailId);
        }
        
        public bool GetPagePermission(string PageName, string email)
        {
            return base.Channel.GetPagePermission(PageName, email);
        }
        
        public System.Threading.Tasks.Task<bool> GetPagePermissionAsync(string PageName, string email)
        {
            return base.Channel.GetPagePermissionAsync(PageName, email);
        }
        
        public string SaveQuantityAdjustmentRecordForCheck(string qty, string InventoryType, string sku, string barcode, string companyname, string Expiry, string email, string Reason)
        {
            return base.Channel.SaveQuantityAdjustmentRecordForCheck(qty, InventoryType, sku, barcode, companyname, Expiry, email, Reason);
        }
        
        public System.Threading.Tasks.Task<string> SaveQuantityAdjustmentRecordForCheckAsync(string qty, string InventoryType, string sku, string barcode, string companyname, string Expiry, string email, string Reason)
        {
            return base.Channel.SaveQuantityAdjustmentRecordForCheckAsync(qty, InventoryType, sku, barcode, companyname, Expiry, email, Reason);
        }
        
        public ServiceReference1.GetCreditNoteWithoutDocResponseGetCreditNoteWithoutDocResult GetCreditNoteWithoutDoc(string companyname, string sku, string barcode, string pipcode, string InvoiceNumber)
        {
            return base.Channel.GetCreditNoteWithoutDoc(companyname, sku, barcode, pipcode, InvoiceNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCreditNoteWithoutDocResponseGetCreditNoteWithoutDocResult> GetCreditNoteWithoutDocAsync(string companyname, string sku, string barcode, string pipcode, string InvoiceNumber)
        {
            return base.Channel.GetCreditNoteWithoutDocAsync(companyname, sku, barcode, pipcode, InvoiceNumber);
        }
        
        public string UpdateCreditNote(string CreditId, string Comment, string DocNumber, string Email)
        {
            return base.Channel.UpdateCreditNote(CreditId, Comment, DocNumber, Email);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCreditNoteAsync(string CreditId, string Comment, string DocNumber, string Email)
        {
            return base.Channel.UpdateCreditNoteAsync(CreditId, Comment, DocNumber, Email);
        }
        
        public string DataTableToJSONWithJavaScriptSerializer(string Barcode)
        {
            return base.Channel.DataTableToJSONWithJavaScriptSerializer(Barcode);
        }
        
        public System.Threading.Tasks.Task<string> DataTableToJSONWithJavaScriptSerializerAsync(string Barcode)
        {
            return base.Channel.DataTableToJSONWithJavaScriptSerializerAsync(Barcode);
        }
        
        public bool OrderExist(string OrderNumber)
        {
            return base.Channel.OrderExist(OrderNumber);
        }
        
        public System.Threading.Tasks.Task<bool> OrderExistAsync(string OrderNumber)
        {
            return base.Channel.OrderExistAsync(OrderNumber);
        }
        
        public bool TrackingNumberExist(string TrackingNumber)
        {
            return base.Channel.TrackingNumberExist(TrackingNumber);
        }
        
        public System.Threading.Tasks.Task<bool> TrackingNumberExistAsync(string TrackingNumber)
        {
            return base.Channel.TrackingNumberExistAsync(TrackingNumber);
        }
        
        public ServiceReference1.LoadQuantityAdjustmentOpenCaseResponseLoadQuantityAdjustmentOpenCaseResult LoadQuantityAdjustmentOpenCase(string Barcode, string Reason)
        {
            return base.Channel.LoadQuantityAdjustmentOpenCase(Barcode, Reason);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.LoadQuantityAdjustmentOpenCaseResponseLoadQuantityAdjustmentOpenCaseResult> LoadQuantityAdjustmentOpenCaseAsync(string Barcode, string Reason)
        {
            return base.Channel.LoadQuantityAdjustmentOpenCaseAsync(Barcode, Reason);
        }
        
        public string Updateqtyadjustment(string AId, string qty, string EmailId)
        {
            return base.Channel.Updateqtyadjustment(AId, qty, EmailId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateqtyadjustmentAsync(string AId, string qty, string EmailId)
        {
            return base.Channel.UpdateqtyadjustmentAsync(AId, qty, EmailId);
        }
        
        public string UpdateExpiryRoomInventory(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.UpdateExpiryRoomInventory(ProductId, quantity, Companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateExpiryRoomInventoryAsync(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.UpdateExpiryRoomInventoryAsync(ProductId, quantity, Companyname);
        }
        
        public string UpdateDamageRoomInventory(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.UpdateDamageRoomInventory(ProductId, quantity, Companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDamageRoomInventoryAsync(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.UpdateDamageRoomInventoryAsync(ProductId, quantity, Companyname);
        }
        
        public string AddDamageRoomInventory(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.AddDamageRoomInventory(ProductId, quantity, Companyname);
        }
        
        public System.Threading.Tasks.Task<string> AddDamageRoomInventoryAsync(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.AddDamageRoomInventoryAsync(ProductId, quantity, Companyname);
        }
        
        public string AddExpiryRoomInventory(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.AddExpiryRoomInventory(ProductId, quantity, Companyname);
        }
        
        public System.Threading.Tasks.Task<string> AddExpiryRoomInventoryAsync(string ProductId, string quantity, string Companyname)
        {
            return base.Channel.AddExpiryRoomInventoryAsync(ProductId, quantity, Companyname);
        }
        
        public int SaveProductINExpiryroom(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName)
        {
            return base.Channel.SaveProductINExpiryroom(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, expdate, Inventoryfor, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductINExpiryroomAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName)
        {
            return base.Channel.SaveProductINExpiryroomAsync(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, expdate, Inventoryfor, CompanyName);
        }
        
        public int SaveExpiryRoomReplacementbycompany(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName)
        {
            return base.Channel.SaveExpiryRoomReplacementbycompany(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveExpiryRoomReplacementbycompanyAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName)
        {
            return base.Channel.SaveExpiryRoomReplacementbycompanyAsync(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, CompanyName);
        }
        
        public int UpdateExpiryRoomqtyupdated(int productid, int variantid, int qty, string companyname, string expdate, string email)
        {
            return base.Channel.UpdateExpiryRoomqtyupdated(productid, variantid, qty, companyname, expdate, email);
        }
        
        public System.Threading.Tasks.Task<int> UpdateExpiryRoomqtyupdatedAsync(int productid, int variantid, int qty, string companyname, string expdate, string email)
        {
            return base.Channel.UpdateExpiryRoomqtyupdatedAsync(productid, variantid, qty, companyname, expdate, email);
        }
        
        public ServiceReference1.GetListOfPrintOrderErrorResponseGetListOfPrintOrderErrorResult GetListOfPrintOrderError(string OrderList)
        {
            return base.Channel.GetListOfPrintOrderError(OrderList);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetListOfPrintOrderErrorResponseGetListOfPrintOrderErrorResult> GetListOfPrintOrderErrorAsync(string OrderList)
        {
            return base.Channel.GetListOfPrintOrderErrorAsync(OrderList);
        }
        
        public ServiceReference1.GetDefaultVarientResponseGetDefaultVarientResult GetDefaultVarient(string ProductId)
        {
            return base.Channel.GetDefaultVarient(ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientResponseGetDefaultVarientResult> GetDefaultVarientAsync(string ProductId)
        {
            return base.Channel.GetDefaultVarientAsync(ProductId);
        }
        
        public bool UpdateProductInventory(long ProductId, int Qty, string InventoryType, string Reason, string EmailId, int AddQty, string AddInventoryType)
        {
            return base.Channel.UpdateProductInventory(ProductId, Qty, InventoryType, Reason, EmailId, AddQty, AddInventoryType);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductInventoryAsync(long ProductId, int Qty, string InventoryType, string Reason, string EmailId, int AddQty, string AddInventoryType)
        {
            return base.Channel.UpdateProductInventoryAsync(ProductId, Qty, InventoryType, Reason, EmailId, AddQty, AddInventoryType);
        }
        
        public string UpdateInventoryQuantityByVarientSFPcompany(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateInventoryQuantityByVarientSFPcompany(VarientId, mquantity, quantity, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientSFPcompanyAsync(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateInventoryQuantityByVarientSFPcompanyAsync(VarientId, mquantity, quantity, company);
        }
        
        public string UpdateSFPInventoryByVarient(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateSFPInventoryByVarient(VarientId, mquantity, quantity, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSFPInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateSFPInventoryByVarientAsync(VarientId, mquantity, quantity, company);
        }
        
        public string UpdateInventoryQuantityByVarientcompany(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryQuantityByVarientcompany(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientcompanyAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryQuantityByVarientcompanyAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string UpdateInventoryByVarient(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarient(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public int SaveDamageReplacementbycompany(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName)
        {
            return base.Channel.SaveDamageReplacementbycompany(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveDamageReplacementbycompanyAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string CompanyName)
        {
            return base.Channel.SaveDamageReplacementbycompanyAsync(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, CompanyName);
        }
        
        public string UpdateInventoryQuantityByVarientdamageroomcompany(string VarientId, string mquantity, string quantity, string Companyname)
        {
            return base.Channel.UpdateInventoryQuantityByVarientdamageroomcompany(VarientId, mquantity, quantity, Companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientdamageroomcompanyAsync(string VarientId, string mquantity, string quantity, string Companyname)
        {
            return base.Channel.UpdateInventoryQuantityByVarientdamageroomcompanyAsync(VarientId, mquantity, quantity, Companyname);
        }
        
        public string UpdateInventoryByProduct(string ProductId, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByProduct(ProductId, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryByProductAsync(string ProductId, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByProductAsync(ProductId, quantity, companyname);
        }
        
        public string UpdateDamageInventoryByVarient(string VarientId, string mquantity, string quantity, string Companyname)
        {
            return base.Channel.UpdateDamageInventoryByVarient(VarientId, mquantity, quantity, Companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDamageInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string Companyname)
        {
            return base.Channel.UpdateDamageInventoryByVarientAsync(VarientId, mquantity, quantity, Companyname);
        }
        
        public bool saveproductdeliverywithexpiryfromscanoutwithskubycompanyname(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryfromscanoutwithskubycompanyname(dttime, qty, deliveryid, companyname, barcode, sku);
        }
        
        public System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryfromscanoutwithskubycompanynameAsync(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryfromscanoutwithskubycompanynameAsync(dttime, qty, deliveryid, companyname, barcode, sku);
        }
        
        public bool saveproductdeliverywithexpiryfromscanout(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryfromscanout(dttime, qty, deliveryid, companyname, barcode, sku);
        }
        
        public System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryfromscanoutAsync(string dttime, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryfromscanoutAsync(dttime, qty, deliveryid, companyname, barcode, sku);
        }
        
        public bool saveproductdeliverywithexpiryexpirymessagewithskubycompanyname(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryexpirymessagewithskubycompanyname(expirymessage, qty, deliveryid, companyname, barcode, sku);
        }
        
        public System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryexpirymessagewithskubycompanynameAsync(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryexpirymessagewithskubycompanynameAsync(expirymessage, qty, deliveryid, companyname, barcode, sku);
        }
        
        public bool saveproductdeliverywithexpiryexpirymessage(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryexpirymessage(expirymessage, qty, deliveryid, companyname, barcode, sku);
        }
        
        public System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryexpirymessageAsync(string expirymessage, int qty, int deliveryid, string companyname, string barcode, string sku)
        {
            return base.Channel.saveproductdeliverywithexpiryexpirymessageAsync(expirymessage, qty, deliveryid, companyname, barcode, sku);
        }
        
        public string GetrestrictionValue(int ordernumber)
        {
            return base.Channel.GetrestrictionValue(ordernumber);
        }
        
        public System.Threading.Tasks.Task<string> GetrestrictionValueAsync(int ordernumber)
        {
            return base.Channel.GetrestrictionValueAsync(ordernumber);
        }
        
        public bool IsRoyalMail(string variantid)
        {
            return base.Channel.IsRoyalMail(variantid);
        }
        
        public System.Threading.Tasks.Task<bool> IsRoyalMailAsync(string variantid)
        {
            return base.Channel.IsRoyalMailAsync(variantid);
        }
        
        public ServiceReference1.GetclearenceorderResponseGetclearenceorderResult Getclearenceorder(string variantid, string companyname, string channel)
        {
            return base.Channel.Getclearenceorder(variantid, companyname, channel);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetclearenceorderResponseGetclearenceorderResult> GetclearenceorderAsync(string variantid, string companyname, string channel)
        {
            return base.Channel.GetclearenceorderAsync(variantid, companyname, channel);
        }
        
        public ServiceReference1.GetsellingchannelResponseGetsellingchannelResult Getsellingchannel(string OrderNumber, string companyname)
        {
            return base.Channel.Getsellingchannel(OrderNumber, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetsellingchannelResponseGetsellingchannelResult> GetsellingchannelAsync(string OrderNumber, string companyname)
        {
            return base.Channel.GetsellingchannelAsync(OrderNumber, companyname);
        }
        
        public string UpdateFbaInventoryInCostingSheet(string VarientId, string CostingType, int quantity, string companyname)
        {
            return base.Channel.UpdateFbaInventoryInCostingSheet(VarientId, CostingType, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFbaInventoryInCostingSheetAsync(string VarientId, string CostingType, int quantity, string companyname)
        {
            return base.Channel.UpdateFbaInventoryInCostingSheetAsync(VarientId, CostingType, quantity, companyname);
        }
        
        public ServiceReference1.GetpostagetypeResponseGetpostagetypeResult Getpostagetype(string variantid, string companyname)
        {
            return base.Channel.Getpostagetype(variantid, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetpostagetypeResponseGetpostagetypeResult> GetpostagetypeAsync(string variantid, string companyname)
        {
            return base.Channel.GetpostagetypeAsync(variantid, companyname);
        }
        
        public ServiceReference1.GetpostageResponseGetpostageResult Getpostage(string AccountName, string companyname)
        {
            return base.Channel.Getpostage(AccountName, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetpostageResponseGetpostageResult> GetpostageAsync(string AccountName, string companyname)
        {
            return base.Channel.GetpostageAsync(AccountName, companyname);
        }
        
        public ServiceReference1.GetExpiryproductdatebycompanyResponseGetExpiryproductdatebycompanyResult GetExpiryproductdatebycompany(int ordernumber, string exptype, string companyname)
        {
            return base.Channel.GetExpiryproductdatebycompany(ordernumber, exptype, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpiryproductdatebycompanyResponseGetExpiryproductdatebycompanyResult> GetExpiryproductdatebycompanyAsync(int ordernumber, string exptype, string companyname)
        {
            return base.Channel.GetExpiryproductdatebycompanyAsync(ordernumber, exptype, companyname);
        }
        
        public ServiceReference1.GetExpirydatebycompanynameResponseGetExpirydatebycompanynameResult GetExpirydatebycompanyname(string sku, string companyname)
        {
            return base.Channel.GetExpirydatebycompanyname(sku, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirydatebycompanynameResponseGetExpirydatebycompanynameResult> GetExpirydatebycompanynameAsync(string sku, string companyname)
        {
            return base.Channel.GetExpirydatebycompanynameAsync(sku, companyname);
        }
        
        public ServiceReference1.GetExpirydateResponseGetExpirydateResult GetExpirydate(string sku, string companyname)
        {
            return base.Channel.GetExpirydate(sku, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirydateResponseGetExpirydateResult> GetExpirydateAsync(string sku, string companyname)
        {
            return base.Channel.GetExpirydateAsync(sku, companyname);
        }
        
        public string UpdateExpiryInventoryUpdated(string ProductId, string mquantity, string quantity, string expdate, string createdby)
        {
            return base.Channel.UpdateExpiryInventoryUpdated(ProductId, mquantity, quantity, expdate, createdby);
        }
        
        public System.Threading.Tasks.Task<string> UpdateExpiryInventoryUpdatedAsync(string ProductId, string mquantity, string quantity, string expdate, string createdby)
        {
            return base.Channel.UpdateExpiryInventoryUpdatedAsync(ProductId, mquantity, quantity, expdate, createdby);
        }
        
        public int UpdateOrderTransactionStateupdated(long OrderId, string userid)
        {
            return base.Channel.UpdateOrderTransactionStateupdated(OrderId, userid);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderTransactionStateupdatedAsync(long OrderId, string userid)
        {
            return base.Channel.UpdateOrderTransactionStateupdatedAsync(OrderId, userid);
        }
        
        public string TransferInventoryfromMainToExpiryUpdated(string VarientId, string mquantity, string quantity, System.DateTime expdate, string createdby)
        {
            return base.Channel.TransferInventoryfromMainToExpiryUpdated(VarientId, mquantity, quantity, expdate, createdby);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromMainToExpiryUpdatedAsync(string VarientId, string mquantity, string quantity, System.DateTime expdate, string createdby)
        {
            return base.Channel.TransferInventoryfromMainToExpiryUpdatedAsync(VarientId, mquantity, quantity, expdate, createdby);
        }
        
        public ServiceReference1.GetExpirydatefromexpiryroomResponseGetExpirydatefromexpiryroomResult GetExpirydatefromexpiryroom(string sku, string companyname)
        {
            return base.Channel.GetExpirydatefromexpiryroom(sku, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirydatefromexpiryroomResponseGetExpirydatefromexpiryroomResult> GetExpirydatefromexpiryroomAsync(string sku, string companyname)
        {
            return base.Channel.GetExpirydatefromexpiryroomAsync(sku, companyname);
        }
        
        public ServiceReference1.GetExpirymessagebycompanynameResponseGetExpirymessagebycompanynameResult GetExpirymessagebycompanyname(string sku, string companyname)
        {
            return base.Channel.GetExpirymessagebycompanyname(sku, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirymessagebycompanynameResponseGetExpirymessagebycompanynameResult> GetExpirymessagebycompanynameAsync(string sku, string companyname)
        {
            return base.Channel.GetExpirymessagebycompanynameAsync(sku, companyname);
        }
        
        public ServiceReference1.GetExpirymsgResponseGetExpirymsgResult GetExpirymsg(string sku, string companyname)
        {
            return base.Channel.GetExpirymsg(sku, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirymsgResponseGetExpirymsgResult> GetExpirymsgAsync(string sku, string companyname)
        {
            return base.Channel.GetExpirymsgAsync(sku, companyname);
        }
        
        public ServiceReference1.GetProductDetailbycompanyResponseGetProductDetailbycompanyResult GetProductDetailbycompany(string strCode, string strType, string companyname)
        {
            return base.Channel.GetProductDetailbycompany(strCode, strType, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductDetailbycompanyResponseGetProductDetailbycompanyResult> GetProductDetailbycompanyAsync(string strCode, string strType, string companyname)
        {
            return base.Channel.GetProductDetailbycompanyAsync(strCode, strType, companyname);
        }
        
        public ServiceReference1.GetScanInProductResponseGetScanInProductResult GetScanInProduct(string strCode, string strType, string companyname)
        {
            return base.Channel.GetScanInProduct(strCode, strType, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetScanInProductResponseGetScanInProductResult> GetScanInProductAsync(string strCode, string strType, string companyname)
        {
            return base.Channel.GetScanInProductAsync(strCode, strType, companyname);
        }
        
        public ServiceReference1.GetProductDetailsResponseGetProductDetailsResult GetProductDetails(string strCode, string strType, string companyname)
        {
            return base.Channel.GetProductDetails(strCode, strType, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductDetailsResponseGetProductDetailsResult> GetProductDetailsAsync(string strCode, string strType, string companyname)
        {
            return base.Channel.GetProductDetailsAsync(strCode, strType, companyname);
        }
        
        public ServiceReference1.GetProductRackLabelResponseGetProductRackLabelResult GetProductRackLabel(string strCode, string strType, string companyname)
        {
            return base.Channel.GetProductRackLabel(strCode, strType, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductRackLabelResponseGetProductRackLabelResult> GetProductRackLabelAsync(string strCode, string strType, string companyname)
        {
            return base.Channel.GetProductRackLabelAsync(strCode, strType, companyname);
        }
        
        public string UpdateOrderReturndStatus(string OrderNumber, string ProductId, int ReturnQty, int OrderQty, string createdby, string companyname)
        {
            return base.Channel.UpdateOrderReturndStatus(OrderNumber, ProductId, ReturnQty, OrderQty, createdby, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateOrderReturndStatusAsync(string OrderNumber, string ProductId, int ReturnQty, int OrderQty, string createdby, string companyname)
        {
            return base.Channel.UpdateOrderReturndStatusAsync(OrderNumber, ProductId, ReturnQty, OrderQty, createdby, companyname);
        }
        
        public ServiceReference1.getcostingbyorderResponseGetcostingbyorderResult getcostingbyorder(int ordernumber)
        {
            return base.Channel.getcostingbyorder(ordernumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getcostingbyorderResponseGetcostingbyorderResult> getcostingbyorderAsync(int ordernumber)
        {
            return base.Channel.getcostingbyorderAsync(ordernumber);
        }
        
        public ServiceReference1.GetPalletNumberResponseGetPalletNumberResult GetPalletNumber()
        {
            return base.Channel.GetPalletNumber();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetPalletNumberResponseGetPalletNumberResult> GetPalletNumberAsync()
        {
            return base.Channel.GetPalletNumberAsync();
        }
        
        public ServiceReference1.GetPalletResponseGetPalletResult GetPallet(int MainProductId, int PalletNumber)
        {
            return base.Channel.GetPallet(MainProductId, PalletNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetPalletResponseGetPalletResult> GetPalletAsync(int MainProductId, int PalletNumber)
        {
            return base.Channel.GetPalletAsync(MainProductId, PalletNumber);
        }
        
        public ServiceReference1.GetUserResponseGetUserResult GetUser()
        {
            return base.Channel.GetUser();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetUserResponseGetUserResult> GetUserAsync()
        {
            return base.Channel.GetUserAsync();
        }
        
        public ServiceReference1.GetcollectionnoofItemResponseGetcollectionnoofItemResult GetcollectionnoofItem(string CategoryId)
        {
            return base.Channel.GetcollectionnoofItem(CategoryId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetcollectionnoofItemResponseGetcollectionnoofItemResult> GetcollectionnoofItemAsync(string CategoryId)
        {
            return base.Channel.GetcollectionnoofItemAsync(CategoryId);
        }
        
        public ServiceReference1.GetShelfingnoofItemResponseGetShelfingnoofItemResult GetShelfingnoofItem(string CategoryId)
        {
            return base.Channel.GetShelfingnoofItem(CategoryId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetShelfingnoofItemResponseGetShelfingnoofItemResult> GetShelfingnoofItemAsync(string CategoryId)
        {
            return base.Channel.GetShelfingnoofItemAsync(CategoryId);
        }
        
        public ServiceReference1.WareHouseStaffResponseWareHouseStaffResult WareHouseStaff()
        {
            return base.Channel.WareHouseStaff();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WareHouseStaffResponseWareHouseStaffResult> WareHouseStaffAsync()
        {
            return base.Channel.WareHouseStaffAsync();
        }
        
        public ServiceReference1.GetTaskTimerResponseGetTaskTimerResult GetTaskTimer(string CountryName)
        {
            return base.Channel.GetTaskTimer(CountryName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTaskTimerResponseGetTaskTimerResult> GetTaskTimerAsync(string CountryName)
        {
            return base.Channel.GetTaskTimerAsync(CountryName);
        }
        
        public int SaveTaskTimer(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment, string ComputerName)
        {
            return base.Channel.SaveTaskTimer(EmailId, TaskType, CategoryId, ItemQty, Comment, ComputerName);
        }
        
        public System.Threading.Tasks.Task<int> SaveTaskTimerAsync(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment, string ComputerName)
        {
            return base.Channel.SaveTaskTimerAsync(EmailId, TaskType, CategoryId, ItemQty, Comment, ComputerName);
        }
        
        public int SaveTaskTimers(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment)
        {
            return base.Channel.SaveTaskTimers(EmailId, TaskType, CategoryId, ItemQty, Comment);
        }
        
        public System.Threading.Tasks.Task<int> SaveTaskTimersAsync(string EmailId, string TaskType, int CategoryId, int ItemQty, string Comment)
        {
            return base.Channel.SaveTaskTimersAsync(EmailId, TaskType, CategoryId, ItemQty, Comment);
        }
        
        public int UpdateTaskTimer(int STId)
        {
            return base.Channel.UpdateTaskTimer(STId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTaskTimerAsync(int STId)
        {
            return base.Channel.UpdateTaskTimerAsync(STId);
        }
        
        public ServiceReference1.checknondeliveredorderResponseChecknondeliveredorderResult checknondeliveredorder(int ordernumber)
        {
            return base.Channel.checknondeliveredorder(ordernumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.checknondeliveredorderResponseChecknondeliveredorderResult> checknondeliveredorderAsync(int ordernumber)
        {
            return base.Channel.checknondeliveredorderAsync(ordernumber);
        }
        
        public int Saveordercomment(int Ordernumber, string Comment, string Createdby, string CompanyName)
        {
            return base.Channel.Saveordercomment(Ordernumber, Comment, Createdby, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveordercommentAsync(int Ordernumber, string Comment, string Createdby, string CompanyName)
        {
            return base.Channel.SaveordercommentAsync(Ordernumber, Comment, Createdby, CompanyName);
        }
        
        public int Saveorderstatus(int Ordernumber, string OrderStatus, string Createdby, string CompanyName)
        {
            return base.Channel.Saveorderstatus(Ordernumber, OrderStatus, Createdby, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveorderstatusAsync(int Ordernumber, string OrderStatus, string Createdby, string CompanyName)
        {
            return base.Channel.SaveorderstatusAsync(Ordernumber, OrderStatus, Createdby, CompanyName);
        }
        
        public ServiceReference1.LoadOrderIssuesResponseLoadOrderIssuesResult LoadOrderIssues(int OrderId, string Resendstatus)
        {
            return base.Channel.LoadOrderIssues(OrderId, Resendstatus);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.LoadOrderIssuesResponseLoadOrderIssuesResult> LoadOrderIssuesAsync(int OrderId, string Resendstatus)
        {
            return base.Channel.LoadOrderIssuesAsync(OrderId, Resendstatus);
        }
        
        public bool UpdateOrderIssues(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim)
        {
            return base.Channel.UpdateOrderIssues(orderno, Title, SubTitle, status, comment, companyname, createdby, claim);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderIssuesAsync(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim)
        {
            return base.Channel.UpdateOrderIssuesAsync(orderno, Title, SubTitle, status, comment, companyname, createdby, claim);
        }
        
        public bool UpdateOrderIssuesUpdated(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim, string asignto)
        {
            return base.Channel.UpdateOrderIssuesUpdated(orderno, Title, SubTitle, status, comment, companyname, createdby, claim, asignto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderIssuesUpdatedAsync(int orderno, string Title, string SubTitle, string status, string comment, string companyname, string createdby, string claim, string asignto)
        {
            return base.Channel.UpdateOrderIssuesUpdatedAsync(orderno, Title, SubTitle, status, comment, companyname, createdby, claim, asignto);
        }
        
        public string updateVariantpostage(int variantid, string accountname, string postage, string Email)
        {
            return base.Channel.updateVariantpostage(variantid, accountname, postage, Email);
        }
        
        public System.Threading.Tasks.Task<string> updateVariantpostageAsync(int variantid, string accountname, string postage, string Email)
        {
            return base.Channel.updateVariantpostageAsync(variantid, accountname, postage, Email);
        }
        
        public string UpdateProductVariantWeight(int variantid, string productweight, string packingweight, string Email)
        {
            return base.Channel.UpdateProductVariantWeight(variantid, productweight, packingweight, Email);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductVariantWeightAsync(int variantid, string productweight, string packingweight, string Email)
        {
            return base.Channel.UpdateProductVariantWeightAsync(variantid, productweight, packingweight, Email);
        }
        
        public string UpdateDimension(int VariantId, string Length, string Width, string Height)
        {
            return base.Channel.UpdateDimension(VariantId, Length, Width, Height);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDimensionAsync(int VariantId, string Length, string Width, string Height)
        {
            return base.Channel.UpdateDimensionAsync(VariantId, Length, Width, Height);
        }
        
        public string UpdateMainProductWeight(int ProductId, string productweight, string packingweight, string Email)
        {
            return base.Channel.UpdateMainProductWeight(ProductId, productweight, packingweight, Email);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMainProductWeightAsync(int ProductId, string productweight, string packingweight, string Email)
        {
            return base.Channel.UpdateMainProductWeightAsync(ProductId, productweight, packingweight, Email);
        }
        
        public string UpdateCategory(int productid, string categoryid, string Email)
        {
            return base.Channel.UpdateCategory(productid, categoryid, Email);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCategoryAsync(int productid, string categoryid, string Email)
        {
            return base.Channel.UpdateCategoryAsync(productid, categoryid, Email);
        }
        
        public string UpdateProductHistory(int productid, string FieldName, string FieldValue, string OldValue, string Email)
        {
            return base.Channel.UpdateProductHistory(productid, FieldName, FieldValue, OldValue, Email);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductHistoryAsync(int productid, string FieldName, string FieldValue, string OldValue, string Email)
        {
            return base.Channel.UpdateProductHistoryAsync(productid, FieldName, FieldValue, OldValue, Email);
        }
        
        public ServiceReference1.getMainProductIdResponseGetMainProductIdResult getMainProductId(int productid)
        {
            return base.Channel.getMainProductId(productid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getMainProductIdResponseGetMainProductIdResult> getMainProductIdAsync(int productid)
        {
            return base.Channel.getMainProductIdAsync(productid);
        }
        
        public string UpdateProductWeight(int variantid, string productweight, string packingweight)
        {
            return base.Channel.UpdateProductWeight(variantid, productweight, packingweight);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductWeightAsync(int variantid, string productweight, string packingweight)
        {
            return base.Channel.UpdateProductWeightAsync(variantid, productweight, packingweight);
        }
        
        public int SaveCreditNote(
                    long ProductId, 
                    long VariantId, 
                    string SKU, 
                    string Barcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    string dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string Attachfilename, 
                    string ValueIncVat, 
                    long CreditNoteNo, 
                    string CompanyName, 
                    string comment, 
                    long DeliveryId)
        {
            return base.Channel.SaveCreditNote(ProductId, VariantId, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, Attachfilename, ValueIncVat, CreditNoteNo, CompanyName, comment, DeliveryId);
        }
        
        public System.Threading.Tasks.Task<int> SaveCreditNoteAsync(
                    long ProductId, 
                    long VariantId, 
                    string SKU, 
                    string Barcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    string dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string Attachfilename, 
                    string ValueIncVat, 
                    long CreditNoteNo, 
                    string CompanyName, 
                    string comment, 
                    long DeliveryId)
        {
            return base.Channel.SaveCreditNoteAsync(ProductId, VariantId, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, Attachfilename, ValueIncVat, CreditNoteNo, CompanyName, comment, DeliveryId);
        }
        
        public ServiceReference1.getproductvariantbypacksizeResponseGetproductvariantbypacksizeResult getproductvariantbypacksize(int productid, int packsize)
        {
            return base.Channel.getproductvariantbypacksize(productid, packsize);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getproductvariantbypacksizeResponseGetproductvariantbypacksizeResult> getproductvariantbypacksizeAsync(int productid, int packsize)
        {
            return base.Channel.getproductvariantbypacksizeAsync(productid, packsize);
        }
        
        public string SaveInvoicesName(string FileType, string FileName, string createdby, string companyname)
        {
            return base.Channel.SaveInvoicesName(FileType, FileName, createdby, companyname);
        }
        
        public System.Threading.Tasks.Task<string> SaveInvoicesNameAsync(string FileType, string FileName, string createdby, string companyname)
        {
            return base.Channel.SaveInvoicesNameAsync(FileType, FileName, createdby, companyname);
        }
        
        public string SaveFileType(string FileType, string createdby)
        {
            return base.Channel.SaveFileType(FileType, createdby);
        }
        
        public System.Threading.Tasks.Task<string> SaveFileTypeAsync(string FileType, string createdby)
        {
            return base.Channel.SaveFileTypeAsync(FileType, createdby);
        }
        
        public ServiceReference1.getFileTypeResponseGetFileTypeResult getFileType()
        {
            return base.Channel.getFileType();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getFileTypeResponseGetFileTypeResult> getFileTypeAsync()
        {
            return base.Channel.getFileTypeAsync();
        }
        
        public ServiceReference1.GetpostagebyVIDResponseGetpostagebyVIDResult GetpostagebyVID(string variantid, string companyname, string accountname, string couriertype)
        {
            return base.Channel.GetpostagebyVID(variantid, companyname, accountname, couriertype);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetpostagebyVIDResponseGetpostagebyVIDResult> GetpostagebyVIDAsync(string variantid, string companyname, string accountname, string couriertype)
        {
            return base.Channel.GetpostagebyVIDAsync(variantid, companyname, accountname, couriertype);
        }
        
        public string updatepostage(string variantid, string accountname, string postage)
        {
            return base.Channel.updatepostage(variantid, accountname, postage);
        }
        
        public System.Threading.Tasks.Task<string> updatepostageAsync(string variantid, string accountname, string postage)
        {
            return base.Channel.updatepostageAsync(variantid, accountname, postage);
        }
        
        public ServiceReference1.GetpostagebyAccountResponseGetpostagebyAccountResult GetpostagebyAccount(string companyname, string accountname, string couriertype)
        {
            return base.Channel.GetpostagebyAccount(companyname, accountname, couriertype);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetpostagebyAccountResponseGetpostagebyAccountResult> GetpostagebyAccountAsync(string companyname, string accountname, string couriertype)
        {
            return base.Channel.GetpostagebyAccountAsync(companyname, accountname, couriertype);
        }
        
        public ServiceReference1.updatecostingbypostagechangeResponseUpdatecostingbypostagechangeResult updatecostingbypostagechange(string postage, string accname, string companyname, string variantid, string sku)
        {
            return base.Channel.updatecostingbypostagechange(postage, accname, companyname, variantid, sku);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.updatecostingbypostagechangeResponseUpdatecostingbypostagechangeResult> updatecostingbypostagechangeAsync(string postage, string accname, string companyname, string variantid, string sku)
        {
            return base.Channel.updatecostingbypostagechangeAsync(postage, accname, companyname, variantid, sku);
        }
        
        public string SaveUploadFile(string FileType, string comment, string FileName, string createdby, string companyname)
        {
            return base.Channel.SaveUploadFile(FileType, comment, FileName, createdby, companyname);
        }
        
        public System.Threading.Tasks.Task<string> SaveUploadFileAsync(string FileType, string comment, string FileName, string createdby, string companyname)
        {
            return base.Channel.SaveUploadFileAsync(FileType, comment, FileName, createdby, companyname);
        }
        
        public ServiceReference1.GetInventoryCountDetailsResponseGetInventoryCountDetailsResult GetInventoryCountDetails(string productid)
        {
            return base.Channel.GetInventoryCountDetails(productid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetInventoryCountDetailsResponseGetInventoryCountDetailsResult> GetInventoryCountDetailsAsync(string productid)
        {
            return base.Channel.GetInventoryCountDetailsAsync(productid);
        }
        
        public string UpdateWareHouseProductLocation(int productid, string IeleNo, string RackNo, string BoxNo)
        {
            return base.Channel.UpdateWareHouseProductLocation(productid, IeleNo, RackNo, BoxNo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateWareHouseProductLocationAsync(int productid, string IeleNo, string RackNo, string BoxNo)
        {
            return base.Channel.UpdateWareHouseProductLocationAsync(productid, IeleNo, RackNo, BoxNo);
        }
        
        public ServiceReference1.GetIssueReasonResponseGetIssueReasonResult GetIssueReason()
        {
            return base.Channel.GetIssueReason();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetIssueReasonResponseGetIssueReasonResult> GetIssueReasonAsync()
        {
            return base.Channel.GetIssueReasonAsync();
        }
        
        public ServiceReference1.GetIssueSubReasonResponseGetIssueSubReasonResult GetIssueSubReason(string parentid)
        {
            return base.Channel.GetIssueSubReason(parentid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetIssueSubReasonResponseGetIssueSubReasonResult> GetIssueSubReasonAsync(string parentid)
        {
            return base.Channel.GetIssueSubReasonAsync(parentid);
        }
        
        public string UpdateScaninOnInventoryCount(string productid)
        {
            return base.Channel.UpdateScaninOnInventoryCount(productid);
        }
        
        public System.Threading.Tasks.Task<string> UpdateScaninOnInventoryCountAsync(string productid)
        {
            return base.Channel.UpdateScaninOnInventoryCountAsync(productid);
        }
        
        public string UpdateScaninRecord(string productid, string MainProductId)
        {
            return base.Channel.UpdateScaninRecord(productid, MainProductId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateScaninRecordAsync(string productid, string MainProductId)
        {
            return base.Channel.UpdateScaninRecordAsync(productid, MainProductId);
        }
        
        public ServiceReference1.GetOrderDetailsResponseGetOrderDetailsResult GetOrderDetails(string orderId)
        {
            return base.Channel.GetOrderDetails(orderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderDetailsResponseGetOrderDetailsResult> GetOrderDetailsAsync(string orderId)
        {
            return base.Channel.GetOrderDetailsAsync(orderId);
        }
        
        public string UpdateProductCategory(int productid, string categoryid)
        {
            return base.Channel.UpdateProductCategory(productid, categoryid);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductCategoryAsync(int productid, string categoryid)
        {
            return base.Channel.UpdateProductCategoryAsync(productid, categoryid);
        }
        
        public ServiceReference1.GetAllCategorywithReadtytoprintorderResponseGetAllCategorywithReadtytoprintorderResult GetAllCategorywithReadtytoprintorder(string OrderType, System.DateTime StartDate, System.DateTime EndDate, string ComputerName)
        {
            return base.Channel.GetAllCategorywithReadtytoprintorder(OrderType, StartDate, EndDate, ComputerName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllCategorywithReadtytoprintorderResponseGetAllCategorywithReadtytoprintorderResult> GetAllCategorywithReadtytoprintorderAsync(string OrderType, System.DateTime StartDate, System.DateTime EndDate, string ComputerName)
        {
            return base.Channel.GetAllCategorywithReadtytoprintorderAsync(OrderType, StartDate, EndDate, ComputerName);
        }
        
        public ServiceReference1.GetAllCategoryResponseGetAllCategoryResult GetAllCategory()
        {
            return base.Channel.GetAllCategory();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllCategoryResponseGetAllCategoryResult> GetAllCategoryAsync()
        {
            return base.Channel.GetAllCategoryAsync();
        }
        
        public ServiceReference1.GetCategoryResponseGetCategoryResult GetCategory()
        {
            return base.Channel.GetCategory();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCategoryResponseGetCategoryResult> GetCategoryAsync()
        {
            return base.Channel.GetCategoryAsync();
        }
        
        public int SaveOrderPackingWeight(int OrderNumber, string PackingWeight, string CreatedBy, string companyname)
        {
            return base.Channel.SaveOrderPackingWeight(OrderNumber, PackingWeight, CreatedBy, companyname);
        }
        
        public System.Threading.Tasks.Task<int> SaveOrderPackingWeightAsync(int OrderNumber, string PackingWeight, string CreatedBy, string companyname)
        {
            return base.Channel.SaveOrderPackingWeightAsync(OrderNumber, PackingWeight, CreatedBy, companyname);
        }
        
        public int updateproductInventorybyInventorycount(string ProductId, string VariantId, string sku, string barcode, string email, string InventoryType, string CompanyName, string ComputerName)
        {
            return base.Channel.updateproductInventorybyInventorycount(ProductId, VariantId, sku, barcode, email, InventoryType, CompanyName, ComputerName);
        }
        
        public System.Threading.Tasks.Task<int> updateproductInventorybyInventorycountAsync(string ProductId, string VariantId, string sku, string barcode, string email, string InventoryType, string CompanyName, string ComputerName)
        {
            return base.Channel.updateproductInventorybyInventorycountAsync(ProductId, VariantId, sku, barcode, email, InventoryType, CompanyName, ComputerName);
        }
        
        public int updatecostingbypostage(string AccountName, string SKU, string CompanyName, int OrderNumber, int VariantId, decimal PostageCost, string EmailId)
        {
            return base.Channel.updatecostingbypostage(AccountName, SKU, CompanyName, OrderNumber, VariantId, PostageCost, EmailId);
        }
        
        public System.Threading.Tasks.Task<int> updatecostingbypostageAsync(string AccountName, string SKU, string CompanyName, int OrderNumber, int VariantId, decimal PostageCost, string EmailId)
        {
            return base.Channel.updatecostingbypostageAsync(AccountName, SKU, CompanyName, OrderNumber, VariantId, PostageCost, EmailId);
        }
        
        public int SaveOrderPackingWeightWithpostalservice(int OrderNumber, string PackingWeight, string postalservice, string CreatedBy, string companyname)
        {
            return base.Channel.SaveOrderPackingWeightWithpostalservice(OrderNumber, PackingWeight, postalservice, CreatedBy, companyname);
        }
        
        public System.Threading.Tasks.Task<int> SaveOrderPackingWeightWithpostalserviceAsync(int OrderNumber, string PackingWeight, string postalservice, string CreatedBy, string companyname)
        {
            return base.Channel.SaveOrderPackingWeightWithpostalserviceAsync(OrderNumber, PackingWeight, postalservice, CreatedBy, companyname);
        }
        
        public string AutoTransferMainInventory(int productid, int Quantity, string companyname, string email)
        {
            return base.Channel.AutoTransferMainInventory(productid, Quantity, companyname, email);
        }
        
        public System.Threading.Tasks.Task<string> AutoTransferMainInventoryAsync(int productid, int Quantity, string companyname, string email)
        {
            return base.Channel.AutoTransferMainInventoryAsync(productid, Quantity, companyname, email);
        }
        
        public ServiceReference1.GetShoppingCartWithZeroPidResponseGetShoppingCartWithZeroPidResult GetShoppingCartWithZeroPid(int OrderId)
        {
            return base.Channel.GetShoppingCartWithZeroPid(OrderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartWithZeroPidResponseGetShoppingCartWithZeroPidResult> GetShoppingCartWithZeroPidAsync(int OrderId)
        {
            return base.Channel.GetShoppingCartWithZeroPidAsync(OrderId);
        }
        
        public bool CheckLoginDetail(string EMailField, string PasswordField)
        {
            return base.Channel.CheckLoginDetail(EMailField, PasswordField);
        }
        
        public System.Threading.Tasks.Task<bool> CheckLoginDetailAsync(string EMailField, string PasswordField)
        {
            return base.Channel.CheckLoginDetailAsync(EMailField, PasswordField);
        }
        
        public string GetLoginDetail(string EMailField, string PasswordField)
        {
            return base.Channel.GetLoginDetail(EMailField, PasswordField);
        }
        
        public System.Threading.Tasks.Task<string> GetLoginDetailAsync(string EMailField, string PasswordField)
        {
            return base.Channel.GetLoginDetailAsync(EMailField, PasswordField);
        }
        
        public int IsHazardProduct(int productid)
        {
            return base.Channel.IsHazardProduct(productid);
        }
        
        public System.Threading.Tasks.Task<int> IsHazardProductAsync(int productid)
        {
            return base.Channel.IsHazardProductAsync(productid);
        }
        
        public ServiceReference1.GetScanInDataResponseGetScanInDataResult GetScanInData(long scaninid)
        {
            return base.Channel.GetScanInData(scaninid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetScanInDataResponseGetScanInDataResult> GetScanInDataAsync(long scaninid)
        {
            return base.Channel.GetScanInDataAsync(scaninid);
        }
        
        public ServiceReference1.GetProductDeliveryDataResponseGetProductDeliveryDataResult GetProductDeliveryData(long Deliveryid)
        {
            return base.Channel.GetProductDeliveryData(Deliveryid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductDeliveryDataResponseGetProductDeliveryDataResult> GetProductDeliveryDataAsync(long Deliveryid)
        {
            return base.Channel.GetProductDeliveryDataAsync(Deliveryid);
        }
        
        public ServiceReference1.GetInventoryIdResponseGetInventoryIdResult GetInventoryId(long VariantId)
        {
            return base.Channel.GetInventoryId(VariantId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetInventoryIdResponseGetInventoryIdResult> GetInventoryIdAsync(long VariantId)
        {
            return base.Channel.GetInventoryIdAsync(VariantId);
        }
        
        public ServiceReference1.FillGridAgainstSkuwithcompanyResponseFillGridAgainstSkuwithcompanyResult FillGridAgainstSkuwithcompany(string sku, string companyname)
        {
            return base.Channel.FillGridAgainstSkuwithcompany(sku, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.FillGridAgainstSkuwithcompanyResponseFillGridAgainstSkuwithcompanyResult> FillGridAgainstSkuwithcompanyAsync(string sku, string companyname)
        {
            return base.Channel.FillGridAgainstSkuwithcompanyAsync(sku, companyname);
        }
        
        public ServiceReference1.FillGridAgainstBarcodewithcompanyResponseFillGridAgainstBarcodewithcompanyResult FillGridAgainstBarcodewithcompany(string Barcode, string companyname)
        {
            return base.Channel.FillGridAgainstBarcodewithcompany(Barcode, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.FillGridAgainstBarcodewithcompanyResponseFillGridAgainstBarcodewithcompanyResult> FillGridAgainstBarcodewithcompanyAsync(string Barcode, string companyname)
        {
            return base.Channel.FillGridAgainstBarcodewithcompanyAsync(Barcode, companyname);
        }
        
        public ServiceReference1.GetFBAOrderingResponseGetFBAOrderingResult GetFBAOrdering(string Barcode, string companyname)
        {
            return base.Channel.GetFBAOrdering(Barcode, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetFBAOrderingResponseGetFBAOrderingResult> GetFBAOrderingAsync(string Barcode, string companyname)
        {
            return base.Channel.GetFBAOrderingAsync(Barcode, companyname);
        }
        
        public bool checkexistmessage(string barcode)
        {
            return base.Channel.checkexistmessage(barcode);
        }
        
        public System.Threading.Tasks.Task<bool> checkexistmessageAsync(string barcode)
        {
            return base.Channel.checkexistmessageAsync(barcode);
        }
        
        public string GetexistExpiry(string MainProductId)
        {
            return base.Channel.GetexistExpiry(MainProductId);
        }
        
        public System.Threading.Tasks.Task<string> GetexistExpiryAsync(string MainProductId)
        {
            return base.Channel.GetexistExpiryAsync(MainProductId);
        }
        
        public ServiceReference1.GetCompanybycountryResponseGetCompanybycountryResult GetCompanybycountry(string country)
        {
            return base.Channel.GetCompanybycountry(country);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCompanybycountryResponseGetCompanybycountryResult> GetCompanybycountryAsync(string country)
        {
            return base.Channel.GetCompanybycountryAsync(country);
        }
        
        public ServiceReference1.GetSupplierResponseGetSupplierResult GetSupplier()
        {
            return base.Channel.GetSupplier();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetSupplierResponseGetSupplierResult> GetSupplierAsync()
        {
            return base.Channel.GetSupplierAsync();
        }
        
        public ServiceReference1.GetCompanyResponseGetCompanyResult GetCompany()
        {
            return base.Channel.GetCompany();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCompanyResponseGetCompanyResult> GetCompanyAsync()
        {
            return base.Channel.GetCompanyAsync();
        }
        
        public ServiceReference1.GetAccountNameResponseGetAccountNameResult GetAccountName()
        {
            return base.Channel.GetAccountName();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAccountNameResponseGetAccountNameResult> GetAccountNameAsync()
        {
            return base.Channel.GetAccountNameAsync();
        }
        
        public ServiceReference1.GetManualInvoiceResponseGetManualInvoiceResult GetManualInvoice(string InvoiceNumber, string SKU)
        {
            return base.Channel.GetManualInvoice(InvoiceNumber, SKU);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetManualInvoiceResponseGetManualInvoiceResult> GetManualInvoiceAsync(string InvoiceNumber, string SKU)
        {
            return base.Channel.GetManualInvoiceAsync(InvoiceNumber, SKU);
        }
        
        public ServiceReference1.GetOrderTypeResponseGetOrderTypeResult GetOrderType(string InvoiceNumber)
        {
            return base.Channel.GetOrderType(InvoiceNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderTypeResponseGetOrderTypeResult> GetOrderTypeAsync(string InvoiceNumber)
        {
            return base.Channel.GetOrderTypeAsync(InvoiceNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.SaveCaptureResponse ServiceReference1.BarcodeWebServiceSoap.SaveCapture(ServiceReference1.SaveCaptureRequest request)
        {
            return base.Channel.SaveCapture(request);
        }
        
        public int SaveCapture(string Name, string ContentType, byte[] arr, string SystemIp, string CreatedOn)
        {
            ServiceReference1.SaveCaptureRequest inValue = new ServiceReference1.SaveCaptureRequest();
            inValue.Name = Name;
            inValue.ContentType = ContentType;
            inValue.arr = arr;
            inValue.SystemIp = SystemIp;
            inValue.CreatedOn = CreatedOn;
            ServiceReference1.SaveCaptureResponse retVal = ((ServiceReference1.BarcodeWebServiceSoap)(this)).SaveCapture(inValue);
            return retVal.SaveCaptureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SaveCaptureResponse> ServiceReference1.BarcodeWebServiceSoap.SaveCaptureAsync(ServiceReference1.SaveCaptureRequest request)
        {
            return base.Channel.SaveCaptureAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SaveCaptureResponse> SaveCaptureAsync(string Name, string ContentType, byte[] arr, string SystemIp, string CreatedOn)
        {
            ServiceReference1.SaveCaptureRequest inValue = new ServiceReference1.SaveCaptureRequest();
            inValue.Name = Name;
            inValue.ContentType = ContentType;
            inValue.arr = arr;
            inValue.SystemIp = SystemIp;
            inValue.CreatedOn = CreatedOn;
            return ((ServiceReference1.BarcodeWebServiceSoap)(this)).SaveCaptureAsync(inValue);
        }
        
        public int SaveCaptureLog(string Name, string ContentType, string Data, string SystemIp, string CreatedOn)
        {
            return base.Channel.SaveCaptureLog(Name, ContentType, Data, SystemIp, CreatedOn);
        }
        
        public System.Threading.Tasks.Task<int> SaveCaptureLogAsync(string Name, string ContentType, string Data, string SystemIp, string CreatedOn)
        {
            return base.Channel.SaveCaptureLogAsync(Name, ContentType, Data, SystemIp, CreatedOn);
        }
        
        public ServiceReference1.GetInvoicePrintResponseGetInvoicePrintResult GetInvoicePrint(string strType, string OrderNumber)
        {
            return base.Channel.GetInvoicePrint(strType, OrderNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetInvoicePrintResponseGetInvoicePrintResult> GetInvoicePrintAsync(string strType, string OrderNumber)
        {
            return base.Channel.GetInvoicePrintAsync(strType, OrderNumber);
        }
        
        public ServiceReference1.GetAllPerformaInvoiceResponseGetAllPerformaInvoiceResult GetAllPerformaInvoice(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName)
        {
            return base.Channel.GetAllPerformaInvoice(dtfrom, dtend, OrderNumber, Country, ProductName, SKU, ShippingFirstName, CreatedBy, CompanyName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllPerformaInvoiceResponseGetAllPerformaInvoiceResult> GetAllPerformaInvoiceAsync(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName)
        {
            return base.Channel.GetAllPerformaInvoiceAsync(dtfrom, dtend, OrderNumber, Country, ProductName, SKU, ShippingFirstName, CreatedBy, CompanyName);
        }
        
        public ServiceReference1.GetAllManualInvoiceResponseGetAllManualInvoiceResult GetAllManualInvoice(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName)
        {
            return base.Channel.GetAllManualInvoice(dtfrom, dtend, OrderNumber, Country, ProductName, SKU, ShippingFirstName, CreatedBy, CompanyName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetAllManualInvoiceResponseGetAllManualInvoiceResult> GetAllManualInvoiceAsync(System.DateTime dtfrom, System.DateTime dtend, string OrderNumber, string Country, string ProductName, string SKU, string ShippingFirstName, string CreatedBy, string CompanyName)
        {
            return base.Channel.GetAllManualInvoiceAsync(dtfrom, dtend, OrderNumber, Country, ProductName, SKU, ShippingFirstName, CreatedBy, CompanyName);
        }
        
        public string SavePerchaseExpance(string InvoiceNumber, System.DateTime InvoiceDate, string ShippingName, string CompanyName, string CreatedBy, string TotalPriceWithVat, string TotalVat)
        {
            return base.Channel.SavePerchaseExpance(InvoiceNumber, InvoiceDate, ShippingName, CompanyName, CreatedBy, TotalPriceWithVat, TotalVat);
        }
        
        public System.Threading.Tasks.Task<string> SavePerchaseExpanceAsync(string InvoiceNumber, System.DateTime InvoiceDate, string ShippingName, string CompanyName, string CreatedBy, string TotalPriceWithVat, string TotalVat)
        {
            return base.Channel.SavePerchaseExpanceAsync(InvoiceNumber, InvoiceDate, ShippingName, CompanyName, CreatedBy, TotalPriceWithVat, TotalVat);
        }
        
        public string SavePerformaInvoice(
                    string InvoiceNumber, 
                    string SalesOrderNumber, 
                    string InvoiceType, 
                    System.DateTime InvoiceDate, 
                    string PaymentStatus, 
                    string AmountPaidTo, 
                    string ShippingName, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductId, 
                    string MainProductId, 
                    string ProductName, 
                    string SKU, 
                    string Barcode, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ProductPrice, 
                    string SalePrice, 
                    string Discount, 
                    string Commission, 
                    string WarehouseExpense, 
                    string CreatedBy, 
                    string TotalPriceWithVat, 
                    string TotalVat)
        {
            return base.Channel.SavePerformaInvoice(InvoiceNumber, SalesOrderNumber, InvoiceType, InvoiceDate, PaymentStatus, AmountPaidTo, ShippingName, EmailId, PhoneNo, ShippingAddress1, ShippingAddress2, City, Country, Zipcode, CurrencyCode, ShippingPrice, CompanyName, ProductId, MainProductId, ProductName, SKU, Barcode, Qty, Vat, VatPercent, ProductPrice, SalePrice, Discount, Commission, WarehouseExpense, CreatedBy, TotalPriceWithVat, TotalVat);
        }
        
        public System.Threading.Tasks.Task<string> SavePerformaInvoiceAsync(
                    string InvoiceNumber, 
                    string SalesOrderNumber, 
                    string InvoiceType, 
                    System.DateTime InvoiceDate, 
                    string PaymentStatus, 
                    string AmountPaidTo, 
                    string ShippingName, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductId, 
                    string MainProductId, 
                    string ProductName, 
                    string SKU, 
                    string Barcode, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ProductPrice, 
                    string SalePrice, 
                    string Discount, 
                    string Commission, 
                    string WarehouseExpense, 
                    string CreatedBy, 
                    string TotalPriceWithVat, 
                    string TotalVat)
        {
            return base.Channel.SavePerformaInvoiceAsync(InvoiceNumber, SalesOrderNumber, InvoiceType, InvoiceDate, PaymentStatus, AmountPaidTo, ShippingName, EmailId, PhoneNo, ShippingAddress1, ShippingAddress2, City, Country, Zipcode, CurrencyCode, ShippingPrice, CompanyName, ProductId, MainProductId, ProductName, SKU, Barcode, Qty, Vat, VatPercent, ProductPrice, SalePrice, Discount, Commission, WarehouseExpense, CreatedBy, TotalPriceWithVat, TotalVat);
        }
        
        public string ImportOrder(ServiceReference1.ImportOrderDtorderlist dtorderlist, string SalesChannel, string TotalAmount, string shippingcost, string InvoiceDate, string ShippingAddressName, string ShippingAddressAddressLine1, string ShippingAddressAddressLine2, string city, string country, string zipcode, string EmailId, string Phonenumber)
        {
            return base.Channel.ImportOrder(dtorderlist, SalesChannel, TotalAmount, shippingcost, InvoiceDate, ShippingAddressName, ShippingAddressAddressLine1, ShippingAddressAddressLine2, city, country, zipcode, EmailId, Phonenumber);
        }
        
        public System.Threading.Tasks.Task<string> ImportOrderAsync(ServiceReference1.ImportOrderDtorderlist dtorderlist, string SalesChannel, string TotalAmount, string shippingcost, string InvoiceDate, string ShippingAddressName, string ShippingAddressAddressLine1, string ShippingAddressAddressLine2, string city, string country, string zipcode, string EmailId, string Phonenumber)
        {
            return base.Channel.ImportOrderAsync(dtorderlist, SalesChannel, TotalAmount, shippingcost, InvoiceDate, ShippingAddressName, ShippingAddressAddressLine1, ShippingAddressAddressLine2, city, country, zipcode, EmailId, Phonenumber);
        }
        
        public string SaveManulInvoice(
                    string MId, 
                    string MInvoiceId, 
                    string ShippingName, 
                    System.DateTime InvoiceDate, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductName, 
                    string SKU, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ListPrice, 
                    string Discount, 
                    string CreatedBy, 
                    string PaymentStatus, 
                    string Reason, 
                    string DeliveredQty)
        {
            return base.Channel.SaveManulInvoice(MId, MInvoiceId, ShippingName, InvoiceDate, EmailId, PhoneNo, ShippingAddress1, ShippingAddress2, City, State, Country, Zipcode, CurrencyCode, ShippingPrice, CompanyName, ProductName, SKU, Qty, Vat, VatPercent, ListPrice, Discount, CreatedBy, PaymentStatus, Reason, DeliveredQty);
        }
        
        public System.Threading.Tasks.Task<string> SaveManulInvoiceAsync(
                    string MId, 
                    string MInvoiceId, 
                    string ShippingName, 
                    System.DateTime InvoiceDate, 
                    string EmailId, 
                    string PhoneNo, 
                    string ShippingAddress1, 
                    string ShippingAddress2, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zipcode, 
                    string CurrencyCode, 
                    string ShippingPrice, 
                    string CompanyName, 
                    string ProductName, 
                    string SKU, 
                    string Qty, 
                    string Vat, 
                    string VatPercent, 
                    string ListPrice, 
                    string Discount, 
                    string CreatedBy, 
                    string PaymentStatus, 
                    string Reason, 
                    string DeliveredQty)
        {
            return base.Channel.SaveManulInvoiceAsync(MId, MInvoiceId, ShippingName, InvoiceDate, EmailId, PhoneNo, ShippingAddress1, ShippingAddress2, City, State, Country, Zipcode, CurrencyCode, ShippingPrice, CompanyName, ProductName, SKU, Qty, Vat, VatPercent, ListPrice, Discount, CreatedBy, PaymentStatus, Reason, DeliveredQty);
        }
        
        public string UpdateDeliveredqtyManualInvoice(string InvoiceNumber, string SKU, int Qty)
        {
            return base.Channel.UpdateDeliveredqtyManualInvoice(InvoiceNumber, SKU, Qty);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDeliveredqtyManualInvoiceAsync(string InvoiceNumber, string SKU, int Qty)
        {
            return base.Channel.UpdateDeliveredqtyManualInvoiceAsync(InvoiceNumber, SKU, Qty);
        }
        
        public ServiceReference1.GetCompanyDetailsResponseGetCompanyDetailsResult GetCompanyDetails(string companyname)
        {
            return base.Channel.GetCompanyDetails(companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCompanyDetailsResponseGetCompanyDetailsResult> GetCompanyDetailsAsync(string companyname)
        {
            return base.Channel.GetCompanyDetailsAsync(companyname);
        }
        
        public bool DeleteManualInvoice(string MId, string DeletedBy)
        {
            return base.Channel.DeleteManualInvoice(MId, DeletedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteManualInvoiceAsync(string MId, string DeletedBy)
        {
            return base.Channel.DeleteManualInvoiceAsync(MId, DeletedBy);
        }
        
        public bool Updateexpiry(string dateold, string datenew, int qty, string sku)
        {
            return base.Channel.Updateexpiry(dateold, datenew, qty, sku);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateexpiryAsync(string dateold, string datenew, int qty, string sku)
        {
            return base.Channel.UpdateexpiryAsync(dateold, datenew, qty, sku);
        }
        
        public bool GetDuplicateOrder(string ordernumber)
        {
            return base.Channel.GetDuplicateOrder(ordernumber);
        }
        
        public System.Threading.Tasks.Task<bool> GetDuplicateOrderAsync(string ordernumber)
        {
            return base.Channel.GetDuplicateOrderAsync(ordernumber);
        }
        
        public ServiceReference1.getcourierserviceResponseGetcourierserviceResult getcourierservice(string countryname)
        {
            return base.Channel.getcourierservice(countryname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getcourierserviceResponseGetcourierserviceResult> getcourierserviceAsync(string countryname)
        {
            return base.Channel.getcourierserviceAsync(countryname);
        }
        
        public int Saveshipmentdetails(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber, string parcelweight, decimal parcelcharge, string shipby, string comprep)
        {
            return base.Channel.Saveshipmentdetails(Carreir, TrackingNumber, ShippedOn, OrderNumber, parcelweight, parcelcharge, shipby, comprep);
        }
        
        public System.Threading.Tasks.Task<int> SaveshipmentdetailsAsync(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber, string parcelweight, decimal parcelcharge, string shipby, string comprep)
        {
            return base.Channel.SaveshipmentdetailsAsync(Carreir, TrackingNumber, ShippedOn, OrderNumber, parcelweight, parcelcharge, shipby, comprep);
        }
        
        public string UpdateInventoryQuantityByVarientpromotionupdated(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientpromotionupdated(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientpromotionupdatedAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientpromotionupdatedAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string UpdateInventoryByVarientpromotion(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientpromotion(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryByVarientpromotionAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientpromotionAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string DoAction(string byaction, string action, string pagename, string oldval)
        {
            return base.Channel.DoAction(byaction, action, pagename, oldval);
        }
        
        public System.Threading.Tasks.Task<string> DoActionAsync(string byaction, string action, string pagename, string oldval)
        {
            return base.Channel.DoActionAsync(byaction, action, pagename, oldval);
        }
        
        public string SaveDoAction(string byaction, string action, string pagename, string oldval, string companyname, string sku, string barcode, string ordernumber, string asinitemid)
        {
            return base.Channel.SaveDoAction(byaction, action, pagename, oldval, companyname, sku, barcode, ordernumber, asinitemid);
        }
        
        public System.Threading.Tasks.Task<string> SaveDoActionAsync(string byaction, string action, string pagename, string oldval, string companyname, string sku, string barcode, string ordernumber, string asinitemid)
        {
            return base.Channel.SaveDoActionAsync(byaction, action, pagename, oldval, companyname, sku, barcode, ordernumber, asinitemid);
        }
        
        public ServiceReference1.ArrayOfXElement GetPendingOrderDetailsbycompany(string productid, string companyname)
        {
            return base.Channel.GetPendingOrderDetailsbycompany(productid, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPendingOrderDetailsbycompanyAsync(string productid, string companyname)
        {
            return base.Channel.GetPendingOrderDetailsbycompanyAsync(productid, companyname);
        }
        
        public ServiceReference1.ArrayOfXElement GetPendingOrderDetails(string Barcode, string companyname)
        {
            return base.Channel.GetPendingOrderDetails(Barcode, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPendingOrderDetailsAsync(string Barcode, string companyname)
        {
            return base.Channel.GetPendingOrderDetailsAsync(Barcode, companyname);
        }
        
        public ServiceReference1.GetDefaultVarientDetailsResponseGetDefaultVarientDetailsResult GetDefaultVarientDetails(string ProductId, string companyname)
        {
            return base.Channel.GetDefaultVarientDetails(ProductId, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientDetailsResponseGetDefaultVarientDetailsResult> GetDefaultVarientDetailsAsync(string ProductId, string companyname)
        {
            return base.Channel.GetDefaultVarientDetailsAsync(ProductId, companyname);
        }
        
        public ServiceReference1.GetDefaultVarientDetailResponseGetDefaultVarientDetailResult GetDefaultVarientDetail(string ProductId)
        {
            return base.Channel.GetDefaultVarientDetail(ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientDetailResponseGetDefaultVarientDetailResult> GetDefaultVarientDetailAsync(string ProductId)
        {
            return base.Channel.GetDefaultVarientDetailAsync(ProductId);
        }
        
        public ServiceReference1.GetDefaultVarientDetailsupdatedResponseGetDefaultVarientDetailsupdatedResult GetDefaultVarientDetailsupdated(string ProductId)
        {
            return base.Channel.GetDefaultVarientDetailsupdated(ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDefaultVarientDetailsupdatedResponseGetDefaultVarientDetailsupdatedResult> GetDefaultVarientDetailsupdatedAsync(string ProductId)
        {
            return base.Channel.GetDefaultVarientDetailsupdatedAsync(ProductId);
        }
        
        public string TransferfromMaintoSFPInventory(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromMaintoSFPInventory(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfromMaintoSFPInventoryAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromMaintoSFPInventoryAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferInventoryfromMaintoSFP(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromMaintoSFP(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromMaintoSFPAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromMaintoSFPAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferfromSFPtoMainInventory(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtoMainInventory(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfromSFPtoMainInventoryAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtoMainInventoryAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferInventoryfromSFPtoMain(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromSFPtoMain(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromSFPtoMainAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromSFPtoMainAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferfrompromotiontoMainInventory(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoMainInventory(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfrompromotiontoMainInventoryAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoMainInventoryAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferInventoryfrompromotiontoMain(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfrompromotiontoMain(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfrompromotiontoMainAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfrompromotiontoMainAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferfrompromotiontoSFPInventory(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoSFPInventory(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfrompromotiontoSFPInventoryAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoSFPInventoryAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferInventoryfrompromotiontoSFP(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfrompromotiontoSFP(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfrompromotiontoSFPAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfrompromotiontoSFPAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferfromSFPtopromotionInventory(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtopromotionInventory(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfromSFPtopromotionInventoryAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtopromotionInventoryAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferInventoryfromSFPtopromotion(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromSFPtopromotion(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromSFPtopromotionAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromSFPtopromotionAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferInventoryfromMainToExpiry(string VarientId, string mquantity, string quantity, System.DateTime expdate)
        {
            return base.Channel.TransferInventoryfromMainToExpiry(VarientId, mquantity, quantity, expdate);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromMainToExpiryAsync(string VarientId, string mquantity, string quantity, System.DateTime expdate)
        {
            return base.Channel.TransferInventoryfromMainToExpiryAsync(VarientId, mquantity, quantity, expdate);
        }
        
        public string UpdateExpiryInventory(string VarientId, string mquantity, string quantity, string expdate)
        {
            return base.Channel.UpdateExpiryInventory(VarientId, mquantity, quantity, expdate);
        }
        
        public System.Threading.Tasks.Task<string> UpdateExpiryInventoryAsync(string VarientId, string mquantity, string quantity, string expdate)
        {
            return base.Channel.UpdateExpiryInventoryAsync(VarientId, mquantity, quantity, expdate);
        }
        
        public string TransferInventoryfromMainToFBA(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromMainToFBA(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromMainToFBAAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromMainToFBAAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferInventoryfromFBAToMain(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromFBAToMain(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromFBAToMainAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromFBAToMainAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferInventoryfromSFPToFBA(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromSFPToFBA(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromSFPToFBAAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromSFPToFBAAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferInventoryfromFBAToSFP(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromFBAToSFP(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromFBAToSFPAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromFBAToSFPAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string TransferInventoryfromPromotionToFBA(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromPromotionToFBA(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> TransferInventoryfromPromotionToFBAAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.TransferInventoryfromPromotionToFBAAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string UpdateProductmaininventorybycompany(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateProductmaininventorybycompany(Inventory, ProductID, VariantID, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductmaininventorybycompanyAsync(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateProductmaininventorybycompanyAsync(Inventory, ProductID, VariantID, company);
        }
        
        public string Updatemaininventory(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.Updatemaininventory(Inventory, ProductID, VariantID, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdatemaininventoryAsync(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdatemaininventoryAsync(Inventory, ProductID, VariantID, company);
        }
        
        public string Updatepromoinventory(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.Updatepromoinventory(Inventory, ProductID, VariantID, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdatepromoinventoryAsync(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdatepromoinventoryAsync(Inventory, ProductID, VariantID, company);
        }
        
        public string UpdateSFPinventorybycompany(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateSFPinventorybycompany(Inventory, ProductID, VariantID, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSFPinventorybycompanyAsync(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateSFPinventorybycompanyAsync(Inventory, ProductID, VariantID, company);
        }
        
        public string UpdateSFPinventory(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateSFPinventory(Inventory, ProductID, VariantID, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSFPinventoryAsync(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateSFPinventoryAsync(Inventory, ProductID, VariantID, company);
        }
        
        public string UpdateFBAinventory(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateFBAinventory(Inventory, ProductID, VariantID, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFBAinventoryAsync(int Inventory, int ProductID, int VariantID, string company)
        {
            return base.Channel.UpdateFBAinventoryAsync(Inventory, ProductID, VariantID, company);
        }
        
        public string UpdateProductQuantityforAST(int Inventory, int ProductID, int VariantID, string isType, long supplierid)
        {
            return base.Channel.UpdateProductQuantityforAST(Inventory, ProductID, VariantID, isType, supplierid);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductQuantityforASTAsync(int Inventory, int ProductID, int VariantID, string isType, long supplierid)
        {
            return base.Channel.UpdateProductQuantityforASTAsync(Inventory, ProductID, VariantID, isType, supplierid);
        }
        
        public ServiceReference1.getinventorybycompanyResponseGetinventorybycompanyResult getinventorybycompany(string productid, string companyname)
        {
            return base.Channel.getinventorybycompany(productid, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getinventorybycompanyResponseGetinventorybycompanyResult> getinventorybycompanyAsync(string productid, string companyname)
        {
            return base.Channel.getinventorybycompanyAsync(productid, companyname);
        }
        
        public ServiceReference1.getinventoryResponseGetinventoryResult getinventory(string productid)
        {
            return base.Channel.getinventory(productid);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getinventoryResponseGetinventoryResult> getinventoryAsync(string productid)
        {
            return base.Channel.getinventoryAsync(productid);
        }
        
        public ServiceReference1.GetExpirydatewithskubarcodebycompanyResponseGetExpirydatewithskubarcodebycompanyResult GetExpirydatewithskubarcodebycompany(string sku, string barcode, string companyname)
        {
            return base.Channel.GetExpirydatewithskubarcodebycompany(sku, barcode, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirydatewithskubarcodebycompanyResponseGetExpirydatewithskubarcodebycompanyResult> GetExpirydatewithskubarcodebycompanyAsync(string sku, string barcode, string companyname)
        {
            return base.Channel.GetExpirydatewithskubarcodebycompanyAsync(sku, barcode, companyname);
        }
        
        public bool Updateexpirybybarcode(string dateold, System.DateTime datenew, int qty, string sku, string companyname, string email)
        {
            return base.Channel.Updateexpirybybarcode(dateold, datenew, qty, sku, companyname, email);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateexpirybybarcodeAsync(string dateold, System.DateTime datenew, int qty, string sku, string companyname, string email)
        {
            return base.Channel.UpdateexpirybybarcodeAsync(dateold, datenew, qty, sku, companyname, email);
        }
        
        public bool saveproductdeliverywithexpiryout(System.DateTime dttime, int qty, int deliveryid, string companyname, string barcode, string sku, string type)
        {
            return base.Channel.saveproductdeliverywithexpiryout(dttime, qty, deliveryid, companyname, barcode, sku, type);
        }
        
        public System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryoutAsync(System.DateTime dttime, int qty, int deliveryid, string companyname, string barcode, string sku, string type)
        {
            return base.Channel.saveproductdeliverywithexpiryoutAsync(dttime, qty, deliveryid, companyname, barcode, sku, type);
        }
        
        public ServiceReference1.GetExpirydatewithskubarcodeWithoutexpiryroomdateResponseGetExpirydatewithskubarcodeWithoutexpiryroomdateResult GetExpirydatewithskubarcodeWithoutexpiryroomdate(string sku, string barcode, string companyname)
        {
            return base.Channel.GetExpirydatewithskubarcodeWithoutexpiryroomdate(sku, barcode, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetExpirydatewithskubarcodeWithoutexpiryroomdateResponseGetExpirydatewithskubarcodeWithoutexpiryroomdateResult> GetExpirydatewithskubarcodeWithoutexpiryroomdateAsync(string sku, string barcode, string companyname)
        {
            return base.Channel.GetExpirydatewithskubarcodeWithoutexpiryroomdateAsync(sku, barcode, companyname);
        }
        
        public int checkexpiryqtybycompany(System.DateTime expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpiryqtybycompany(expiry, barcode, companyname, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpiryqtybycompanyAsync(System.DateTime expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpiryqtybycompanyAsync(expiry, barcode, companyname, sku);
        }
        
        public int checkexpiryqty(System.DateTime expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpiryqty(expiry, barcode, companyname, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpiryqtyAsync(System.DateTime expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpiryqtyAsync(expiry, barcode, companyname, sku);
        }
        
        public int checkexpiryqtyExactbydate(System.DateTime expiry, string companyname, string Barcode)
        {
            return base.Channel.checkexpiryqtyExactbydate(expiry, companyname, Barcode);
        }
        
        public System.Threading.Tasks.Task<int> checkexpiryqtyExactbydateAsync(System.DateTime expiry, string companyname, string Barcode)
        {
            return base.Channel.checkexpiryqtyExactbydateAsync(expiry, companyname, Barcode);
        }
        
        public bool transferinventorywithscanoutothercompany(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType)
        {
            return base.Channel.transferinventorywithscanoutothercompany(Barcode, CompanyFrom, CompanyTo, qty, byemail, scanType);
        }
        
        public System.Threading.Tasks.Task<bool> transferinventorywithscanoutothercompanyAsync(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType)
        {
            return base.Channel.transferinventorywithscanoutothercompanyAsync(Barcode, CompanyFrom, CompanyTo, qty, byemail, scanType);
        }
        
        public int checkexpirymessagebycompany(string expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpirymessagebycompany(expiry, barcode, companyname, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpirymessagebycompanyAsync(string expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpirymessagebycompanyAsync(expiry, barcode, companyname, sku);
        }
        
        public int checkexpirymessage(string expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpirymessage(expiry, barcode, companyname, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpirymessageAsync(string expiry, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpirymessageAsync(expiry, barcode, companyname, sku);
        }
        
        public bool transferinventorywithafterscanout(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType, System.DateTime exp1, int qty1, System.DateTime exp2, int qty2, System.DateTime exp3, int qty3, string expmsg, int qtymsg)
        {
            return base.Channel.transferinventorywithafterscanout(Barcode, CompanyFrom, CompanyTo, qty, byemail, scanType, exp1, qty1, exp2, qty2, exp3, qty3, expmsg, qtymsg);
        }
        
        public System.Threading.Tasks.Task<bool> transferinventorywithafterscanoutAsync(string Barcode, string CompanyFrom, string CompanyTo, int qty, string byemail, string scanType, System.DateTime exp1, int qty1, System.DateTime exp2, int qty2, System.DateTime exp3, int qty3, string expmsg, int qtymsg)
        {
            return base.Channel.transferinventorywithafterscanoutAsync(Barcode, CompanyFrom, CompanyTo, qty, byemail, scanType, exp1, qty1, exp2, qty2, exp3, qty3, expmsg, qtymsg);
        }
        
        public string UpdateInventoryQuantityByVarientexpirybycompany(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryQuantityByVarientexpirybycompany(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientexpirybycompanyAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryQuantityByVarientexpirybycompanyAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string UpdateexpiryInventoryByVarient(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateexpiryInventoryByVarient(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateexpiryInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateexpiryInventoryByVarientAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public string UpdateInventoryQuantityByVarientpromotioncompany(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateInventoryQuantityByVarientpromotioncompany(VarientId, mquantity, quantity, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientpromotioncompanyAsync(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateInventoryQuantityByVarientpromotioncompanyAsync(VarientId, mquantity, quantity, company);
        }
        
        public string UpdatepromotionInventoryByVarient(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdatepromotionInventoryByVarient(VarientId, mquantity, quantity, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdatepromotionInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdatepromotionInventoryByVarientAsync(VarientId, mquantity, quantity, company);
        }
        
        public string UpdateFBAInventoryByVarient(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateFBAInventoryByVarient(VarientId, mquantity, quantity, company);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFBAInventoryByVarientAsync(string VarientId, string mquantity, string quantity, string company)
        {
            return base.Channel.UpdateFBAInventoryByVarientAsync(VarientId, mquantity, quantity, company);
        }
        
        public string HelloWorld()
        {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync()
        {
            return base.Channel.HelloWorldAsync();
        }
        
        public int Getoldproductid(int pid)
        {
            return base.Channel.Getoldproductid(pid);
        }
        
        public System.Threading.Tasks.Task<int> GetoldproductidAsync(int pid)
        {
            return base.Channel.GetoldproductidAsync(pid);
        }
        
        public int Getoldvariantid(int vid)
        {
            return base.Channel.Getoldvariantid(vid);
        }
        
        public System.Threading.Tasks.Task<int> GetoldvariantidAsync(int vid)
        {
            return base.Channel.GetoldvariantidAsync(vid);
        }
        
        public int GetIssueIdByorderNumber(int OrderNumber)
        {
            return base.Channel.GetIssueIdByorderNumber(OrderNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetIssueIdByorderNumberAsync(int OrderNumber)
        {
            return base.Channel.GetIssueIdByorderNumberAsync(OrderNumber);
        }
        
        public string UpdateProductQuantity(string barcode, string quantity, string isType)
        {
            return base.Channel.UpdateProductQuantity(barcode, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductQuantityAsync(string barcode, string quantity, string isType)
        {
            return base.Channel.UpdateProductQuantityAsync(barcode, quantity, isType);
        }
        
        public string UpdateProductQuantityupdate(int Inventory, int ProductID, int VariantID, string isType, long supplierid)
        {
            return base.Channel.UpdateProductQuantityupdate(Inventory, ProductID, VariantID, isType, supplierid);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductQuantityupdateAsync(int Inventory, int ProductID, int VariantID, string isType, long supplierid)
        {
            return base.Channel.UpdateProductQuantityupdateAsync(Inventory, ProductID, VariantID, isType, supplierid);
        }
        
        public string UpdateProductQuantityforindia(int Inventory, int ProductID, int VariantID, string isType, long supplierid)
        {
            return base.Channel.UpdateProductQuantityforindia(Inventory, ProductID, VariantID, isType, supplierid);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductQuantityforindiaAsync(int Inventory, int ProductID, int VariantID, string isType, long supplierid)
        {
            return base.Channel.UpdateProductQuantityforindiaAsync(Inventory, ProductID, VariantID, isType, supplierid);
        }
        
        public string UpdateProductQuantity1(int Inventory, int ProductID, int VariantID, string isType)
        {
            return base.Channel.UpdateProductQuantity1(Inventory, ProductID, VariantID, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductQuantity1Async(int Inventory, int ProductID, int VariantID, string isType)
        {
            return base.Channel.UpdateProductQuantity1Async(Inventory, ProductID, VariantID, isType);
        }
        
        public string UpdateInventoryQuantity(string barcode, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantity(barcode, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityAsync(string barcode, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityAsync(barcode, mquantity, quantity, isType);
        }
        
        public string UpdateInventoryQuantityByVarient(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarient(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string UpdateInventoryQuantityByVarientexpiry(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientexpiry(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientexpiryAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientexpiryAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string UpdateInventoryByVarientexpiry(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientexpiry(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryByVarientexpiryAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientexpiryAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public int checkexpiryforscanoutwithsku(System.DateTime expiry, string barcode, string inventorytype, string sku)
        {
            return base.Channel.checkexpiryforscanoutwithsku(expiry, barcode, inventorytype, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpiryforscanoutwithskuAsync(System.DateTime expiry, string barcode, string inventorytype, string sku)
        {
            return base.Channel.checkexpiryforscanoutwithskuAsync(expiry, barcode, inventorytype, sku);
        }
        
        public int checkexpirymessageforscanoutwithsku(string expiry, string barcode, string inventorytype, string sku)
        {
            return base.Channel.checkexpirymessageforscanoutwithsku(expiry, barcode, inventorytype, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpirymessageforscanoutwithskuAsync(string expiry, string barcode, string inventorytype, string sku)
        {
            return base.Channel.checkexpirymessageforscanoutwithskuAsync(expiry, barcode, inventorytype, sku);
        }
        
        public string UpdateInventoryQuantityByVarientforindia(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientforindia(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientforindiaAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientforindiaAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string UpdateDeliveredQuantity(int DeliveredQuantity, int OrderNumber, int ShoppingCartRecID, int CustomerID, int ProductID, int VariantID)
        {
            return base.Channel.UpdateDeliveredQuantity(DeliveredQuantity, OrderNumber, ShoppingCartRecID, CustomerID, ProductID, VariantID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDeliveredQuantityAsync(int DeliveredQuantity, int OrderNumber, int ShoppingCartRecID, int CustomerID, int ProductID, int VariantID)
        {
            return base.Channel.UpdateDeliveredQuantityAsync(DeliveredQuantity, OrderNumber, ShoppingCartRecID, CustomerID, ProductID, VariantID);
        }
        
        public ServiceReference1.GetProductDetailResponseGetProductDetailResult GetProductDetail(string barcode)
        {
            return base.Channel.GetProductDetail(barcode);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductDetailResponseGetProductDetailResult> GetProductDetailAsync(string barcode)
        {
            return base.Channel.GetProductDetailAsync(barcode);
        }
        
        public ServiceReference1.GetOrderResponseGetOrderResult GetOrder(int orderId)
        {
            return base.Channel.GetOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderResponseGetOrderResult> GetOrderAsync(int orderId)
        {
            return base.Channel.GetOrderAsync(orderId);
        }
        
        public int IsPausedOrder(int orderId)
        {
            return base.Channel.IsPausedOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<int> IsPausedOrderAsync(int orderId)
        {
            return base.Channel.IsPausedOrderAsync(orderId);
        }
        
        public int IsFORCE_VOIDED(int orderId)
        {
            return base.Channel.IsFORCE_VOIDED(orderId);
        }
        
        public System.Threading.Tasks.Task<int> IsFORCE_VOIDEDAsync(int orderId)
        {
            return base.Channel.IsFORCE_VOIDEDAsync(orderId);
        }
        
        public ServiceReference1.GetCustomerResponseGetCustomerResult GetCustomer(int CustomerId)
        {
            return base.Channel.GetCustomer(CustomerId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetCustomerResponseGetCustomerResult> GetCustomerAsync(int CustomerId)
        {
            return base.Channel.GetCustomerAsync(CustomerId);
        }
        
        public ServiceReference1.GetBarCodeByVIdResponseGetBarCodeByVIdResult GetBarCodeByVId(string SKUSuffix, int VariantId)
        {
            return base.Channel.GetBarCodeByVId(SKUSuffix, VariantId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetBarCodeByVIdResponseGetBarCodeByVIdResult> GetBarCodeByVIdAsync(string SKUSuffix, int VariantId)
        {
            return base.Channel.GetBarCodeByVIdAsync(SKUSuffix, VariantId);
        }
        
        public string Getcompanyorder(string OrderId)
        {
            return base.Channel.Getcompanyorder(OrderId);
        }
        
        public System.Threading.Tasks.Task<string> GetcompanyorderAsync(string OrderId)
        {
            return base.Channel.GetcompanyorderAsync(OrderId);
        }
        
        public string Getcompanyname(int OrderId)
        {
            return base.Channel.Getcompanyname(OrderId);
        }
        
        public System.Threading.Tasks.Task<string> GetcompanynameAsync(int OrderId)
        {
            return base.Channel.GetcompanynameAsync(OrderId);
        }
        
        public ServiceReference1.GetVariantByPIdnSKuResponseGetVariantByPIdnSKuResult GetVariantByPIdnSKu(string SKUSuffix, int ProductId)
        {
            return base.Channel.GetVariantByPIdnSKu(SKUSuffix, ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetVariantByPIdnSKuResponseGetVariantByPIdnSKuResult> GetVariantByPIdnSKuAsync(string SKUSuffix, int ProductId)
        {
            return base.Channel.GetVariantByPIdnSKuAsync(SKUSuffix, ProductId);
        }
        
        public ServiceReference1.GetBarCodeByPIdwithcompanyResponseGetBarCodeByPIdwithcompanyResult GetBarCodeByPIdwithcompany(string SKU, int ProductId, string companyname)
        {
            return base.Channel.GetBarCodeByPIdwithcompany(SKU, ProductId, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetBarCodeByPIdwithcompanyResponseGetBarCodeByPIdwithcompanyResult> GetBarCodeByPIdwithcompanyAsync(string SKU, int ProductId, string companyname)
        {
            return base.Channel.GetBarCodeByPIdwithcompanyAsync(SKU, ProductId, companyname);
        }
        
        public ServiceReference1.ArrayOfXElement getwarehouseanouncement(string email)
        {
            return base.Channel.getwarehouseanouncement(email);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> getwarehouseanouncementAsync(string email)
        {
            return base.Channel.getwarehouseanouncementAsync(email);
        }
        
        public bool Updateexpirybybarcodemsg(string dateold, string datenew, int qty, string sku, string companyname, string email)
        {
            return base.Channel.Updateexpirybybarcodemsg(dateold, datenew, qty, sku, companyname, email);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateexpirybybarcodemsgAsync(string dateold, string datenew, int qty, string sku, string companyname, string email)
        {
            return base.Channel.UpdateexpirybybarcodemsgAsync(dateold, datenew, qty, sku, companyname, email);
        }
        
        public int SaveProductDelivery(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment)
        {
            return base.Channel.SaveProductDelivery(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductDeliveryAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName, 
                    string comment)
        {
            return base.Channel.SaveProductDeliveryAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName, comment);
        }
        
        public ServiceReference1.GetBarCodeByPIdskuResponseGetBarCodeByPIdskuResult GetBarCodeByPIdsku(string SKU, int ProductId, string companyname)
        {
            return base.Channel.GetBarCodeByPIdsku(SKU, ProductId, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetBarCodeByPIdskuResponseGetBarCodeByPIdskuResult> GetBarCodeByPIdskuAsync(string SKU, int ProductId, string companyname)
        {
            return base.Channel.GetBarCodeByPIdskuAsync(SKU, ProductId, companyname);
        }
        
        public ServiceReference1.GetSKUByOrderResponseGetSKUByOrderResult GetSKUByOrder(int OrderNumber, int VariantId)
        {
            return base.Channel.GetSKUByOrder(OrderNumber, VariantId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetSKUByOrderResponseGetSKUByOrderResult> GetSKUByOrderAsync(int OrderNumber, int VariantId)
        {
            return base.Channel.GetSKUByOrderAsync(OrderNumber, VariantId);
        }
        
        public ServiceReference1.GetProductResponseGetProductResult GetProduct(int ProductId)
        {
            return base.Channel.GetProduct(ProductId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetProductResponseGetProductResult> GetProductAsync(int ProductId)
        {
            return base.Channel.GetProductAsync(ProductId);
        }
        
        public string GetPopup(string email)
        {
            return base.Channel.GetPopup(email);
        }
        
        public System.Threading.Tasks.Task<string> GetPopupAsync(string email)
        {
            return base.Channel.GetPopupAsync(email);
        }
        
        public int UpdateDamageqtyupdated(int productid, int variantid, int qty, string companyname, string expdate, string email)
        {
            return base.Channel.UpdateDamageqtyupdated(productid, variantid, qty, companyname, expdate, email);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDamageqtyupdatedAsync(int productid, int variantid, int qty, string companyname, string expdate, string email)
        {
            return base.Channel.UpdateDamageqtyupdatedAsync(productid, variantid, qty, companyname, expdate, email);
        }
        
        public int SaveProductINdamageroom(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName)
        {
            return base.Channel.SaveProductINdamageroom(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, expdate, Inventoryfor, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductINdamageroomAsync(long ProductId, long VariantId, int damageqty, string SKU, string Barcode, string Email, string InvoiceNo, System.DateTime InvoiceDate, long SupplierId, string reson, decimal val, string Expmsg, string expdate, string Inventoryfor, string CompanyName)
        {
            return base.Channel.SaveProductINdamageroomAsync(ProductId, VariantId, damageqty, SKU, Barcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, val, Expmsg, expdate, Inventoryfor, CompanyName);
        }
        
        public ServiceReference1.GetDamageExpirydateResponseGetDamageExpirydateResult GetDamageExpirydate(string sku, string barcode, string inventoryfor)
        {
            return base.Channel.GetDamageExpirydate(sku, barcode, inventoryfor);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDamageExpirydateResponseGetDamageExpirydateResult> GetDamageExpirydateAsync(string sku, string barcode, string inventoryfor)
        {
            return base.Channel.GetDamageExpirydateAsync(sku, barcode, inventoryfor);
        }
        
        public ServiceReference1.GetDamageExpirydtResponseGetDamageExpirydtResult GetDamageExpirydt(string sku, string barcode, string companyname)
        {
            return base.Channel.GetDamageExpirydt(sku, barcode, companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDamageExpirydtResponseGetDamageExpirydtResult> GetDamageExpirydtAsync(string sku, string barcode, string companyname)
        {
            return base.Channel.GetDamageExpirydtAsync(sku, barcode, companyname);
        }
        
        public ServiceReference1.GetDamageExpiryResponseGetDamageExpiryResult GetDamageExpiry(string sku, string inventoryfor)
        {
            return base.Channel.GetDamageExpiry(sku, inventoryfor);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDamageExpiryResponseGetDamageExpiryResult> GetDamageExpiryAsync(string sku, string inventoryfor)
        {
            return base.Channel.GetDamageExpiryAsync(sku, inventoryfor);
        }
        
        public ServiceReference1.GetDamageExpirymsgResponseGetDamageExpirymsgResult GetDamageExpirymsg(string sku, string Companyname)
        {
            return base.Channel.GetDamageExpirymsg(sku, Companyname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetDamageExpirymsgResponseGetDamageExpirymsgResult> GetDamageExpirymsgAsync(string sku, string Companyname)
        {
            return base.Channel.GetDamageExpirymsgAsync(sku, Companyname);
        }
        
        public ServiceReference1.GetShoppingCartResponseGetShoppingCartResult GetShoppingCart(int OrderId)
        {
            return base.Channel.GetShoppingCart(OrderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartResponseGetShoppingCartResult> GetShoppingCartAsync(int OrderId)
        {
            return base.Channel.GetShoppingCartAsync(OrderId);
        }
        
        public ServiceReference1.GetShoppingCartMultipleResponseGetShoppingCartMultipleResult GetShoppingCartMultiple(int OrderId)
        {
            return base.Channel.GetShoppingCartMultiple(OrderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartMultipleResponseGetShoppingCartMultipleResult> GetShoppingCartMultipleAsync(int OrderId)
        {
            return base.Channel.GetShoppingCartMultipleAsync(OrderId);
        }
        
        public string UpdateMultipleShopingCart(int Ordernumber, int productid, int variantid, int qty, string deliverby, string companyname)
        {
            return base.Channel.UpdateMultipleShopingCart(Ordernumber, productid, variantid, qty, deliverby, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMultipleShopingCartAsync(int Ordernumber, int productid, int variantid, int qty, string deliverby, string companyname)
        {
            return base.Channel.UpdateMultipleShopingCartAsync(Ordernumber, productid, variantid, qty, deliverby, companyname);
        }
        
        public ServiceReference1.GetShoppingCartupdateResponseGetShoppingCartupdateResult GetShoppingCartupdate(int OrderId)
        {
            return base.Channel.GetShoppingCartupdate(OrderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetShoppingCartupdateResponseGetShoppingCartupdateResult> GetShoppingCartupdateAsync(int OrderId)
        {
            return base.Channel.GetShoppingCartupdateAsync(OrderId);
        }
        
        public int UpdateProductScanIn(
                    long ScanInId, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    long ScanInQty, 
                    string InvoiceNo, 
                    string Reason, 
                    long DockedNo, 
                    string Value, 
                    string Quantity, 
                    decimal CreditStockPayment, 
                    long CreditNoteNo, 
                    string Email, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    string msg, 
                    string dtime, 
                    string CompanyName)
        {
            return base.Channel.UpdateProductScanIn(ScanInId, InvoiceDate, SupplierId, ScanInQty, InvoiceNo, Reason, DockedNo, Value, Quantity, CreditStockPayment, CreditNoteNo, Email, OrderRecievePrice, OrderSystemId, msg, dtime, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductScanInAsync(
                    long ScanInId, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    long ScanInQty, 
                    string InvoiceNo, 
                    string Reason, 
                    long DockedNo, 
                    string Value, 
                    string Quantity, 
                    decimal CreditStockPayment, 
                    long CreditNoteNo, 
                    string Email, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    string msg, 
                    string dtime, 
                    string CompanyName)
        {
            return base.Channel.UpdateProductScanInAsync(ScanInId, InvoiceDate, SupplierId, ScanInQty, InvoiceNo, Reason, DockedNo, Value, Quantity, CreditStockPayment, CreditNoteNo, Email, OrderRecievePrice, OrderSystemId, msg, dtime, CompanyName);
        }
        
        public int Update_OrderSystem(long OrderSystemId, long Release_OrderSystemId)
        {
            return base.Channel.Update_OrderSystem(OrderSystemId, Release_OrderSystemId);
        }
        
        public System.Threading.Tasks.Task<int> Update_OrderSystemAsync(long OrderSystemId, long Release_OrderSystemId)
        {
            return base.Channel.Update_OrderSystemAsync(OrderSystemId, Release_OrderSystemId);
        }
        
        public int UpdateProductDelivery(long DeliveryId, System.DateTime InvoiceDate, long SupplierId, long DeliveredQty, string InvoiceNo, string Reason, long DockedNo, string Value, string Quantity, decimal CreditStockPayment, long CreditNoteNo, string valueexcvat, string valueincvat, long manualordno, string Email)
        {
            return base.Channel.UpdateProductDelivery(DeliveryId, InvoiceDate, SupplierId, DeliveredQty, InvoiceNo, Reason, DockedNo, Value, Quantity, CreditStockPayment, CreditNoteNo, valueexcvat, valueincvat, manualordno, Email);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductDeliveryAsync(long DeliveryId, System.DateTime InvoiceDate, long SupplierId, long DeliveredQty, string InvoiceNo, string Reason, long DockedNo, string Value, string Quantity, decimal CreditStockPayment, long CreditNoteNo, string valueexcvat, string valueincvat, long manualordno, string Email)
        {
            return base.Channel.UpdateProductDeliveryAsync(DeliveryId, InvoiceDate, SupplierId, DeliveredQty, InvoiceNo, Reason, DockedNo, Value, Quantity, CreditStockPayment, CreditNoteNo, valueexcvat, valueincvat, manualordno, Email);
        }
        
        public int UpdateOrderSystem(long OrderSystemId)
        {
            return base.Channel.UpdateOrderSystem(OrderSystemId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderSystemAsync(long OrderSystemId)
        {
            return base.Channel.UpdateOrderSystemAsync(OrderSystemId);
        }
        
        public int UpdateOrderSystemBackOrder(long OrderSystemId, int qty)
        {
            return base.Channel.UpdateOrderSystemBackOrder(OrderSystemId, qty);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderSystemBackOrderAsync(long OrderSystemId, int qty)
        {
            return base.Channel.UpdateOrderSystemBackOrderAsync(OrderSystemId, qty);
        }
        
        public int UpdateOrderTransactionState(long OrderId)
        {
            return base.Channel.UpdateOrderTransactionState(OrderId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderTransactionStateAsync(long OrderId)
        {
            return base.Channel.UpdateOrderTransactionStateAsync(OrderId);
        }
        
        public bool Updateorderstatusafterscanin(long Productid)
        {
            return base.Channel.Updateorderstatusafterscanin(Productid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateorderstatusafterscaninAsync(long Productid)
        {
            return base.Channel.UpdateorderstatusafterscaninAsync(Productid);
        }
        
        public bool Updateorderstatusaftertransferqty(long Productid)
        {
            return base.Channel.Updateorderstatusaftertransferqty(Productid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateorderstatusaftertransferqtyAsync(long Productid)
        {
            return base.Channel.UpdateorderstatusaftertransferqtyAsync(Productid);
        }
        
        public bool Updateorderstatusafterscanout(long Productid)
        {
            return base.Channel.Updateorderstatusafterscanout(Productid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateorderstatusafterscanoutAsync(long Productid)
        {
            return base.Channel.UpdateorderstatusafterscanoutAsync(Productid);
        }
        
        public int SaveProductScanInupdated(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment)
        {
            return base.Channel.SaveProductScanInupdated(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductScanInupdatedAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment)
        {
            return base.Channel.SaveProductScanInupdatedAsync(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment);
        }
        
        public int UpdateProductDeliveryexpiry(long DeliveryId, long DeliveredQty, string expmsg, string expdate)
        {
            return base.Channel.UpdateProductDeliveryexpiry(DeliveryId, DeliveredQty, expmsg, expdate);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductDeliveryexpiryAsync(long DeliveryId, long DeliveredQty, string expmsg, string expdate)
        {
            return base.Channel.UpdateProductDeliveryexpiryAsync(DeliveryId, DeliveredQty, expmsg, expdate);
        }
        
        public ServiceReference1.getDeliveryexpiryResponseGetDeliveryexpiryResult getDeliveryexpiry(long DeliveryId)
        {
            return base.Channel.getDeliveryexpiry(DeliveryId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getDeliveryexpiryResponseGetDeliveryexpiryResult> getDeliveryexpiryAsync(long DeliveryId)
        {
            return base.Channel.getDeliveryexpiryAsync(DeliveryId);
        }
        
        public int SaveProductDeliverynew(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName)
        {
            return base.Channel.SaveProductDeliverynew(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductDeliverynewAsync(
                    long OrderNumber, 
                    long ProductId, 
                    long VariantId, 
                    int DeliveredQuantity, 
                    string DeliveredSKU, 
                    string DeliveredBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    string ValueExcVat, 
                    string ValueIncVat, 
                    long ManualOrderNo, 
                    long CreditNoteNo, 
                    string Inventoryfor, 
                    string CompanyName)
        {
            return base.Channel.SaveProductDeliverynewAsync(OrderNumber, ProductId, VariantId, DeliveredQuantity, DeliveredSKU, DeliveredBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, ValueExcVat, ValueIncVat, ManualOrderNo, CreditNoteNo, Inventoryfor, CompanyName);
        }
        
        public int SaveProductScanIn(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo)
        {
            return base.Channel.SaveProductScanIn(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment, DeliveryNoteNo);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductScanInAsync(
                    long ProductId, 
                    long VariantId, 
                    int ScanInQuantity, 
                    string ScanInSKU, 
                    string ScanInBarcode, 
                    string Email, 
                    string InvoiceNo, 
                    System.DateTime InvoiceDate, 
                    long SupplierId, 
                    string reson, 
                    long dockedno, 
                    string val, 
                    string qty, 
                    decimal creditStock, 
                    long creditnote, 
                    decimal OrderRecievePrice, 
                    long OrderSystemId, 
                    System.DateTime Exppirydate, 
                    string inventorytype, 
                    string Expirymessage, 
                    string CompanyName, 
                    string comment, 
                    string DeliveryNoteNo)
        {
            return base.Channel.SaveProductScanInAsync(ProductId, VariantId, ScanInQuantity, ScanInSKU, ScanInBarcode, Email, InvoiceNo, InvoiceDate, SupplierId, reson, dockedno, val, qty, creditStock, creditnote, OrderRecievePrice, OrderSystemId, Exppirydate, inventorytype, Expirymessage, CompanyName, comment, DeliveryNoteNo);
        }
        
        public bool Updateexpirymsg(string dateold, string datenew, int qty, string sku)
        {
            return base.Channel.Updateexpirymsg(dateold, datenew, qty, sku);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateexpirymsgAsync(string dateold, string datenew, int qty, string sku)
        {
            return base.Channel.UpdateexpirymsgAsync(dateold, datenew, qty, sku);
        }
        
        public ServiceReference1.GetOrderQuentityResponseGetOrderQuentityResult GetOrderQuentity(int OrderNumber)
        {
            return base.Channel.GetOrderQuentity(OrderNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderQuentityResponseGetOrderQuentityResult> GetOrderQuentityAsync(int OrderNumber)
        {
            return base.Channel.GetOrderQuentityAsync(OrderNumber);
        }
        
        public bool Ispromotionstartwithsupplier(int productid, long supplierid)
        {
            return base.Channel.Ispromotionstartwithsupplier(productid, supplierid);
        }
        
        public System.Threading.Tasks.Task<bool> IspromotionstartwithsupplierAsync(int productid, long supplierid)
        {
            return base.Channel.IspromotionstartwithsupplierAsync(productid, supplierid);
        }
        
        public bool Ispromotionstart(int productid)
        {
            return base.Channel.Ispromotionstart(productid);
        }
        
        public System.Threading.Tasks.Task<bool> IspromotionstartAsync(int productid)
        {
            return base.Channel.IspromotionstartAsync(productid);
        }
        
        public bool IsCategoryLockedForInventoryCount(string CategoryId)
        {
            return base.Channel.IsCategoryLockedForInventoryCount(CategoryId);
        }
        
        public System.Threading.Tasks.Task<bool> IsCategoryLockedForInventoryCountAsync(string CategoryId)
        {
            return base.Channel.IsCategoryLockedForInventoryCountAsync(CategoryId);
        }
        
        public int checkexpiryqtybymultipledate(System.DateTime expiry, System.DateTime expiry2, System.DateTime expiry3, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpiryqtybymultipledate(expiry, expiry2, expiry3, barcode, companyname, sku);
        }
        
        public System.Threading.Tasks.Task<int> checkexpiryqtybymultipledateAsync(System.DateTime expiry, System.DateTime expiry2, System.DateTime expiry3, string barcode, string companyname, string sku)
        {
            return base.Channel.checkexpiryqtybymultipledateAsync(expiry, expiry2, expiry3, barcode, companyname, sku);
        }
        
        public ServiceReference1.GetTrackedOrderResponseGetTrackedOrderResult GetTrackedOrder(string ordernumber)
        {
            return base.Channel.GetTrackedOrder(ordernumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetTrackedOrderResponseGetTrackedOrderResult> GetTrackedOrderAsync(string ordernumber)
        {
            return base.Channel.GetTrackedOrderAsync(ordernumber);
        }
        
        public bool saveproductdeliverywithexpiryoutbymultipledate(System.DateTime dttime, System.DateTime dttime2, System.DateTime dttime3, int qty, int deliveryid, string companyname, string barcode, string sku, string type)
        {
            return base.Channel.saveproductdeliverywithexpiryoutbymultipledate(dttime, dttime2, dttime3, qty, deliveryid, companyname, barcode, sku, type);
        }
        
        public System.Threading.Tasks.Task<bool> saveproductdeliverywithexpiryoutbymultipledateAsync(System.DateTime dttime, System.DateTime dttime2, System.DateTime dttime3, int qty, int deliveryid, string companyname, string barcode, string sku, string type)
        {
            return base.Channel.saveproductdeliverywithexpiryoutbymultipledateAsync(dttime, dttime2, dttime3, qty, deliveryid, companyname, barcode, sku, type);
        }
        
        public bool IsRecountstart(int productid)
        {
            return base.Channel.IsRecountstart(productid);
        }
        
        public System.Threading.Tasks.Task<bool> IsRecountstartAsync(int productid)
        {
            return base.Channel.IsRecountstartAsync(productid);
        }
        
        public string TransferfromMaintoSFP(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromMaintoSFP(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfromMaintoSFPAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromMaintoSFPAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferfromSFPtoMain(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtoMain(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfromSFPtoMainAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtoMainAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferfromSFPtopromotion(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtopromotion(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfromSFPtopromotionAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfromSFPtopromotionAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferfrompromotiontoSFP(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoSFP(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfrompromotiontoSFPAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoSFPAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string TransferfrompromotiontoMain(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoMain(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> TransferfrompromotiontoMainAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.TransferfrompromotiontoMainAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string UpdateInventoryQuantityByVarientPscanoutSFP(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientPscanoutSFP(VarientId, mquantity, quantity, isType);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryQuantityByVarientPscanoutSFPAsync(string VarientId, string mquantity, string quantity, string isType)
        {
            return base.Channel.UpdateInventoryQuantityByVarientPscanoutSFPAsync(VarientId, mquantity, quantity, isType);
        }
        
        public string UpdateInventoryByVarientPscanoutSFP(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientPscanoutSFP(VarientId, mquantity, quantity, companyname);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInventoryByVarientPscanoutSFPAsync(string VarientId, string mquantity, string quantity, string companyname)
        {
            return base.Channel.UpdateInventoryByVarientPscanoutSFPAsync(VarientId, mquantity, quantity, companyname);
        }
        
        public ServiceReference1.getinventoryallResponseGetinventoryallResult getinventoryall(string productid, string countryname)
        {
            return base.Channel.getinventoryall(productid, countryname);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getinventoryallResponseGetinventoryallResult> getinventoryallAsync(string productid, string countryname)
        {
            return base.Channel.getinventoryallAsync(productid, countryname);
        }
        
        public ServiceReference1.getBankHolidaysResponseGetBankHolidaysResult getBankHolidays()
        {
            return base.Channel.getBankHolidays();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.getBankHolidaysResponseGetBankHolidaysResult> getBankHolidaysAsync()
        {
            return base.Channel.getBankHolidaysAsync();
        }
        
        public int SaveAsShipped(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber)
        {
            return base.Channel.SaveAsShipped(Carreir, TrackingNumber, ShippedOn, OrderNumber);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsShippedAsync(string Carreir, string TrackingNumber, System.DateTime ShippedOn, int OrderNumber)
        {
            return base.Channel.SaveAsShippedAsync(Carreir, TrackingNumber, ShippedOn, OrderNumber);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BarcodeWebServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BarcodeWebServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BarcodeWebServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://www.travelbookplus.com/Barcodewebservice.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.BarcodeWebServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://www.travelbookplus.com/Barcodewebservice.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BarcodeWebServiceSoap,
            
            BarcodeWebServiceSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.2.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
